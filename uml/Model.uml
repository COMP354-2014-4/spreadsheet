<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_7STXcKMsEeOp6bjTuv3lfw" name="Model">
    <eAnnotations xmi:id="_8QA84KMsEeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_8QBj8KMsEeOp6bjTuv3lfw" source="codegen">
        <details xmi:id="_8QBj8aMsEeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src"/>
        <details xmi:id="_JFGY8KMtEeOp6bjTuv3lfw" key="AssociatedSourceCode" value="/COMP354-Spreadsheet/src/utils/Formula.java;3014617587/1;/COMP354-Spreadsheet/src-test/GridTest.java;2192506501/1;/COMP354-Spreadsheet/src/Driver.java;1834035688/1;/COMP354-Spreadsheet/src/spreadsheet/Cell.java;445334591/1;/COMP354-Spreadsheet/src/spreadsheet/Grid.java;3471347071/1;/COMP354-Spreadsheet/src/spreadsheet/SSCellRenderer.java;1766045849/1;/COMP354-Spreadsheet/src/spreadsheet/Spreadsheet.java;132566989/1;/COMP354-Spreadsheet/src/spreadsheet/SSTable.java;1889975320/1;/COMP354-Spreadsheet/src/spreadsheet/SSTableRenderer.java;2920649407/1;/COMP354-Spreadsheet/src/spreadsheet/SSGUI.java;3550343535/1;/COMP354-Spreadsheet/src-test/CellTest.java;2150831555/1;/COMP354-Spreadsheet/src/utils/Token.java;1686087865/1;/COMP354-Spreadsheet/src/utils/TokenStack.java;1422304373/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_A10qYKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_A16J8KMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_A16xAKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_A17YEKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_A17_IKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_A19NQKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_A190UKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_A1_CcKMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_A2Cs0KMtEeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_A2k4UKMtEeOp6bjTuv3lfw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_A2nUkKMtEeOp6bjTuv3lfw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_F9rVAKMtEeOp6bjTuv3lfw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GAjp4KMtEeOp6bjTuv3lfw" name="Scanner"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GA1WsKMtEeOp6bjTuv3lfw" name="Observer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GA95kKMtEeOp6bjTuv3lfw" name="Observable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GCBpgKMtEeOp6bjTuv3lfw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GCI-QKMtEeOp6bjTuv3lfw" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GCRhIKMtEeOp6bjTuv3lfw" name="Set"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_A4La0KMtEeOp6bjTuv3lfw" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_CFlCEKMtEeOp6bjTuv3lfw" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_F_X-IKMtEeOp6bjTuv3lfw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_F_f58KMtEeOp6bjTuv3lfw" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_F_qSAKMtEeOp6bjTuv3lfw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_F_zb8KMtEeOp6bjTuv3lfw" name="ObjectOutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BLuo8KMtEeOp6bjTuv3lfw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_BU7BMKMtEeOp6bjTuv3lfw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_GNFqAKMtEeOp6bjTuv3lfw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GOVnMKMtEeOp6bjTuv3lfw" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_GL7zcaMtEeOp6bjTuv3lfw" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GL_d0KMtEeOp6bjTuv3lfw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMvEsKMtEeOp6bjTuv3lfw" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNSeUKMtEeOp6bjTuv3lfw" name="Toolkit"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_GJY1wKMtEeOp6bjTuv3lfw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_GJaD4KMtEeOp6bjTuv3lfw" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GKtEYKMtEeOp6bjTuv3lfw" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A2uCQKMtEeOp6bjTuv3lfw" name="utils">
      <packagedElement xmi:type="uml:Package" xmi:id="_A2y6wKMtEeOp6bjTuv3lfw" name="Token">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_F9-P8KMtEeOp6bjTuv3lfw" name="TokenType"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CDiasKMtEeOp6bjTuv3lfw" name="Formula">
        <ownedComment xmi:id="_GYWe0KMtEeOp6bjTuv3lfw">
          <body>Formula class is a static class&#xD;
that contains the method to evaluate&#xD;
arithmetics operation given in a string format&#xD;
with &quot;excel-like&quot; syntax&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_P8MsQqMwEeOp6bjTuv3lfw" name="tokenStack" type="_Cas9gKMtEeOp6bjTuv3lfw" association="_P8MFMKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_P8NTUKMwEeOp6bjTuv3lfw" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_P8NTUaMwEeOp6bjTuv3lfw" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Q5ZUUKMwEeOp6bjTuv3lfw" name="cell" type="_CFb4IKMtEeOp6bjTuv3lfw" association="_Q5YtQKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q5ZUUaMwEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q5ZUUqMwEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_HnufMqMxEeOp6bjTuv3lfw" name="tokens" type="_CYCrEKMtEeOp6bjTuv3lfw" association="_Hnt4IKMxEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HnvGQKMxEeOp6bjTuv3lfw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HnvGQaMxEeOp6bjTuv3lfw" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUOMwKMtEeOp6bjTuv3lfw" name="listReferencedCells" specification="_F-PVsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GUOz0KMtEeOp6bjTuv3lfw" name="originCell" type="_CFb4IKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUOz0aMtEeOp6bjTuv3lfw" type="_F9rVAKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>String formula = originCell.getValue();&#xD;
		Grid grid = originCell.getGrid();&#xD;
		ArrayList&lt;Token> tokens = new ArrayList&lt;Token>();&#xD;
		ArrayList&lt;Cell> cells = new ArrayList&lt;Cell>();&#xD;
		ArrayList&lt;Cell> origin = new ArrayList&lt;Cell>(); //Used to check if those cells contains circular ref&#xD;
		origin.add(originCell);&#xD;
		&#xD;
		if(Formula.tokenize(tokens, formula)){//Convert the string in a list of token&#xD;
			for(Token tok : tokens){&#xD;
				if(tok.getType() == TokenType.CEL){//extract the cell from the list of token&#xD;
					Cell cell = grid.getCell(tok.getCol(), tok.getRow());&#xD;
					cells.add(cell);&#xD;
				}&#xD;
			}&#xD;
			if( !Formula.isCircular(origin, cells) ){//checks for circularity&#xD;
				return cells;&#xD;
				&#xD;
			}else{&#xD;
				throw new Exception(&quot;Circular formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
				&#xD;
			}&#xD;
			&#xD;
		}else{&#xD;
			throw new Exception(&quot;Invalid formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUX9wKMtEeOp6bjTuv3lfw" name="isCircular" specification="_GJ2IwKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GUX9waMtEeOp6bjTuv3lfw" name="visited" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUYk0KMtEeOp6bjTuv3lfw" name="toVisit" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUYk0aMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for(Cell sub : toVisit){&#xD;
			if(visited.contains(sub))//If a the cell has already been visited in this sub path, there's a cycle&#xD;
				return true;&#xD;
			ArrayList&lt;Cell> visitedCopy = visited;&#xD;
			ArrayList&lt;Cell> subToVisit = sub.getObservedCells();&#xD;
			if(subToVisit.size() == 0 || subToVisit == null)//if the sub path is at a dead end&#xD;
				return false;								//there is no cycle in that sub path&#xD;
			visitedCopy.add(sub);&#xD;
			return isCircular(visitedCopy, subToVisit);//Keep on going down the graph&#xD;
			&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUboIKMtEeOp6bjTuv3lfw" name="evaluateFormula" specification="_F-jewKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GUboIaMtEeOp6bjTuv3lfw" name="originCell" type="_CFb4IKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUboIqMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>String formula = originCell.getValue();&#xD;
		Grid grid = originCell.getGrid();&#xD;
		double res = 0;&#xD;
		ArrayList&lt;Token> tokens = new ArrayList&lt;Token>();&#xD;
		&#xD;
		//parsing the formula into tokens&#xD;
		if(Formula.tokenize(tokens, formula)){&#xD;
			&#xD;
			//creating the stacks tha will hold all of the operators&#xD;
			TokenStack operatorStack = new TokenStack();&#xD;
			TokenStack operandStack = new TokenStack();&#xD;
			&#xD;
			for(Token tok : tokens){&#xD;
				//if it is an operator&#xD;
				if(tok.getType() == TokenType.PLU || tok.getType() == TokenType.MIN || tok.getType() == TokenType.DIV || tok.getType() == TokenType.MUL || tok.getType() == TokenType.MOD ){&#xD;
					//While the new operator has a smaller precedence, evaluate the top of the operator stack&#xD;
					while(!operatorStack.isEmpty() &amp;&amp; operatorStack.top().getType() != TokenType.LPA  &amp;&amp; operatorStack.top().getPrecedence() >= tok.getPrecedence()){&#xD;
						double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
						operandStack.push(new Token(TokenType.NUM, val));&#xD;
					}&#xD;
					operatorStack.push(tok);//add the new operator to the stack&#xD;
				}else if(tok.getType() == TokenType.LPA ){&#xD;
					operatorStack.push(tok);&#xD;
				}else if(tok.getType() == TokenType.RPA ){&#xD;
					//evaluate the top operator until we hit the closing parenthesis&#xD;
					while(operatorStack.top().getType() != TokenType.LPA ){&#xD;
						double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
						operandStack.push(new Token(TokenType.NUM, val));&#xD;
					}&#xD;
					operatorStack.pop();//pop the closing parenthesis&#xD;
				}else{&#xD;
					//if tok is an operand&#xD;
					if(tok.getType() == TokenType.CEL){//if it's a cell and is value is valid&#xD;
						Cell cell = grid.getCell(tok.getCol(), tok.getRow());&#xD;
						if(cell != null &amp;&amp; cell.isValidValue()){&#xD;
							tok = new Token(TokenType.NUM, cell.getEvaluatedValue());//convert it to a num token&#xD;
						}else{&#xD;
							throw new Exception(&quot;Invalid formula. &quot; + tok.getCol() + tok.getRow() + &quot; is out of bound or has an invalid value&quot;);&#xD;
						}&#xD;
					}&#xD;
					operandStack.push(tok);//push the operand on the stack&#xD;
				}&#xD;
				&#xD;
			}&#xD;
			&#xD;
			while(!operatorStack.isEmpty()){//Empty the operator stack&#xD;
				double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
				operandStack.push(new Token(TokenType.NUM, val));&#xD;
			}&#xD;
			res = operandStack.pop().getValue();//get the final value on the operand stack&#xD;
			&#xD;
		}else{&#xD;
			throw new Exception(&quot;Invalid formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
		}&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUeEYKMtEeOp6bjTuv3lfw" name="calculateFirst" specification="_F-qzgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GUeEYaMtEeOp6bjTuv3lfw" name="operatorStack" type="_Cas9gKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUeEYqMtEeOp6bjTuv3lfw" name="operandStack" type="_Cas9gKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUeEY6MtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double val = 0;&#xD;
		&#xD;
		Token operator = operatorStack.pop();&#xD;
		if(operator.getType() != TokenType.LPA){&#xD;
			double operand2 = operandStack.pop().getValue();&#xD;
			double operand1 = operandStack.pop().getValue();&#xD;
			&#xD;
			if(operator.getType() == TokenType.PLU){&#xD;
				val = operand1 + operand2;&#xD;
			}else if(operator.getType() == TokenType.MIN){&#xD;
				val = operand1 - operand2;&#xD;
			}else if(operator.getType() == TokenType.DIV){&#xD;
				val = operand1 / operand2;&#xD;
			}else if(operator.getType() == TokenType.MUL){&#xD;
				val = operand1 * operand2;&#xD;
			}else if(operator.getType() == TokenType.MOD){&#xD;
				val = operand1 % operand2;&#xD;
			}&#xD;
		}&#xD;
		return val;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUhHsKMtEeOp6bjTuv3lfw" name="tokenize" specification="_GKLf8KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GUhHsaMtEeOp6bjTuv3lfw" name="tokens" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GUhHsqMtEeOp6bjTuv3lfw" name="formula">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GUhHs6MtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean expectedOperator = false;&#xD;
		int openParenthesis = 0;&#xD;
		char[] formulaChars = formula.toCharArray();&#xD;
		int i =  1; char character;&#xD;
		if(formulaChars[0] != '='){//If the formula doesn't starts with an &quot;=&quot;&#xD;
			return false;			//Invalid&#xD;
		}else{&#xD;
			while(i &lt; formulaChars.length){//Go through every char&#xD;
				switch(character = formulaChars[i]){&#xD;
					case ' ':// ingnores spaces and tabs&#xD;
					case '	':&#xD;
						break;&#xD;
					case '+':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.PLU, 1) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '-':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MIN, 1) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '*':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MUL, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '/':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.DIV, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '%':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MOD, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '(':&#xD;
						if(expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.LPA, 1) );&#xD;
						openParenthesis++;&#xD;
						break;&#xD;
					case ')':&#xD;
						if(!expectedOperator || openParenthesis &lt;= 0)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.RPA, 1) );&#xD;
						openParenthesis--;&#xD;
						break;&#xD;
					default:// expect and operand(either a cell or a double)&#xD;
						if(expectedOperator)&#xD;
							return false;&#xD;
						String s = String.valueOf(character);&#xD;
						if( s.matches(&quot;[A-Z]&quot;) ){&#xD;
							String tokenColValue = &quot;&quot;;&#xD;
							tokenColValue += s;&#xD;
							String TokenRowValue = &quot;&quot;;&#xD;
							int c = i+1;&#xD;
							if(c &lt; formulaChars.length){&#xD;
								String s2= String.valueOf(formulaChars[c]);&#xD;
								while( s2.matches(&quot;[A-Z]&quot;)){//Get the column name&#xD;
									tokenColValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								while(  s2.matches(&quot;[0-9]&quot;) ){//get the row num&#xD;
									TokenRowValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								i = c-1;&#xD;
							}&#xD;
							tokens.add( new Token(TokenType.CEL, tokenColValue, Integer.parseInt(TokenRowValue)) );&#xD;
						&#xD;
						//Double operand&#xD;
						}else if( s.matches(&quot;[0-9.]&quot;) ){&#xD;
							String tokenValue = &quot;&quot;;&#xD;
							tokenValue += s;&#xD;
							int c = i+1;&#xD;
							if(c &lt; formulaChars.length){//get the value of a double typed operand&#xD;
								String s2= String.valueOf(formulaChars[c]);&#xD;
								while( s2.matches(&quot;[0-9.]&quot;)){&#xD;
									tokenValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								i = c-1;&#xD;
							}&#xD;
							tokens.add( new Token(TokenType.NUM, Double.parseDouble(tokenValue)) );&#xD;
						&#xD;
						}else{//Not a cell nor a double typed operand&#xD;
							return false;&#xD;
								&#xD;
						}&#xD;
						expectedOperator = true;&#xD;
						&#xD;
						break;&#xD;
				&#xD;
				}&#xD;
				i++;&#xD;
			}&#xD;
		}&#xD;
		//if there is at least one unclosed parenthesis&#xD;
		//or if the formula ends with an operator&#xD;
		if(openParenthesis > 0 || !expectedOperator)&#xD;
			return false;&#xD;
		&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CDq9kKMtEeOp6bjTuv3lfw" name="Formula" visibility="private">
          <eAnnotations xmi:id="_CDq9kaMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CDrkoKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_CDvPAKMtEeOp6bjTuv3lfw" type="_CDiasKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_F-PVsKMtEeOp6bjTuv3lfw" name="listReferencedCells" isStatic="true" method="_GUOMwKMtEeOp6bjTuv3lfw" raisedException="_GJaD4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_F-Qj0KMtEeOp6bjTuv3lfw" name="originCell" type="_CFb4IKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GJVycKMtEeOp6bjTuv3lfw" type="_F9rVAKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_F-jewKMtEeOp6bjTuv3lfw" name="evaluateFormula" isStatic="true" method="_GUboIKMtEeOp6bjTuv3lfw" raisedException="_GJaD4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_F-kF0KMtEeOp6bjTuv3lfw" name="originCell" type="_CFb4IKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_F-l7AKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_F-qzgKMtEeOp6bjTuv3lfw" name="calculateFirst" visibility="private" isStatic="true" method="_GUeEYKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_F-rakKMtEeOp6bjTuv3lfw" name="operatorStack" type="_Cas9gKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_F-sosKMtEeOp6bjTuv3lfw" name="operandStack" type="_Cas9gKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_F-t20KMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_GJ2IwKMtEeOp6bjTuv3lfw" name="isCircular" visibility="private" isStatic="true" method="_GUX9wKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GJ2v0KMtEeOp6bjTuv3lfw" name="visited" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GJ398KMtEeOp6bjTuv3lfw" name="toVisit" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GJ5MEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_GKLf8KMtEeOp6bjTuv3lfw" name="tokenize" visibility="private" isStatic="true" method="_GUhHsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GKMHAKMtEeOp6bjTuv3lfw" name="tokens" type="_F9rVAKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GKNVIKMtEeOp6bjTuv3lfw" name="formula">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GKOjQKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CYCrEKMtEeOp6bjTuv3lfw" name="Token">
        <ownedComment xmi:id="_GY-w8KMtEeOp6bjTuv3lfw">
          <body>Simple class that hold the information&#xD;
of the various operator and operands that can&#xD;
be contained inside of a Formula &#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_GTXRIKMtEeOp6bjTuv3lfw" name="_type" visibility="private" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTa7gKMtEeOp6bjTuv3lfw" name="_value" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTfM8KMtEeOp6bjTuv3lfw" name="_col" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTjeYKMtEeOp6bjTuv3lfw" name="_row" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTmhsKMtEeOp6bjTuv3lfw" name="_precedence" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Mh0QEaMwEeOp6bjTuv3lfw" name="tokenStack" type="_Cas9gKMtEeOp6bjTuv3lfw" association="_Mh0QEKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mh03IKMwEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mh03IaMwEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Hnt4IaMxEeOp6bjTuv3lfw" name="formula" type="_CDiasKMtEeOp6bjTuv3lfw" association="_Hnt4IKMxEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HnufMKMxEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HnufMaMxEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXqiUKMtEeOp6bjTuv3lfw" name="Token" specification="_GHjCsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXqiUaMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GXqiUqMtEeOp6bjTuv3lfw" name="precedence">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GXqiU6MtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_precedence = precedence;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXuMsKMtEeOp6bjTuv3lfw" name="Token" specification="_GHpwYKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXuMsaMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GXuMsqMtEeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GXuzwKMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_value = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXxQAKMtEeOp6bjTuv3lfw" name="Token" specification="_GHv3AKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXxQAaMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GXxQAqMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GXxQA6MtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GXxQBKMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_col = col;&#xD;
		_row = row;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX0TUKMtEeOp6bjTuv3lfw" name="getType" specification="_CZJeUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX0TUaMtEeOp6bjTuv3lfw" type="_CYJ_0KMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _type;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX2IgKMtEeOp6bjTuv3lfw" name="getValue" specification="_CZOW0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX2vkKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return _value;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX39sKMtEeOp6bjTuv3lfw" name="getRow" specification="_CZTPUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX39saMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _row;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX5y4KMtEeOp6bjTuv3lfw" name="getCol" specification="_CZYu4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX5y4aMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _col;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX7oEKMtEeOp6bjTuv3lfw" name="getPrecedence" specification="_CZeOcKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX7oEaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _precedence;</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CZJeUKMtEeOp6bjTuv3lfw" name="getType" method="_GX0TUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GH3LwKMtEeOp6bjTuv3lfw" type="_CYJ_0KMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CZOW0KMtEeOp6bjTuv3lfw" name="getValue" method="_GX2IgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CZQzEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CZTPUKMtEeOp6bjTuv3lfw" name="getRow" method="_GX39sKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CZWSoKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CZYu4KMtEeOp6bjTuv3lfw" name="getCol" method="_GX5y4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CZbLIKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CZeOcKMtEeOp6bjTuv3lfw" name="getPrecedence" method="_GX7oEKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CZgDoKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_GHjCsKMtEeOp6bjTuv3lfw" name="Token" method="_GXqiUKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GHmtEKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GHnUIKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_GHjpwKMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GHle8KMtEeOp6bjTuv3lfw" name="precedence">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GHnUIaMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GHpwYKMtEeOp6bjTuv3lfw" name="Token" method="_GXuMsKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GHsMoKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GHszsKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_GHqXcKMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GHrlkKMtEeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GHszsaMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GHv3AKMtEeOp6bjTuv3lfw" name="Token" method="_GXxQAKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GH0IcKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GH0vgKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_GHweEKMtEeOp6bjTuv3lfw" name="type" type="_CYJ_0KMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GHxsMKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GHy6UKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GH0vgaMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_CYJ_0KMtEeOp6bjTuv3lfw" name="TokenType">
          <ownedLiteral xmi:id="_CYRUkKMtEeOp6bjTuv3lfw" name="PLU"/>
          <ownedLiteral xmi:id="_CYTJwKMtEeOp6bjTuv3lfw" name="MIN"/>
          <ownedLiteral xmi:id="_CYUX4KMtEeOp6bjTuv3lfw" name="MUL"/>
          <ownedLiteral xmi:id="_CYVmAKMtEeOp6bjTuv3lfw" name="DIV"/>
          <ownedLiteral xmi:id="_CYXbMKMtEeOp6bjTuv3lfw" name="MOD"/>
          <ownedLiteral xmi:id="_CYZQYKMtEeOp6bjTuv3lfw" name="LPA"/>
          <ownedLiteral xmi:id="_CYaegKMtEeOp6bjTuv3lfw" name="RPA"/>
          <ownedLiteral xmi:id="_CYbsoKMtEeOp6bjTuv3lfw" name="NUM"/>
          <ownedLiteral xmi:id="_CYc6wKMtEeOp6bjTuv3lfw" name="CEL"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Cas9gKMtEeOp6bjTuv3lfw" name="TokenStack">
        <ownedComment xmi:id="_GZAmIKMtEeOp6bjTuv3lfw">
          <body>Simple class that converts an&#xD;
Arraylist&lt;Token> into a stack of Token&#xD;
&#xD;
@author http://www2.lawrence.edu/fast/GREGGJ/CMSC150/Infix/Expressions.html</body>
        </ownedComment>
        <ownedAttribute xmi:id="_GTsoUKMtEeOp6bjTuv3lfw" name="tokens" visibility="private" type="_F9rVAKMtEeOp6bjTuv3lfw" association="_GhvEUKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_Mh03IqMwEeOp6bjTuv3lfw" name="token" type="_CYCrEKMtEeOp6bjTuv3lfw" aggregation="composite" association="_Mh0QEKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Mh03I6MwEeOp6bjTuv3lfw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Mh03JKMwEeOp6bjTuv3lfw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_P8MFMaMwEeOp6bjTuv3lfw" name="formula" type="_CDiasKMtEeOp6bjTuv3lfw" association="_P8MFMKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_P8MsQKMwEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_P8MsQaMwEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GX-rYKMtEeOp6bjTuv3lfw" name="TokenStack" specification="_Ca05UKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GX_ScKMtEeOp6bjTuv3lfw" type="_Cas9gKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>tokens = new ArrayList&lt;Token>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GYBusKMtEeOp6bjTuv3lfw" name="isEmpty" specification="_Ca5KwKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GYBusaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return tokens.size() == 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GYDj4KMtEeOp6bjTuv3lfw" name="top" specification="_Ca-qUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GYDj4aMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return tokens.get(tokens.size()-1);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GYGnMKMtEeOp6bjTuv3lfw" name="push" specification="_GH-ggKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GYGnMaMtEeOp6bjTuv3lfw" name="t" type="_CYCrEKMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>tokens.add(t);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GYH1UKMtEeOp6bjTuv3lfw" name="pop" specification="_CbF_EKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GYIcYKMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return tokens.remove(tokens.size()-1);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Ca05UKMtEeOp6bjTuv3lfw" name="TokenStack" method="_GX-rYKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_Ca2HcKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Ca2ugKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Ca3VkKMtEeOp6bjTuv3lfw" type="_Cas9gKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Ca5KwKMtEeOp6bjTuv3lfw" name="isEmpty" method="_GYBusKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_Ca8OEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Ca-qUKMtEeOp6bjTuv3lfw" name="top" method="_GYDj4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GH9SYKMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CbF_EKMtEeOp6bjTuv3lfw" name="pop" method="_GYH1UKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GICK4KMtEeOp6bjTuv3lfw" type="_CYCrEKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GH-ggKMtEeOp6bjTuv3lfw" name="push" method="_GYGnMKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GH_uoKMtEeOp6bjTuv3lfw" name="t" type="_CYCrEKMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GhvEUKMtEeOp6bjTuv3lfw" name="" memberEnd="_GhvEUaMtEeOp6bjTuv3lfw _GTsoUKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GhvEUaMtEeOp6bjTuv3lfw" name="" type="_Cas9gKMtEeOp6bjTuv3lfw" association="_GhvEUKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Mh0QEKMwEeOp6bjTuv3lfw" name="&lt;&lt;contains>>" memberEnd="_Mh0QEaMwEeOp6bjTuv3lfw _Mh03IqMwEeOp6bjTuv3lfw"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_P8MFMKMwEeOp6bjTuv3lfw" name="&lt;&lt;uses>>" memberEnd="_P8MFMaMwEeOp6bjTuv3lfw _P8MsQqMwEeOp6bjTuv3lfw"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Hnt4IKMxEeOp6bjTuv3lfw" name="&lt;&lt;uses>>" memberEnd="_Hnt4IaMxEeOp6bjTuv3lfw _HnufMqMxEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A2v3cKMtEeOp6bjTuv3lfw" name="spreadsheet">
      <packagedElement xmi:type="uml:Class" xmi:id="_CFb4IKMtEeOp6bjTuv3lfw" clientDependency="_CF0SoKMtEeOp6bjTuv3lfw _GKea4KMtEeOp6bjTuv3lfw" name="Cell">
        <ownedComment xmi:id="_GYclcKMtEeOp6bjTuv3lfw">
          <body>The Cell class is the representation of&#xD;
a single cell inside of a grid.&#xD;
Each cell is an observer that can observe&#xD;
many other cells in order to keep it's formula&#xD;
updated.&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <generalization xmi:id="_GLK-cKMtEeOp6bjTuv3lfw" general="_GA95kKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GPkWQKMtEeOp6bjTuv3lfw" name="_value" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GPlkYKMtEeOp6bjTuv3lfw" value="&quot;0&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GPoAoKMtEeOp6bjTuv3lfw" name="_evaluatedValue" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GPpOwKMtEeOp6bjTuv3lfw" value="0.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GPrrAKMtEeOp6bjTuv3lfw" name="_col" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GPwjgKMtEeOp6bjTuv3lfw" name="_row" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GP5tcKMtEeOp6bjTuv3lfw" name="_validValue" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GP67kKMtEeOp6bjTuv3lfw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GP9-4KMtEeOp6bjTuv3lfw" name="_observedCells" visibility="private" type="_F9rVAKMtEeOp6bjTuv3lfw" association="_GbFCsKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_y6WtsKMvEeOp6bjTuv3lfw" name="grid" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_y6WGoKMvEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y6X70KMvEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y6X70aMvEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Q5ZUU6MwEeOp6bjTuv3lfw" name="formula" type="_CDiasKMtEeOp6bjTuv3lfw" association="_Q5YtQKMwEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q5Z7YKMwEeOp6bjTuv3lfw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q5Z7YaMwEeOp6bjTuv3lfw" value="1"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_GKea4KMtEeOp6bjTuv3lfw" client="_CFb4IKMtEeOp6bjTuv3lfw" supplier="_GA1WsKMtEeOp6bjTuv3lfw" contract="_GA1WsKMtEeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_CF0SoKMtEeOp6bjTuv3lfw" client="_CFb4IKMtEeOp6bjTuv3lfw" supplier="_CFlCEKMtEeOp6bjTuv3lfw" contract="_CFlCEKMtEeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVL2EKMtEeOp6bjTuv3lfw" name="Cell" specification="_GBNKIKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVL2EaMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVL2EqMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVL2E6MtEeOp6bjTuv3lfw" name="grid" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GVL2FKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_observedCells = new ArrayList&lt;Cell>();&#xD;
		_col = col;&#xD;
		_row = row;&#xD;
		_grid = grid;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVNrQKMtEeOp6bjTuv3lfw" name="update" specification="_GK7t4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVNrQaMtEeOp6bjTuv3lfw" name="o" type="_GA95kKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GVNrQqMtEeOp6bjTuv3lfw" name="arg" type="_GKtEYKMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>this.evaluate();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVQukKMtEeOp6bjTuv3lfw" name="setValue" specification="_CGBuAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVQukaMtEeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>_value = value;&#xD;
		if(validateValue()){//Validate the value&#xD;
			_validValue = true;&#xD;
			if(!this.isNumeric(_value)){&#xD;
				try{&#xD;
					for(Cell cell : _observedCells){//Stops observing old cells&#xD;
						cell.deleteObserver(this);&#xD;
					}&#xD;
					_observedCells = Formula.listReferencedCells(this);//if exception: thrown here &lt;--&#xD;
					for(Cell cell : _observedCells){//starts observing the new cells&#xD;
						cell.addObserver(this);&#xD;
					}&#xD;
				}catch(Exception e){//Circular reference or invalid formula&#xD;
					System.out.println(e.getMessage());&#xD;
					_validValue = false;&#xD;
				}&#xD;
			}&#xD;
			this.evaluate();//Start the evaluation of the cell value&#xD;
		}else{&#xD;
			_validValue = false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVSjwKMtEeOp6bjTuv3lfw" name="validateValue" specification="_CGEKQKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVSjwaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String str = _value.trim(); // take off all the spaces for easier calculation&#xD;
&#xD;
		if( isNumeric(str) ){&#xD;
			return true;&#xD;
		}else{&#xD;
			return isValidChar(str) ;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVUY8KMtEeOp6bjTuv3lfw" name="evaluate" specification="_CGH0oKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVUY8aMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if(_validValue){&#xD;
			//if the string is an integer&#xD;
			if (this.isNumeric(_value)){&#xD;
				_evaluatedValue = Double.parseDouble(_value);&#xD;
				_validValue = true;&#xD;
				this.setChangeAndNotify();&#xD;
				return _evaluatedValue;&#xD;
			}else{//else call the formula function&#xD;
				// call the Formula.evaluateFormula function&#xD;
				try{&#xD;
					_evaluatedValue = Formula.evaluateFormula(this);&#xD;
					this.setChangeAndNotify();&#xD;
					_validValue = true;&#xD;
					return _evaluatedValue;&#xD;
				}catch(Exception e){&#xD;
					System.out.println(e.getMessage());&#xD;
					_validValue = false;&#xD;
					_evaluatedValue = 0;&#xD;
					this.setChangeAndNotify();&#xD;
					return _evaluatedValue;&#xD;
				}&#xD;
			}&#xD;
		}else{&#xD;
			this.setChangeAndNotify();&#xD;
			return 0;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVVnEKMtEeOp6bjTuv3lfw" name="display" specification="_CGK38KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(_validValue)&#xD;
			System.out.println(_evaluatedValue);&#xD;
		else&#xD;
			System.out.println(&quot;INVALID VALUE: &quot; + _value);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVW1MKMtEeOp6bjTuv3lfw" name="getDisplay" specification="_CGMtIKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVW1MaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(_validValue)&#xD;
			return String.valueOf(_evaluatedValue);&#xD;
		else&#xD;
			return&quot;INVALID VALUE: &quot; + _value;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVYqYKMtEeOp6bjTuv3lfw" name="isNumeric" specification="_CGQXgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVYqYaMtEeOp6bjTuv3lfw" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVYqYqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return s.matches(&quot;[-+]?\\d*\\.?\\d+&quot;);  &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVafkKMtEeOp6bjTuv3lfw" name="isValidChar" specification="_CGUo8KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVafkaMtEeOp6bjTuv3lfw" name="temp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVafkqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int counter = 0; // &quot;(&quot;, &quot; )&quot; counter&#xD;
		&#xD;
		int len = temp.length();&#xD;
		char c = temp.charAt(0);&#xD;
		if( c != '='){&#xD;
			//if the first character is not &quot;=&quot;&#xD;
			return false;&#xD;
	    }&#xD;
		&#xD;
		for(int i=1;i&lt;len;i++) {&#xD;
		    c = temp.charAt(i);&#xD;
		    // Test for all positive cases&#xD;
		&#xD;
			if( ('0'&lt;=c &amp;&amp; c&lt;='9') ||( 'A'&lt;=c &amp;&amp; c&lt;='Z' ) || &#xD;
					c=='-' || c=='+'|| c=='*'||  c=='/'|| &#xD;
					c=='(' || c==')' || c=='.' || c==' '){&#xD;
				&#xD;
				if(c=='(') {&#xD;
					counter ++;&#xD;
					continue;&#xD;
				}&#xD;
				if(c==')'){&#xD;
			        	counter --;&#xD;
			        	continue;&#xD;
			    }&#xD;
			}else{&#xD;
			    return false;&#xD;
			}&#xD;
		&#xD;
		}//the end of for&#xD;
		&#xD;
	    // if the &quot;(&quot; and &quot;)&quot; are not in pairs&#xD;
	 	if(counter != 0 ){&#xD;
	 		return false;&#xD;
	 	}else{&#xD;
	 		return true;&#xD;
	 	}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVbtsKMtEeOp6bjTuv3lfw" name="setChangeAndNotify" specification="_CGXFMKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>this.setChanged();&#xD;
		this.notifyObservers();&#xD;
		_grid.Display();&#xD;
		System.out.println(&quot;  &quot; + _evaluatedValue +&quot;   &quot; + _row + &quot;   &quot;  + Grid.colToNumber(_col));&#xD;
		if(_grid == null)&#xD;
			System.out.println(&quot;GRID IS NOT THERE&quot;);&#xD;
		if(_grid.getSSTable()== null)&#xD;
			System.out.println(&quot;SSTABLE IS NOT THERE&quot;);&#xD;
		&#xD;
		_grid.getSSTable().setValueAt(_evaluatedValue, _row-1, Grid.colToNumber(_col)-1);&#xD;
	&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVc70KMtEeOp6bjTuv3lfw" name="getValue" specification="_CGY6YKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVc70aMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _value;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVeJ8KMtEeOp6bjTuv3lfw" name="getEvaluatedValue" specification="_CGavkKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVeJ8aMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return _evaluatedValue;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVgmMKMtEeOp6bjTuv3lfw" name="getCol" specification="_CGdL0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVgmMaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _col;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVibYKMtEeOp6bjTuv3lfw" name="getRow" specification="_CGfBAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVibYaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _row;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVkQkKMtEeOp6bjTuv3lfw" name="getGrid" specification="_CGgPIKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVkQkaMtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _grid;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVmFwKMtEeOp6bjTuv3lfw" name="getObservedCells" specification="_CGj5gKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVmFwaMtEeOp6bjTuv3lfw" type="_F9rVAKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _observedCells;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVn68KMtEeOp6bjTuv3lfw" name="isValidValue" specification="_CGscYKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVn68aMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return _validValue;</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CGBuAKMtEeOp6bjTuv3lfw" name="setValue" method="_GVQukKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYfBsKMtEeOp6bjTuv3lfw">
            <body>Setter for the value. Stops observing any cell.&#xD;
	 * Sets it's new value.&#xD;
	 * If the new value is a formula, get a list of the&#xD;
	 * cell references inside of the formula. If the formula&#xD;
	 * isn't circular, starts observing them. Else set the&#xD;
	 * value as invalid&#xD;
	 * &#xD;
	 * @param value	The new value</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGCVEKMtEeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGEKQKMtEeOp6bjTuv3lfw" name="validateValue" visibility="private" method="_GVSjwKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYfowKMtEeOp6bjTuv3lfw">
            <body>Make sure that the value only has valid characters.&#xD;
     * &#xD;
     * @return	true if valid, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGFYYKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGH0oKMtEeOp6bjTuv3lfw" name="evaluate" method="_GVUY8KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYgP0KMtEeOp6bjTuv3lfw">
            <body>If the value is numeric, simply convert it into a&#xD;
	 * double. If the value is a formula, call Formula.evaluateFormula.&#xD;
	 * If the formula cannot be evaluated, the value will be set to invalid&#xD;
	 * and evaluated value will be set to 0.&#xD;
	 * After the evaluation, notify all the cell that observers it&#xD;
	 * &#xD;
	 * @return	The evaluated value or 0 if the formula cannot be evaluated&#xD;
	 * @see		Formula</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGJCwKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGK38KMtEeOp6bjTuv3lfw" name="display" method="_GVVnEKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYg24KMtEeOp6bjTuv3lfw">
            <body>Display the evaluated value of a single cell</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CGMtIKMtEeOp6bjTuv3lfw" name="getDisplay" method="_GVW1MKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYg24aMtEeOp6bjTuv3lfw">
            <body>Get the string of the display&#xD;
	 * &#xD;
	 * @return The evaluated value</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGOiUKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGQXgKMtEeOp6bjTuv3lfw" name="isNumeric" method="_GVYqYKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYhd8KMtEeOp6bjTuv3lfw">
            <body>Check if the string can be converted to a number&#xD;
	 * &#xD;
	 * @param s The string&#xD;
	 * @return	True if it is a number, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGRloKMtEeOp6bjTuv3lfw" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CGSzwKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGUo8KMtEeOp6bjTuv3lfw" name="isValidChar" method="_GVafkKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYiFAKMtEeOp6bjTuv3lfw">
            <body>check if the formula string stars with &quot;=&quot; and contains:&#xD;
	 * &quot;+&quot;	&quot;-&quot;		&quot;*&quot;		&quot;/&quot;		&quot;(&quot;		&quot;)&quot;&#xD;
	 * &quot;.&quot;	&quot;A-Z&quot;	&quot;0-9&quot;	&quot; &quot;&#xD;
	 * &#xD;
	 * @param temp	The string&#xD;
	 * @return		True if the value is valid, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_CGVQAKMtEeOp6bjTuv3lfw" name="temp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CGV3EKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGXFMKMtEeOp6bjTuv3lfw" name="setChangeAndNotify" visibility="private" method="_GVbtsKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYjTIKMtEeOp6bjTuv3lfw">
            <body>notify all observers that a change happened&#xD;
	 * in the value of this cell</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CGY6YKMtEeOp6bjTuv3lfw" name="getValue" method="_GVc70KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CGaIgKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGavkKMtEeOp6bjTuv3lfw" name="getEvaluatedValue" method="_GVeJ8KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CGb9sKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGdL0KMtEeOp6bjTuv3lfw" name="getCol" method="_GVgmMKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CGeZ8KMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGfBAKMtEeOp6bjTuv3lfw" name="getRow" method="_GVibYKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CGfoEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CGgPIKMtEeOp6bjTuv3lfw" name="getGrid" method="_GVkQkKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GBZXYKMtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CGj5gKMtEeOp6bjTuv3lfw" name="getObservedCells" method="_GVmFwKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GLJwUKMtEeOp6bjTuv3lfw" type="_F9rVAKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CGscYKMtEeOp6bjTuv3lfw" name="isValidValue" method="_GVn68KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CGtqgKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_GBNKIKMtEeOp6bjTuv3lfw" name="Cell" method="_GVL2EKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GBQ0gKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GBRbkKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYdMgKMtEeOp6bjTuv3lfw">
            <body>Parameterized constructor&#xD;
	 * &#xD;
	 * @param col	The column of the cell&#xD;
	 * @param row	The row of the cell&#xD;
	 * @param grid	The grid in which the cell is</body>
          </ownedComment>
          <ownedParameter xmi:id="_GBOYQKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GBO_UKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GBPmYKMtEeOp6bjTuv3lfw" name="grid" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GBSCoKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GK7t4KMtEeOp6bjTuv3lfw" name="update" method="_GVNrQKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GK8U8KMtEeOp6bjTuv3lfw" name="o" type="_GA95kKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GK88AKMtEeOp6bjTuv3lfw" name="arg" type="_GKtEYKMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CHDBsKMtEeOp6bjTuv3lfw" clientDependency="_CHH6MKMtEeOp6bjTuv3lfw" name="Grid">
        <ownedComment xmi:id="_GYj6MKMtEeOp6bjTuv3lfw">
          <body>The Grid class represent a single spreadsheet. It is stored in&#xD;
a hash table to keep an infinite scrolling spreadsheet to take&#xD;
too much memory&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_GQVLQKMtEeOp6bjTuv3lfw" name="_selectedCell" visibility="private" type="_CFb4IKMtEeOp6bjTuv3lfw" association="_GbQB0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GQY1oKMtEeOp6bjTuv3lfw" name="_maxWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GQcgAKMtEeOp6bjTuv3lfw" name="_maxHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GQgKYKMtEeOp6bjTuv3lfw" name="_currentWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GQjNsKMtEeOp6bjTuv3lfw" name="_currentHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GQm4EKMtEeOp6bjTuv3lfw" name="tblInterface" visibility="private" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_GbVhYKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_y6X70qMvEeOp6bjTuv3lfw" name="_cell" type="_CFb4IKMtEeOp6bjTuv3lfw" aggregation="composite" association="_y6WGoKMvEeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y6Yi4KMvEeOp6bjTuv3lfw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y6Yi4aMvEeOp6bjTuv3lfw" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_CHH6MKMtEeOp6bjTuv3lfw" client="_CHDBsKMtEeOp6bjTuv3lfw" supplier="_CFlCEKMtEeOp6bjTuv3lfw" contract="_CFlCEKMtEeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVsMYKMtEeOp6bjTuv3lfw" name="Grid" specification="_CHQdEKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVsMYaMtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_cells = new Hashtable&lt;String, Cell>(); // generates hashtable for cells&#xD;
		_selectedCell = new Cell(&quot;A&quot;, 1, this );&#xD;
		_cells.put(&quot;A&quot; + 1, _selectedCell);&#xD;
		_maxWidth = 10;&#xD;
		_maxHeight = 10;&#xD;
		_currentWidth = 1;&#xD;
		_currentHeight = 1;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVuBkKMtEeOp6bjTuv3lfw" name="Grid" specification="_CHWjsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVuBkaMtEeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVuBkqMtEeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GVuBk6MtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_cells = new Hashtable&lt;String, Cell>(); // generates hashtable for cells&#xD;
		_selectedCell = new Cell(&quot;A&quot;, 1, this );&#xD;
		_cells.put(&quot;A&quot; + 1, _selectedCell);&#xD;
		_maxWidth = maxWidth;&#xD;
		_maxHeight = maxHeight;&#xD;
		_currentWidth = 1;&#xD;
		_currentHeight = 1;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVv2wKMtEeOp6bjTuv3lfw" name="setSSTable" specification="_GCe8gKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVv2waMtEeOp6bjTuv3lfw" name="s" type="_CMm3IKMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>this.tblInterface = s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVyTAKMtEeOp6bjTuv3lfw" name="getSSTable" specification="_CHefgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GVyTAaMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return this.tblInterface;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV0IMKMtEeOp6bjTuv3lfw" name="getCell" specification="_CHj_EKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV0IMaMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV0IMqMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV0IM6MtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>int intCol = colToNumber(col);&#xD;
		if(intCol &lt;= _maxWidth &amp;&amp; intCol >= 1 &amp;&amp; row &lt;= _maxHeight &amp;&amp; row >= 1 ){&#xD;
			Cell foundCell = _cells.get( col + row );&#xD;
			if( foundCell == null ){&#xD;
				foundCell = new Cell( col, row, this );&#xD;
				_cells.put(col + row, foundCell);&#xD;
&#xD;
				if(intCol > _currentWidth)&#xD;
					_currentWidth = Math.min(intCol, _maxWidth);&#xD;
				if(row > _currentHeight)&#xD;
					_currentHeight = Math.min(row, _maxHeight);&#xD;
&#xD;
			}&#xD;
			return foundCell;&#xD;
		}else{&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV2kcKMtEeOp6bjTuv3lfw" name="checkCell" specification="_CHu-MKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV2kcaMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV2kcqMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV2kc6MtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>int intCol = colToNumber(col);&#xD;
		if(intCol &lt;= _maxWidth &amp;&amp; intCol >= 1 &amp;&amp; row &lt;= _maxHeight &amp;&amp; row >= 1 ){&#xD;
			Cell foundCell = _cells.get( col + row );&#xD;
			if( foundCell == null ){&#xD;
				return null;&#xD;
&#xD;
			}&#xD;
			return foundCell;&#xD;
		}else{&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV4ZoKMtEeOp6bjTuv3lfw" name="setCells" specification="_GLaPAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV4ZoaMtEeOp6bjTuv3lfw" name="cells"/>
          <language>java</language>
          <body>_cells = cells;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV5nwKMtEeOp6bjTuv3lfw" name="selectCell" specification="_CH59UKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV5nwaMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV5nwqMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV5nw6MtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>Cell selectedCell = this.getCell(col, row);&#xD;
		if( selectedCell != null )&#xD;
			return _selectedCell = selectedCell;&#xD;
		return null;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV614KMtEeOp6bjTuv3lfw" name="removeSelectedCell" specification="_CH_c4KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>this.removeCell( _selectedCell.getCol(), _selectedCell.getRow() );&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV8rEKMtEeOp6bjTuv3lfw" name="removeCell" specification="_CIDuUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV8rEaMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GV8rEqMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Cell cell = this.getCell(col, row);&#xD;
&#xD;
&#xD;
		for(Cell observed : cell.getObservedCells()){&#xD;
			observed.deleteObserver(cell);&#xD;
		}&#xD;
		cell.setValue(&quot;0&quot;);&#xD;
&#xD;
		if( cell.countObservers() == 0 ){&#xD;
			_cells.remove( col + row );&#xD;
			if(_selectedCell == this.getCell(col, row))&#xD;
				_selectedCell = null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV95MKMtEeOp6bjTuv3lfw" name="clear" specification="_CIGKkKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>_cells.clear();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GV_uYKMtEeOp6bjTuv3lfw" name="getSelectedCell" specification="_CIIm0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GV_uYaMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _selectedCell;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWA8gKMtEeOp6bjTuv3lfw" name="getMaxWidth" specification="_CINfUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWBjkKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _maxWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWCxsKMtEeOp6bjTuv3lfw" name="getMaxHeight" specification="_CIQioKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWCxsaMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _maxHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWD_0KMtEeOp6bjTuv3lfw" name="getCurrentWidth" specification="_CITl8KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWEm4KMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _currentWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWF1AKMtEeOp6bjTuv3lfw" name="getCurrentHeight" specification="_CIYecKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWGcEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _currentHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWI4UKMtEeOp6bjTuv3lfw" name="setMaxWidth" specification="_CIdW8KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWI4UaMtEeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_maxWidth = maxWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWKtgKMtEeOp6bjTuv3lfw" name="setMaxHeight" specification="_CIi2gKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWKtgaMtEeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_maxHeight = maxHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWL7oKMtEeOp6bjTuv3lfw" name="Display" specification="_CImg4KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>System.out.println(&quot;GRID&quot;);&#xD;
		System.out.println(&quot;---------------------------&quot;);&#xD;
		for(int i = 0; i &lt;= _currentHeight; i++){&#xD;
			for(int c = 0; c &lt;= _currentWidth; c++){				&#xD;
				System.out.print(&quot;|&quot;);&#xD;
				if(i == 0){&#xD;
					if(c == 0){&#xD;
						System.out.print(centerPad(&quot;&quot;, 10));&#xD;
					}else{&#xD;
						System.out.print(centerPad(numToCol(c), 10));&#xD;
					}&#xD;
				}else{&#xD;
					if(c == 0){&#xD;
						System.out.print(centerPad(String.valueOf(i), 10));&#xD;
					}else{&#xD;
						Cell x = this.checkCell(numToCol(c), i);&#xD;
						if(x == null)&#xD;
							System.out.print(centerPad(&quot;null&quot;, 10));&#xD;
						else&#xD;
							System.out.print(centerPad(x.getDisplay(), 10));&#xD;
&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			System.out.print(&quot;|\n&quot; );&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWNw0KMtEeOp6bjTuv3lfw" name="numToCol" specification="_CIqyUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWNw0aMtEeOp6bjTuv3lfw" name="columnIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWNw0qMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (columnIndex == 0)&#xD;
			return null;&#xD;
		columnIndex--;&#xD;
		int base = 26;&#xD;
		StringBuffer b = new StringBuffer();&#xD;
		do {&#xD;
			int digit = columnIndex % base + 65;&#xD;
			b.append(Character.valueOf((char) digit));&#xD;
			columnIndex = (columnIndex / base) - 1;&#xD;
		} while (columnIndex >= 0);&#xD;
&#xD;
		return b.reverse().toString();&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWO-8KMtEeOp6bjTuv3lfw" name="colToNumber" specification="_CIvq0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWO-8aMtEeOp6bjTuv3lfw" name="str">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWO-8qMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>char[] chars = str.toUpperCase().toCharArray();&#xD;
&#xD;
		int sum = 0;&#xD;
&#xD;
		for (int i = 0; i &lt; chars.length; i++)&#xD;
		{&#xD;
			sum *= 26;&#xD;
			sum += (chars[i] - 'A' + 1);&#xD;
		}&#xD;
&#xD;
		return sum;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWRbMKMtEeOp6bjTuv3lfw" name="centerPad" specification="_CI2YgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWRbMaMtEeOp6bjTuv3lfw" name="string">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWRbMqMtEeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWRbM6MtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int stringLength = string.length();&#xD;
		int padding = size - stringLength;&#xD;
		int leftPad = padding - padding/2;&#xD;
		int rightPad = padding - leftPad;&#xD;
&#xD;
&#xD;
		return createPad(rightPad) + string + createPad(leftPad);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWUegKMtEeOp6bjTuv3lfw" name="createPad" specification="_CI-UUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWUegaMtEeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWUegqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		for(int i = 0; i &lt; size; i++)&#xD;
			s+=&quot; &quot;;&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWWTsKMtEeOp6bjTuv3lfw" name="save" specification="_CJG3MKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWWTsaMtEeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWWTsqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			// .sav extension no longer needed, implicit in how the GUI handles load/save&#xD;
			FileOutputStream fileOut = new FileOutputStream(fileName);&#xD;
			ObjectOutputStream out = new ObjectOutputStream(fileOut);&#xD;
&#xD;
			/* New stuff to deal with Non-Serializable exceptions */&#xD;
			Hashtable&lt;String, String> hTemp = new Hashtable&lt;String,String>(); &#xD;
			Set&lt;String> keys = _cells.keySet();&#xD;
&#xD;
			for(String key: keys) {&#xD;
				hTemp.put(key,_cells.get(key).getValue());&#xD;
				System.out.println(&quot;\nKey: &quot; + key + &quot;\n&quot;);&#xD;
				System.out.println(&quot;Value: &quot; + hTemp.get(key) + &quot;\n&quot;);&#xD;
			}&#xD;
&#xD;
			out.writeObject(hTemp);&#xD;
			/* End of new stuff */&#xD;
&#xD;
			out.close();&#xD;
			fileOut.close();&#xD;
			return true;&#xD;
		}&#xD;
		catch(FileNotFoundException e){&#xD;
			System.out.println(e.getMessage());&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} &#xD;
		catch (IOException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWYI4KMtEeOp6bjTuv3lfw" name="load" specification="_CJPaEKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWYI4aMtEeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWYI4qMtEeOp6bjTuv3lfw" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			FileInputStream fileIn = new FileInputStream(fileName);&#xD;
			ObjectInputStream in = new ObjectInputStream(fileIn);&#xD;
&#xD;
			/* New stuff to deal with Non-Serializable exceptions */&#xD;
			Hashtable&lt;String, String> hTemp = (Hashtable&lt;String, String>)in.readObject();&#xD;
			Set&lt;String> keys = hTemp.keySet();&#xD;
&#xD;
			for(String key: keys) {&#xD;
&#xD;
				String col = colFromColRow(key);&#xD;
				int row = rowFromColRow(key);&#xD;
				String value = hTemp.get(key);&#xD;
				Cell c = new Cell(col, row, this);&#xD;
				c.setValue(value);&#xD;
				System.out.println(&quot;\nCell value: &quot; + value + &quot;\n&quot;); // FOR DEBUGGING&#xD;
				_cells.put(key, c);&#xD;
&#xD;
			}&#xD;
			/* End of new stuff */&#xD;
&#xD;
			in.close();&#xD;
			fileIn.close();&#xD;
			return true;&#xD;
		}catch (ClassNotFoundException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			return false;&#xD;
		}catch (IOException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWalIKMtEeOp6bjTuv3lfw" name="colFromColRow" specification="_CJYkAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWalIaMtEeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWalIqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int position = 1;&#xD;
&#xD;
		if('A' &lt;= colrow.charAt(1) &amp;&amp; colrow.charAt(1) &lt;= 'Z')&#xD;
			position = 2;&#xD;
&#xD;
		return colrow.substring(0,position);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWdocKMtEeOp6bjTuv3lfw" name="rowFromColRow" specification="_CJf4wKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWdocaMtEeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GWdocqMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int position = 1;&#xD;
&#xD;
		if('A' &lt;= colrow.charAt(1) &amp;&amp; colrow.charAt(1) &lt;= 'Z')&#xD;
			position = 2;&#xD;
&#xD;
		return Integer.parseInt(colrow.substring(position));&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CHQdEKMtEeOp6bjTuv3lfw" name="Grid" method="_GVsMYKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_CHRrMKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CHRrMaMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYkhQKMtEeOp6bjTuv3lfw">
            <body>Default constructor. Set the max size to&#xD;
	 * 10 x 10, create the cell A1 and select it</body>
          </ownedComment>
          <ownedParameter xmi:id="_CHRrMqMtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CHWjsKMtEeOp6bjTuv3lfw" name="Grid" method="_GVuBkKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_CHZnAKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CHZnAaMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYlIUKMtEeOp6bjTuv3lfw">
            <body>Default constructor. Set the max size to&#xD;
	 * maxWidth X maxHeight, create the cell A1 and select it&#xD;
	 * &#xD;
	 * @param maxWidth	The maximum width of the spreadsheet. -1 = infinite&#xD;
	 * @param maxHeight	The maximum height of the spreadsheet. -1 = infinite</body>
          </ownedComment>
          <ownedParameter xmi:id="_CHXKwKMtEeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CHYY4KMtEeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CHa1IKMtEeOp6bjTuv3lfw" type="_CHDBsKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CHefgKMtEeOp6bjTuv3lfw" name="getSSTable" method="_GVyTAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GCim4KMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CHj_EKMtEeOp6bjTuv3lfw" name="getCell" method="_GV0IMKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYlIUaMtEeOp6bjTuv3lfw">
            <body>Try to access a single cell inside of the spreadsheet.&#xD;
	 * If the cell doesn't exist, it will create it as long&#xD;
	 * as it is inside of the bound(maxWidth/maxHeight)&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.&#xD;
	 * @return		The cell if it's inside of the bounds, null otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_CHl0QKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CHnCYKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GCqisKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CHu-MKMtEeOp6bjTuv3lfw" name="checkCell" method="_GV2kcKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CHvlQKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CHwMUKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GCtmAKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CH59UKMtEeOp6bjTuv3lfw" name="selectCell" method="_GV5nwKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYmWcKMtEeOp6bjTuv3lfw">
            <body>Select a cell if it is within bounds. If the cell&#xD;
	 * doesn't exist it will be created. If the cell is out&#xD;
	 * of bound, the selected cell won't change.&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.&#xD;
	 * @return		The cell at location (col, row). Null if out of bound.</body>
          </ownedComment>
          <ownedParameter xmi:id="_CH6kYKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CH7LcKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GCx3cKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CH_c4KMtEeOp6bjTuv3lfw" name="removeSelectedCell" method="_GV614KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYmWcaMtEeOp6bjTuv3lfw">
            <body>Remove the selected cell from the grid as long as the&#xD;
	 * cell isn't observed by any other</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CIDuUKMtEeOp6bjTuv3lfw" name="removeCell" method="_GV8rEKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYm9gKMtEeOp6bjTuv3lfw">
            <body>Remove the cell at location (col, row) from the grid as long as the&#xD;
	 * cell isn't observed by any other. If it is the selected cell, selected&#xD;
	 * cell will be set to null&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.</body>
          </ownedComment>
          <ownedParameter xmi:id="_CIEVYKMtEeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CIE8cKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIGKkKMtEeOp6bjTuv3lfw" name="clear" method="_GV95MKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYm9gaMtEeOp6bjTuv3lfw">
            <body>Empties the Grid</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CIIm0KMtEeOp6bjTuv3lfw" name="getSelectedCell" method="_GV_uYKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GC0TsKMtEeOp6bjTuv3lfw" type="_CFb4IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CINfUKMtEeOp6bjTuv3lfw" name="getMaxWidth" method="_GWA8gKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CIPUgKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIQioKMtEeOp6bjTuv3lfw" name="getMaxHeight" method="_GWCxsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CISX0KMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CITl8KMtEeOp6bjTuv3lfw" name="getCurrentWidth" method="_GWD_0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CIWCMKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIYecKMtEeOp6bjTuv3lfw" name="getCurrentHeight" method="_GWF1AKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CIZskKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIdW8KMtEeOp6bjTuv3lfw" name="setMaxWidth" method="_GWI4UKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CId-AKMtEeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIi2gKMtEeOp6bjTuv3lfw" name="setMaxHeight" method="_GWKtgKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CIjdkKMtEeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CImg4KMtEeOp6bjTuv3lfw" name="Display" method="_GWL7oKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYnkkKMtEeOp6bjTuv3lfw">
            <body>Display the grid inside of the console</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CIqyUKMtEeOp6bjTuv3lfw" name="numToCol" isStatic="true" method="_GWNw0KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYoLoKMtEeOp6bjTuv3lfw">
            <body>Utility method to convert a number to&#xD;
	 * its equivalent column name&#xD;
	 * &#xD;
	 * @param columnIndex	the integer representation of the column&#xD;
	 * @return				the string representation of the column</body>
          </ownedComment>
          <ownedParameter xmi:id="_CIrZYKMtEeOp6bjTuv3lfw" name="columnIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CIsngKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CIvq0KMtEeOp6bjTuv3lfw" name="colToNumber" isStatic="true" method="_GWO-8KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYoysKMtEeOp6bjTuv3lfw">
            <body>Utility method to convert a column name to&#xD;
	 * its equivalent integer&#xD;
	 * &#xD;
	 * @param str	the string representation of the column&#xD;
	 * @return		the integer representation of the column</body>
          </ownedComment>
          <ownedParameter xmi:id="_CIwR4KMtEeOp6bjTuv3lfw" name="str">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CIyHEKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CI2YgKMtEeOp6bjTuv3lfw" name="centerPad" visibility="private" method="_GWRbMKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYpZwKMtEeOp6bjTuv3lfw">
            <body>Utility method to add space padding&#xD;
	 * to the left and right of a string&#xD;
	 * &#xD;
	 * @param string	the string to pad&#xD;
	 * @param size		the total number of character you want the string to be&#xD;
	 * @return			the final string with the pading</body>
          </ownedComment>
          <ownedParameter xmi:id="_CI2_kKMtEeOp6bjTuv3lfw" name="string">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CI3moKMtEeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CI4NsKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CI-UUKMtEeOp6bjTuv3lfw" name="createPad" visibility="private" method="_GWUegKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYqA0KMtEeOp6bjTuv3lfw">
            <body>Utility method to create a string of&#xD;
	 * x spaces where x is the size&#xD;
	 * &#xD;
	 * @param size	number of space&#xD;
	 * @return		string of size spaces</body>
          </ownedComment>
          <ownedParameter xmi:id="_CI-7YKMtEeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CJAwkKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CJG3MKMtEeOp6bjTuv3lfw" name="save" method="_GWWTsKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYqn4KMtEeOp6bjTuv3lfw">
            <body>Save the grid to the file&#xD;
	 * &#xD;
	 * @param fileName	The filename without the extension</body>
          </ownedComment>
          <ownedParameter xmi:id="_CJIFUKMtEeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CJKhkKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CJPaEKMtEeOp6bjTuv3lfw" name="load" method="_GWYI4KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYqn4aMtEeOp6bjTuv3lfw">
            <body>Load a grid from the specified file&#xD;
	 * &#xD;
	 * @param fileName	The filename without the extension</body>
          </ownedComment>
          <ownedParameter xmi:id="_CJQoMKMtEeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CJSdYKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CJYkAKMtEeOp6bjTuv3lfw" name="colFromColRow" isStatic="true" method="_GWalIKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CJZLEKMtEeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CJbAQKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CJf4wKMtEeOp6bjTuv3lfw" name="rowFromColRow" isStatic="true" method="_GWdocKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CJhG4KMtEeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CJi8EKMtEeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_GCe8gKMtEeOp6bjTuv3lfw" name="setSSTable" method="_GVv2wKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GCgKoKMtEeOp6bjTuv3lfw" name="s" type="_CMm3IKMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GLaPAKMtEeOp6bjTuv3lfw" name="setCells" method="_GV4ZoKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYlvYKMtEeOp6bjTuv3lfw">
            <body>Changes the hash table to the one specified&#xD;
	 * &#xD;
	 * @param cells The new hash table for the grid</body>
          </ownedComment>
          <ownedParameter xmi:id="_GLbdIKMtEeOp6bjTuv3lfw" name="cells"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CMb4AKMtEeOp6bjTuv3lfw" name="Spreadsheet">
        <ownedComment xmi:id="_GYuSQKMtEeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
&#xD;
The master class of the spreadsheet application.&#xD;
Launches the GUI&#xD;
 *</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWv8UKMtEeOp6bjTuv3lfw" name="main" specification="_CMgJcKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWv8UaMtEeOp6bjTuv3lfw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GWv8UqMtEeOp6bjTuv3lfw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>//TODO: On open, allow the user to choose between &quot;New&quot; and &quot;Open&quot;. Either a new grid should be created or one should be generated from the file.&#xD;
		&#xD;
		//Create a blank back-end grid&#xD;
		Grid grid = new Grid(SSTable.intDefaultColumns, SSTable.intDefaultRows);&#xD;
		&#xD;
		//Create the GUI and pass it the grid to display&#xD;
		SSGUI gui = new SSGUI(grid);&#xD;
&#xD;
		//Display welcome message&#xD;
		gui.displayMessage(&quot;Welcome to the Team 3 spreadsheet app!&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CMgJcKMtEeOp6bjTuv3lfw" name="main" isStatic="true" method="_GWv8UKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_CMgwgKMtEeOp6bjTuv3lfw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CMjz0KMtEeOp6bjTuv3lfw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CMm3IKMtEeOp6bjTuv3lfw" name="SSTable">
        <ownedComment xmi:id="_GYuSQaMtEeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
 *&#xD;
Represents the GUI table used to render the grid&#xD;
&#xD;
Included all inhereted constructors just in case...</body>
        </ownedComment>
        <generalization xmi:id="_GMcw0KMtEeOp6bjTuv3lfw" general="_GMEWUKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GROjIKMtEeOp6bjTuv3lfw" name="intCellWidth" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRPxQKMtEeOp6bjTuv3lfw" value="60"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRQYUaMtEeOp6bjTuv3lfw" name="intCellHeight" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRRmcKMtEeOp6bjTuv3lfw" value="21"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRaJUKMtEeOp6bjTuv3lfw" name="vptRowHeaderViewPort" visibility="package" type="_GMNgQKMtEeOp6bjTuv3lfw" association="_Gb1QoKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GRdzsKMtEeOp6bjTuv3lfw" name="vptColumnHeaderViewPort" visibility="package" type="_GMNgQKMtEeOp6bjTuv3lfw" association="_Gb5iEKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GRgP8KMtEeOp6bjTuv3lfw" name="intCellPadding" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRg3AKMtEeOp6bjTuv3lfw" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRjTQKMtEeOp6bjTuv3lfw" name="header" visibility="package" type="_GMRxsKMtEeOp6bjTuv3lfw" association="_Gb_BoKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GRlvgKMtEeOp6bjTuv3lfw" name="intDefaultRows" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRm9oKMtEeOp6bjTuv3lfw" value="5000"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRoLwKMtEeOp6bjTuv3lfw" name="intDefaultColumns" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRpZ4KMtEeOp6bjTuv3lfw" value="26*27"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRqoAKMtEeOp6bjTuv3lfw" name="grid" visibility="private" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_GcEhMKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GRtrUKMtEeOp6bjTuv3lfw" name="intNumRows" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRwHkKMtEeOp6bjTuv3lfw" name="intNumColumns" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GRzK4KMtEeOp6bjTuv3lfw" name="bdrHeaderBorder" visibility="package" type="_GMXRQKMtEeOp6bjTuv3lfw" association="_GcLO4KMtEeOp6bjTuv3lfw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GRzK4aMtEeOp6bjTuv3lfw" value="BorderFactory.createLineBorder(Color.black)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GWyYkKMtEeOp6bjTuv3lfw" name="SSTable" specification="_CNBG0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GWyYkaMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>this(SSTable.intDefaultRows,SSTable.intDefaultColumns);&#xD;
		//TODO: Generate Grid object for default table&#xD;
		//grid = new Grid(intDefaultColumns, intDefaultRows);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW0NwKMtEeOp6bjTuv3lfw" name="SSTable" specification="_GECbsKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GW0NwaMtEeOp6bjTuv3lfw" name="g" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GW0NwqMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>//TODO: This generates the table using default values but then should be filled in with the specified grid&#xD;
		//---> This is because the grid is a hash and only stores what was entered. The defaults determine what COULD be entered&#xD;
		this(SSTable.intDefaultRows,SSTable.intDefaultColumns);&#xD;
		this.grid = g;&#xD;
		this.header.setBorder(this.bdrHeaderBorder);&#xD;
		g.setSSTable(this);&#xD;
		&#xD;
		setupSSTable();&#xD;
		createRowLabels();&#xD;
		this.setFont(new Font(&quot;Times&quot;, Font.PLAIN, 10));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW2C8KMtEeOp6bjTuv3lfw" name="SSTable" specification="_CNK30KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GW2C8aMtEeOp6bjTuv3lfw" name="intRows">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW2C8qMtEeOp6bjTuv3lfw" name="intColumns">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW2C86MtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>super(intRows,intColumns);&#xD;
		&#xD;
		this.intNumRows = intRows;&#xD;
		this.intNumColumns = intColumns;&#xD;
		&#xD;
		setupSSTable();&#xD;
		createRowLabels();&#xD;
		this.setFont(new Font(&quot;Times&quot;, Font.PLAIN, 10));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW3REKMtEeOp6bjTuv3lfw" name="setupSSTable" specification="_CNRlgKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>//Set up header&#xD;
		this.header = this.getTableHeader();&#xD;
		header.setDefaultRenderer(new SSTableRenderer(this));&#xD;
		header.setReorderingAllowed(false);&#xD;
		&#xD;
		//Set up JTable properties&#xD;
		this.setCellSelectionEnabled(true);&#xD;
		this.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);&#xD;
		this.setRowHeight(this.intCellHeight);&#xD;
		this.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );&#xD;
&#xD;
		//Set up cell renderer&#xD;
		try {&#xD;
			cellSelected = new SSCellRenderer(this.intCellHeight,this.intCellWidth);&#xD;
		    setDefaultRenderer(Class.forName(&quot;java.lang.Object&quot; ), cellSelected );&#xD;
		} catch (ClassNotFoundException e) {&#xD;
		    System.out.println(&quot;ERROR: Renderer could not be set&quot;);&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW4fMKMtEeOp6bjTuv3lfw" name="createRowLabels" specification="_CNUBwKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>// Create row header JPanel&#xD;
		JPanel pnlRowHeaders = new JPanel();&#xD;
		pnlRowHeaders.setBackground(new Color(200,200,255));&#xD;
		pnlRowHeaders.setBorder(this.bdrHeaderBorder);&#xD;
		&#xD;
		FontMetrics metrics = getFontMetrics(this.getFont());&#xD;
&#xD;
		//set the row label panel size based on the number of row labels required and their dimensions&#xD;
		Dimension dimPanelSize = new Dimension(&#xD;
							metrics.stringWidth(&quot;999&quot;)+intCellPadding*2,&#xD;
							this.intCellHeight*intNumRows&#xD;
				);&#xD;
		pnlRowHeaders.setPreferredSize(dimPanelSize);&#xD;
&#xD;
		// Add labels&#xD;
		dimPanelSize.height = this.intCellHeight;&#xD;
		&#xD;
		for (int i = 1; i &lt;= this.intNumRows; i++) {&#xD;
		  JLabel lblRow = new JLabel(Integer.toString(i), SwingConstants.CENTER);&#xD;
		  lblRow.setBorder(BorderFactory.createLineBorder(new Color(200,200,255)));&#xD;
		  lblRow.setFont(this.getFont());&#xD;
		  lblRow.setBounds(0, i*dimPanelSize.height, dimPanelSize.width, dimPanelSize.height);&#xD;
		  //lblRow.setBackground(new Color(255,255,255));&#xD;
		  &#xD;
		  pnlRowHeaders.add(lblRow);&#xD;
		}&#xD;
&#xD;
		dimPanelSize.height = this.intCellHeight*this.intNumRows;&#xD;
		&#xD;
		this.vptRowHeaderViewPort = new JViewport();&#xD;
		this.vptRowHeaderViewPort.setViewSize(dimPanelSize);&#xD;
		this.vptRowHeaderViewPort.setView(pnlRowHeaders);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW5tUKMtEeOp6bjTuv3lfw" name="getRowHeader" specification="_CNWeAKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GW5tUaMtEeOp6bjTuv3lfw" type="_GMNgQKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return vptRowHeaderViewPort;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CNBG0KMtEeOp6bjTuv3lfw" name="SSTable" method="_GWyYkKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_CNCU8KMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CNCU8aMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYvgYKMtEeOp6bjTuv3lfw">
            <body>Create a blank spreadsheet with the default number of rows and columns</body>
          </ownedComment>
          <ownedParameter xmi:id="_CNC8AKMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CNK30KMtEeOp6bjTuv3lfw" name="SSTable" method="_GW2C8KMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_CNMtAKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_CNMtAaMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYwHcaMtEeOp6bjTuv3lfw">
            <body>Create a spreadsheet by specifying the number of rows and columns&#xD;
	 * &#xD;
	 * @param intRows The number of rows to create&#xD;
	 * @param intColumns The number of columns to create</body>
          </ownedComment>
          <ownedParameter xmi:id="_CNK30aMtEeOp6bjTuv3lfw" name="intRows">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CNLe4KMtEeOp6bjTuv3lfw" name="intColumns">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_CNNUEKMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_CNRlgKMtEeOp6bjTuv3lfw" name="setupSSTable" visibility="private" method="_GW3REKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYwugKMtEeOp6bjTuv3lfw">
            <body>Sets up the SS table for use as a spreadsheet</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CNUBwKMtEeOp6bjTuv3lfw" name="createRowLabels" visibility="private" method="_GW4fMKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYxVkKMtEeOp6bjTuv3lfw">
            <body>JTables have column headers, but not row headers, so this method&#xD;
	 * creates them based on cell properties</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CNWeAKMtEeOp6bjTuv3lfw" name="getRowHeader" method="_GW5tUKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GYxVkaMtEeOp6bjTuv3lfw">
            <body>Returns the associated viewport for display&#xD;
	 * &#xD;
	 * @return The viewport</body>
          </ownedComment>
          <ownedParameter xmi:id="_GMbisKMtEeOp6bjTuv3lfw" type="_GMNgQKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GECbsKMtEeOp6bjTuv3lfw" name="SSTable" method="_GW0NwKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GEFfAKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GEFfAaMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYwHcKMtEeOp6bjTuv3lfw">
            <body>Create a spreadsheet based on a grid object&#xD;
	 * &#xD;
	 * @param g The grid object to be used when generating the spreadsheet</body>
          </ownedComment>
          <ownedParameter xmi:id="_GEDp0KMtEeOp6bjTuv3lfw" name="g" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GEGGEKMtEeOp6bjTuv3lfw" type="_CMm3IKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CPAq4KMtEeOp6bjTuv3lfw" clientDependency="_GMmh0KMtEeOp6bjTuv3lfw" name="SSTableRenderer" visibility="package">
        <ownedComment xmi:id="_GYx8oKMtEeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
 *&#xD;
Used for formatting the table</body>
        </ownedComment>
        <ownedAttribute xmi:id="_GR3cUKMtEeOp6bjTuv3lfw" name="renderer" visibility="package" type="_GMplIKMtEeOp6bjTuv3lfw" association="_GcUY0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GR7GsKMtEeOp6bjTuv3lfw" name="fntHeader" visibility="package" type="_GMvEsKMtEeOp6bjTuv3lfw" association="_GcdiwKMtEeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_GMmh0KMtEeOp6bjTuv3lfw" client="_CPAq4KMtEeOp6bjTuv3lfw" supplier="_GLtxAKMtEeOp6bjTuv3lfw" contract="_GLtxAKMtEeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW7igKMtEeOp6bjTuv3lfw" name="SSTableRenderer" specification="_GM1LUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GW7igaMtEeOp6bjTuv3lfw" name="table" type="_GMEWUKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GW7igqMtEeOp6bjTuv3lfw" type="_CPAq4KMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>this.renderer = new DefaultTableCellRenderer();&#xD;
	    this.renderer.setHorizontalAlignment(JLabel.CENTER);&#xD;
	    this.renderer.setBackground(new Color(200,200,255));&#xD;
&#xD;
		fntHeader = table.getFont();&#xD;
		fntHeader = fntHeader.deriveFont(Font.BOLD);&#xD;
		&#xD;
		this.renderer.setFont(fntHeader);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GW_M4KMtEeOp6bjTuv3lfw" name="getTableCellRendererComponent" specification="_GM6D0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GW_M4aMtEeOp6bjTuv3lfw" name="table" type="_GMEWUKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GW_M4qMtEeOp6bjTuv3lfw" name="value" type="_GKtEYKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GW_M46MtEeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW_M5KMtEeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW_M5aMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW_M5qMtEeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GW_M56MtEeOp6bjTuv3lfw" type="_GL_d0KMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return renderer.getTableCellRendererComponent(&#xD;
	        table, value, isSelected, hasFocus, row, column);&#xD;
	    </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_GM1LUKMtEeOp6bjTuv3lfw" name="SSTableRenderer" method="_GW7igKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GM3AgKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GM3nkKMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_GM2ZcKMtEeOp6bjTuv3lfw" name="table" type="_GMEWUKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GM3nkaMtEeOp6bjTuv3lfw" type="_CPAq4KMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GM6D0KMtEeOp6bjTuv3lfw" name="getTableCellRendererComponent" method="_GW_M4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GM6D0aMtEeOp6bjTuv3lfw" name="table" type="_GMEWUKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GM7R8KMtEeOp6bjTuv3lfw" name="value" type="_GKtEYKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GM75AKMtEeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GM8gEKMtEeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GM9HIKMtEeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GM9uMKMtEeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_GM-8UKMtEeOp6bjTuv3lfw" type="_GL_d0KMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_CQbAIKMtEeOp6bjTuv3lfw" clientDependency="_GNJUYKMtEeOp6bjTuv3lfw _GNOz8KMtEeOp6bjTuv3lfw _GNR3QKMtEeOp6bjTuv3lfw" name="SSGUI">
        <ownedComment xmi:id="_GYyjsKMtEeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
&#xD;
This class represents the GUI for the spreadsheet application.&#xD;
A grid must be passed to create the object, but it can be blank&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_GSBNUKMtEeOp6bjTuv3lfw" name="toolKit" visibility="private" type="_GNSeUKMtEeOp6bjTuv3lfw" association="_GclekKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSE3sKMtEeOp6bjTuv3lfw" name="frmWindow" visibility="private" type="_GNWIsKMtEeOp6bjTuv3lfw" association="_GcuBcKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSH7AKMtEeOp6bjTuv3lfw" name="pnlCenter" visibility="private" type="_GNcPUKMtEeOp6bjTuv3lfw" association="_Gc19QKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSK-UKMtEeOp6bjTuv3lfw" name="pnlSouth" visibility="private" type="_GNcPUKMtEeOp6bjTuv3lfw" association="_GdA8YKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSOBoKMtEeOp6bjTuv3lfw" name="panNorthPanel" visibility="package" type="_GNcPUKMtEeOp6bjTuv3lfw" association="_GdJfQKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSP20KMtEeOp6bjTuv3lfw" name="txtInputBox" visibility="package" type="_GNfSoKMtEeOp6bjTuv3lfw" association="_GdRbEKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSS6IKMtEeOp6bjTuv3lfw" name="lblInput" visibility="package" type="_GLpfkKMtEeOp6bjTuv3lfw" association="_GdalAKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSVWYKMtEeOp6bjTuv3lfw" name="btnUpdate" visibility="package" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_Gdh5wKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSXLkKMtEeOp6bjTuv3lfw" name="mnbMenu" visibility="private" type="_GNqRwKMtEeOp6bjTuv3lfw" association="_Gdtf8KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSZn0KMtEeOp6bjTuv3lfw" name="tbrToolBar" visibility="private" type="_GNvKQKMtEeOp6bjTuv3lfw" association="_Gd67UKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GScrIKMtEeOp6bjTuv3lfw" name="mnuFile" visibility="private" type="_GN0CwKMtEeOp6bjTuv3lfw" association="_GeEsUKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSfHYKMtEeOp6bjTuv3lfw" name="mniNew" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GePrcKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSg8kKMtEeOp6bjTuv3lfw" name="mniLoad" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GebRoKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSj_4KMtEeOp6bjTuv3lfw" name="mniSave" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GelpsKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSnDMKMtEeOp6bjTuv3lfw" name="mniSaveAs" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GevasKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSrUoKMtEeOp6bjTuv3lfw" name="mnuEdit" visibility="package" type="_GN0CwKMtEeOp6bjTuv3lfw" association="_Ge7A4KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GStw4KMtEeOp6bjTuv3lfw" name="mniCut" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GfDjwKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSw0MKMtEeOp6bjTuv3lfw" name="mniCopy" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GfMGoKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GSzQcKMtEeOp6bjTuv3lfw" name="mniPaste" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GfVQkKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS0ekaMtEeOp6bjTuv3lfw" name="mnuHelp" visibility="private" type="_GN0CwKMtEeOp6bjTuv3lfw" association="_GfdzcKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS2TwKMtEeOp6bjTuv3lfw" name="mniAbout" visibility="private" type="_GN6wcKMtEeOp6bjTuv3lfw" association="_GfmWUKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS3h4KMtEeOp6bjTuv3lfw" name="btnNew" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_Gfu5MKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS5-IKMtEeOp6bjTuv3lfw" name="btnLoad" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_Gf0_0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS7MQKMtEeOp6bjTuv3lfw" name="btnSave" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_Gf-w0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS9BcKMtEeOp6bjTuv3lfw" name="btnSaveAs" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_GgH6wKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GS-2oKMtEeOp6bjTuv3lfw" name="btnCopy" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_GgSS0KMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTAEwKMtEeOp6bjTuv3lfw" name="btnCut" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_Gga1sKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTB58KMtEeOp6bjTuv3lfw" name="btnPaste" visibility="private" type="_GNjkEKMtEeOp6bjTuv3lfw" association="_GgjYkKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTChAKMtEeOp6bjTuv3lfw" name="scrTblScrollPane" visibility="package" type="_GOMdQKMtEeOp6bjTuv3lfw" association="_Ggz3QKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTEWMKMtEeOp6bjTuv3lfw" name="tblGrid" visibility="private" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_Gg-PUKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTFkUKMtEeOp6bjTuv3lfw" name="txtMessageBox" visibility="private" type="_GNfSoKMtEeOp6bjTuv3lfw" association="_GhHZQKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTGLYKMtEeOp6bjTuv3lfw" name="intScreenWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTGycaMtEeOp6bjTuv3lfw" name="intScreenHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTIAkKMtEeOp6bjTuv3lfw" name="grid" visibility="private" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_GhRKQKMtEeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_GTJOsKMtEeOp6bjTuv3lfw" name="clipBoard" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTJOsaMtEeOp6bjTuv3lfw" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_GTJ1wKMtEeOp6bjTuv3lfw" name="strFileLocation" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTJ1waMtEeOp6bjTuv3lfw" value="&quot;&quot;"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_GNJUYKMtEeOp6bjTuv3lfw" client="_CQbAIKMtEeOp6bjTuv3lfw" supplier="_GNFqAKMtEeOp6bjTuv3lfw" contract="_GNFqAKMtEeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_GNOz8KMtEeOp6bjTuv3lfw" client="_CQbAIKMtEeOp6bjTuv3lfw" supplier="_GNLJkKMtEeOp6bjTuv3lfw" contract="_GNLJkKMtEeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_GNR3QKMtEeOp6bjTuv3lfw" client="_CQbAIKMtEeOp6bjTuv3lfw" supplier="_GNQCEKMtEeOp6bjTuv3lfw" contract="_GNQCEKMtEeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXEscKMtEeOp6bjTuv3lfw" name="SSGUI" specification="_GFIA0KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXEscaMtEeOp6bjTuv3lfw" name="gridObject" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GXEscqMtEeOp6bjTuv3lfw" type="_CQbAIKMtEeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>//prevCellCol = 1&#xD;
		//prevCellRow = 1&#xD;
		&#xD;
		grid = gridObject;&#xD;
		&#xD;
		//attempt to adopt the system look and feel&#xD;
		setLookAndFeel();&#xD;
&#xD;
		//instantiate tools&#xD;
		toolKit = Toolkit.getDefaultToolkit();  &#xD;
		&#xD;
		//create window&#xD;
		frmWindow = new JFrame(&quot;Spreadsheet App - Comp 354 - Team 3&quot;);&#xD;
		&#xD;
		//create primary window sections&#xD;
		tbrToolBar = new JToolBar();&#xD;
		pnlCenter = new JPanel();&#xD;
		pnlSouth = new JPanel();&#xD;
		&#xD;
		//Top Panel Components&#xD;
		lblInput = new JLabel(&quot; Input:  &quot;);&#xD;
		txtInputBox = new JTextField();&#xD;
		btnUpdate = new JButton(&quot;Update&quot;);&#xD;
		panNorthPanel = new JPanel();&#xD;
		&#xD;
		//Menu Bar&#xD;
		mnbMenu = new JMenuBar();	//Menu Items&#xD;
		&#xD;
		//File Menu&#xD;
		mnuFile = new JMenu(&quot;File&quot;);&#xD;
		mniNew = new JMenuItem(&quot;New&quot;);&#xD;
		mniLoad = new JMenuItem(&quot;Load&quot;);&#xD;
		mniSave = new JMenuItem(&quot;Save&quot;);&#xD;
		mniSaveAs = new JMenuItem(&quot;Save As&quot;);&#xD;
		&#xD;
		//Edit Menu&#xD;
		mnuEdit = new JMenu(&quot;Edit&quot;);&#xD;
		mniCut = new JMenuItem(&quot;Cut&quot;);&#xD;
		mniCopy = new JMenuItem(&quot;Copy&quot;);&#xD;
		mniPaste = new JMenuItem(&quot;Paste&quot;);&#xD;
		&#xD;
		//Help Menu&#xD;
		mnuHelp = new JMenu(&quot;Help&quot;);&#xD;
		mniAbout = new JMenuItem(&quot;About&quot;);&#xD;
&#xD;
		// Build toolbar buttons&#xD;
		btnNew = new JButton(&quot;New&quot;);&#xD;
		btnLoad = new JButton(&quot;Load&quot;);&#xD;
		btnSave = new JButton(&quot;Save&quot;);&#xD;
		btnSaveAs = new JButton(&quot;Save As&quot;);&#xD;
		btnCopy = new JButton(&quot;Copy&quot;);&#xD;
		btnCut = new JButton(&quot;Cut&quot;);&#xD;
		btnPaste = new JButton(&quot;Paste&quot;);&#xD;
		&#xD;
		//Build Center Panel&#xD;
		panNorthPanel.setLayout(new BorderLayout());&#xD;
		panNorthPanel.add(txtInputBox,BorderLayout.CENTER);&#xD;
		panNorthPanel.add(tbrToolBar,BorderLayout.NORTH);&#xD;
		panNorthPanel.add(lblInput,BorderLayout.WEST);&#xD;
		panNorthPanel.add(btnUpdate,BorderLayout.EAST);&#xD;
		&#xD;
		// Add all the action listeners&#xD;
		mniNew.addActionListener(this);&#xD;
		mniLoad.addActionListener(this);&#xD;
		mniSave.addActionListener(this);&#xD;
		mniSaveAs.addActionListener(this);&#xD;
				&#xD;
		btnNew.addActionListener(this);&#xD;
		btnLoad.addActionListener(this);&#xD;
		btnSave.addActionListener(this);&#xD;
		btnSaveAs.addActionListener(this);&#xD;
		btnCopy.addActionListener(this);&#xD;
		btnCut.addActionListener(this);&#xD;
		btnPaste.addActionListener(this);&#xD;
		&#xD;
		//Build center panel	&#xD;
		tblGrid = new SSTable(grid);//uses the default values on load&#xD;
		tblGrid.setFillsViewportHeight(true);&#xD;
		tblGrid.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);&#xD;
		tblGrid.getModel().addTableModelListener(this);&#xD;
		tblGrid.getSelectionModel().addListSelectionListener(this);&#xD;
		tblGrid.getColumnModel().getSelectionModel().addListSelectionListener(this);&#xD;
		scrTblScrollPane = new JScrollPane(tblGrid,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,&#xD;
			    JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);&#xD;
		//scrTblScrollPane.setColumnHeaderView(tblGrid.getTableHeader());&#xD;
		scrTblScrollPane.setRowHeader(this.tblGrid.getRowHeader());&#xD;
		scrTblScrollPane.setBackground(new Color(255,255,255));&#xD;
		&#xD;
		//Build bottom panel components&#xD;
		txtMessageBox = new JTextField();&#xD;
		&#xD;
		//set window properties&#xD;
		frmWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		frmWindow.setLayout(new BorderLayout());&#xD;
		&#xD;
		//adopt fullscreen&#xD;
		intScreenWidth = ((int) toolKit.getScreenSize().getWidth());  &#xD;
		intScreenHeight = ((int) toolKit.getScreenSize().getHeight());  &#xD;
		frmWindow.setPreferredSize(new Dimension(intScreenWidth,intScreenHeight)); &#xD;
		&#xD;
		//setup menu&#xD;
		mnbMenu.setPreferredSize(new Dimension(this.intScreenWidth,30));&#xD;
		&#xD;
		//build file menu&#xD;
		mnuFile.add(mniNew);&#xD;
		mnuFile.add(mniLoad);&#xD;
		mnuFile.add(mniSave);&#xD;
		mnuFile.add(mniSaveAs);&#xD;
&#xD;
		//build edit menu&#xD;
		mnuEdit.add(mniCut);&#xD;
		mnuEdit.add(mniCopy);&#xD;
		mnuEdit.add(mniPaste);&#xD;
		&#xD;
		//build help menu&#xD;
		mnuHelp.add(mniAbout);&#xD;
		mniAbout.addActionListener(this);&#xD;
		&#xD;
		//add menus to menu bar&#xD;
		mnbMenu.add(mnuFile);&#xD;
		mnbMenu.add(mnuEdit);&#xD;
		mnbMenu.add(mnuHelp);&#xD;
		&#xD;
		//Setup center panel&#xD;
		pnlCenter.setBackground(new Color(255,255,255));&#xD;
		pnlCenter.add(scrTblScrollPane);&#xD;
		&#xD;
		//Setup bottom panel&#xD;
		pnlSouth.setPreferredSize(new Dimension(this.intScreenWidth,30));&#xD;
		txtMessageBox.setEditable(false);&#xD;
		pnlSouth.setBorder(new BevelBorder(BevelBorder.LOWERED));&#xD;
		&#xD;
		//add buttons to toolbar&#xD;
		tbrToolBar.add(btnNew);&#xD;
		tbrToolBar.add(btnLoad);&#xD;
		tbrToolBar.add(btnSave);&#xD;
		tbrToolBar.add(btnSaveAs);&#xD;
		tbrToolBar.addSeparator();&#xD;
		tbrToolBar.add(btnCopy);&#xD;
		tbrToolBar.add(btnCut);&#xD;
		tbrToolBar.add(btnPaste);&#xD;
		btnCopy.addActionListener(this);&#xD;
		&#xD;
		//Add primary window sections to window&#xD;
		frmWindow.setJMenuBar(this.mnbMenu);&#xD;
		frmWindow.add(panNorthPanel, BorderLayout.NORTH);&#xD;
		frmWindow.add(scrTblScrollPane,BorderLayout.CENTER);&#xD;
		frmWindow.add(txtMessageBox,BorderLayout.SOUTH);&#xD;
		&#xD;
		//display&#xD;
		frmWindow.pack();&#xD;
		frmWindow.setVisible(true);		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXHIsKMtEeOp6bjTuv3lfw" name="displayMessage" specification="_CRmr4KMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXHIsaMtEeOp6bjTuv3lfw" name="strMessage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.txtMessageBox.setText(strMessage);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXIW0KMtEeOp6bjTuv3lfw" name="updateTable" specification="_CRrkYKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>//this.grid = gridUpdate;&#xD;
		//TODO actually do something with the grid...&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXJk8KMtEeOp6bjTuv3lfw" name="newSpreadsheet" specification="_CRuAoKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>//Should work in theory&#xD;
		&#xD;
		//JOptionPane.showMessageDialog(null,&quot;NEW SPREADSHEET&quot;);&#xD;
		grid.clear();&#xD;
		strFileLocation = &quot;&quot;; // clears the save file location&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXKzEKMtEeOp6bjTuv3lfw" name="loadSpreadsheet" specification="_CRxD8KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>final JFileChooser fc = new JFileChooser();&#xD;
		FileNameExtensionFilter filter = new FileNameExtensionFilter(&quot;.sav file&quot;,&quot;sav&quot;);&#xD;
		fc.setFileFilter(filter);&#xD;
		int returnVal = fc.showOpenDialog(frmWindow);&#xD;
		if(returnVal == JFileChooser.APPROVE_OPTION)&#xD;
		{&#xD;
			strFileLocation = fc.getSelectedFile().getAbsolutePath();&#xD;
			grid.load(strFileLocation);&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXMoQKMtEeOp6bjTuv3lfw" name="saveSpreadsheet" specification="_CRy5IKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(strFileLocation.equals(&quot;&quot;)) // Compare to null?&#xD;
			saveAsSpreadsheet();&#xD;
		else&#xD;
			grid.save(strFileLocation + &quot;.sav&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXN2YKMtEeOp6bjTuv3lfw" name="saveAsSpreadsheet" specification="_CR1VYKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>final JFileChooser fc = new JFileChooser();&#xD;
		FileNameExtensionFilter filter = new FileNameExtensionFilter(&quot;.sav file&quot;,&quot;sav&quot;);&#xD;
		fc.setFileFilter(filter);&#xD;
		int returnVal = fc.showSaveDialog(frmWindow); // Different from loadSpreadsheet()&#xD;
		if(returnVal == JFileChooser.APPROVE_OPTION)&#xD;
		{&#xD;
			strFileLocation = fc.getSelectedFile().getAbsolutePath();&#xD;
			grid.save(strFileLocation + &quot;.sav&quot;); // Also different from loadSpreadsheet()&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXPEgKMtEeOp6bjTuv3lfw" name="cut" specification="_CR608KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>clipBoard = tblGrid.cellSelected.getCellContents();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXPrkKMtEeOp6bjTuv3lfw" name="copy" specification="_CR94QKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(tblGrid.getSelectedRow()+1 &lt; 0 || tblGrid.getSelectedColumn()+1 &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		if(tblGrid.getValueAt(row, col) == null){&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row, col).equals(&quot;&quot;)){&#xD;
			return;&#xD;
		}&#xD;
		clipBoard = (String)tblGrid.getValueAt(row, col);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXQSoKMtEeOp6bjTuv3lfw" name="paste" specification="_CSBioKMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(tblGrid.getSelectedRow()+1 &lt; 0 || tblGrid.getSelectedColumn()+1 &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		if(tblGrid.getValueAt(row, col) == null){&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row, col).equals(&quot;&quot;)){&#xD;
			return;&#xD;
		}&#xD;
		grid.getCell(colConvert, row).setValue(clipBoard);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXRgwKMtEeOp6bjTuv3lfw" name="actionPerformed" specification="_GOZRkKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXRgwaMtEeOp6bjTuv3lfw" name="e" type="_GOVnMKMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>final Object objSourceClass = e.getSource(); //store the class of the source&#xD;
		&#xD;
		/*&#xD;
		 * Template for handling events from each component&#xD;
		 */&#xD;
		if(objSourceClass.equals(this.btnNew) || objSourceClass.equals(this.mniNew)){&#xD;
			newSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnLoad) || objSourceClass.equals(this.mniLoad)){&#xD;
			loadSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnSave) || objSourceClass.equals(this.mniSave)){&#xD;
			saveSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnSaveAs) || objSourceClass.equals(this.mniSaveAs)){&#xD;
			saveAsSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.mniAbout))&#xD;
		{&#xD;
			&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnCopy))&#xD;
		{&#xD;
			copy();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXSu4KMtEeOp6bjTuv3lfw" name="valueChanged" specification="_GOeKEKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXSu4aMtEeOp6bjTuv3lfw" name="e" type="_GObt0KMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>if(tblGrid.getSelectedRow() &lt; 0 || tblGrid.getSelectedColumn() &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = Grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		//System.out.println(row + &quot;&quot; + colConvert  /*(String)tblGrid.getValueAt(row, col)*/);&#xD;
		if(tblGrid.getValueAt(row-1, col-1) == null)&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row-1, col-1).equals(&quot;&quot;))&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		txtInputBox.setText(grid.getCell(colConvert, row).getValue());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXT9AKMtEeOp6bjTuv3lfw" name="tableChanged" specification="_GOgmUKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GXT9AaMtEeOp6bjTuv3lfw" name="e" type="_GOfYMKMtEeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>tblGrid.getModel().removeTableModelListener(this);&#xD;
		if(tblGrid.getSelectedRow() &lt; 0 || tblGrid.getSelectedColumn() &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = Grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		System.out.println(row + &quot;&quot; + colConvert  /*(String)tblGrid.getValueAt(row, col)*/);&#xD;
		if(tblGrid.getValueAt(row-1, col-1) == null)&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row-1, col-1).equals(&quot;&quot;))&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		//tblGrid.getSelectedColumn();&#xD;
		//tblGrid.getSelectedRow();&#xD;
		//tblGrid.getSel&#xD;
if(!((&quot;&quot;+tblGrid.getValueAt(row-1, col-1)).equals(&quot;&quot;+(grid.getCell(colConvert, row).getEvaluatedValue()))))&#xD;
		{&#xD;
		grid.getCell(colConvert, row).setValue(&quot;&quot;+tblGrid.getValueAt(row-1, col-1));&#xD;
}&#xD;
		//txtInputBox.setText(grid.getCell(colConvert, row).getValue());&#xD;
		tblGrid.getModel().addTableModelListener(this);&#xD;
		//System.out.println(&quot;&quot;+row + col + tblGrid.getValueAt(row-1, col-1));&#xD;
	 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXUkEKMtEeOp6bjTuv3lfw" name="setLookAndFeel" specification="_CSNv4KMtEeOp6bjTuv3lfw">
          <language>java</language>
          <body>try{&#xD;
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
		}catch(Exception e){&#xD;
			//Doesn't matter if it doesn't work&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_CRmr4KMtEeOp6bjTuv3lfw" name="displayMessage" method="_GXHIsKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY0_8KMtEeOp6bjTuv3lfw">
            <body>Display a message in the message bar&#xD;
	 *  &#xD;
	 * @param strMessage The message to display</body>
          </ownedComment>
          <ownedParameter xmi:id="_CRnS8KMtEeOp6bjTuv3lfw" name="strMessage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_CRrkYKMtEeOp6bjTuv3lfw" name="updateTable" method="_GXIW0KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY1nAKMtEeOp6bjTuv3lfw">
            <body>Updates to use a new Grid object&#xD;
	 * &#xD;
	 * @param gridUpdate The grid to display</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CRuAoKMtEeOp6bjTuv3lfw" name="newSpreadsheet" method="_GXJk8KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY21IKMtEeOp6bjTuv3lfw">
            <body>Create a new spreadsheet</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CRxD8KMtEeOp6bjTuv3lfw" name="loadSpreadsheet" method="_GXKzEKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY21IaMtEeOp6bjTuv3lfw">
            <body>Load a spreadsheet from a file</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CRy5IKMtEeOp6bjTuv3lfw" name="saveSpreadsheet" method="_GXMoQKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY3cMKMtEeOp6bjTuv3lfw">
            <body>Save the spreadsheet to a file already selected, or prompt for location if file not yet saved</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CR1VYKMtEeOp6bjTuv3lfw" name="saveAsSpreadsheet" method="_GXN2YKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY4DQKMtEeOp6bjTuv3lfw">
            <body>Select a file and save the spreadsheet it</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CR608KMtEeOp6bjTuv3lfw" name="cut" method="_GXPEgKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY4qUKMtEeOp6bjTuv3lfw">
            <body>cut cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CR94QKMtEeOp6bjTuv3lfw" name="copy" method="_GXPrkKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY5RYKMtEeOp6bjTuv3lfw">
            <body>copy cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CSBioKMtEeOp6bjTuv3lfw" name="paste" method="_GXQSoKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY54cKMtEeOp6bjTuv3lfw">
            <body>paste cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_CSNv4KMtEeOp6bjTuv3lfw" name="setLookAndFeel" visibility="private" method="_GXUkEKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY7toKMtEeOp6bjTuv3lfw">
            <body>Sets the look and feel to the current OS</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_GFIA0KMtEeOp6bjTuv3lfw" name="SSGUI" method="_GXEscKMtEeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_GFJ2AKMtEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_GFJ2AaMtEeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_GYzx0KMtEeOp6bjTuv3lfw">
            <body>Default constructor, which acccepts the grid to be displayed&#xD;
	 * &#xD;
	 * @param gridObject The back-end data stored in the grid</body>
          </ownedComment>
          <ownedParameter xmi:id="_GFIn4KMtEeOp6bjTuv3lfw" name="gridObject" type="_CHDBsKMtEeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_GFKdEKMtEeOp6bjTuv3lfw" type="_CQbAIKMtEeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GOZRkKMtEeOp6bjTuv3lfw" name="actionPerformed" method="_GXRgwKMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY6fgKMtEeOp6bjTuv3lfw">
            <body>Capture GUI interactions. need to add the actionlistener to anything that triggers events&#xD;
	 * &#xD;
	 * @param e The actionevent</body>
          </ownedComment>
          <ownedParameter xmi:id="_GOZ4oKMtEeOp6bjTuv3lfw" name="e" type="_GOVnMKMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GOeKEKMtEeOp6bjTuv3lfw" name="valueChanged" method="_GXSu4KMtEeOp6bjTuv3lfw">
          <ownedComment xmi:id="_GY7GkKMtEeOp6bjTuv3lfw">
            <body>Captures de-selection action from the JTable cells, &#xD;
	 * handles this by communicating the cell's current value to back-end for verification&#xD;
	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)</body>
          </ownedComment>
          <ownedParameter xmi:id="_GOexIKMtEeOp6bjTuv3lfw" name="e" type="_GObt0KMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_GOgmUKMtEeOp6bjTuv3lfw" name="tableChanged" method="_GXT9AKMtEeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_GOgmUaMtEeOp6bjTuv3lfw" name="e" type="_GOfYMKMtEeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GbFCsKMtEeOp6bjTuv3lfw" name="" memberEnd="_GbFCsaMtEeOp6bjTuv3lfw _GP9-4KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GbFCsaMtEeOp6bjTuv3lfw" name="" type="_CFb4IKMtEeOp6bjTuv3lfw" association="_GbFCsKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GbQB0KMtEeOp6bjTuv3lfw" name="" memberEnd="_GbQB0aMtEeOp6bjTuv3lfw _GQVLQKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GbQB0aMtEeOp6bjTuv3lfw" name="" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_GbQB0KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GbVhYKMtEeOp6bjTuv3lfw" name="" memberEnd="_GbVhYaMtEeOp6bjTuv3lfw _GQm4EKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GbVhYaMtEeOp6bjTuv3lfw" name="" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_GbVhYKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gb1QoKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gb1QoaMtEeOp6bjTuv3lfw _GRaJUKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gb1QoaMtEeOp6bjTuv3lfw" name="" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_Gb1QoKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gb5iEKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gb5iEaMtEeOp6bjTuv3lfw _GRdzsKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gb5iEaMtEeOp6bjTuv3lfw" name="" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_Gb5iEKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gb_BoKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gb_BoaMtEeOp6bjTuv3lfw _GRjTQKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gb_BoaMtEeOp6bjTuv3lfw" name="" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_Gb_BoKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GcEhMKMtEeOp6bjTuv3lfw" name="" memberEnd="_GcEhMaMtEeOp6bjTuv3lfw _GRqoAKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GcEhMaMtEeOp6bjTuv3lfw" name="" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_GcEhMKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GcLO4KMtEeOp6bjTuv3lfw" name="" memberEnd="_GcL18KMtEeOp6bjTuv3lfw _GRzK4KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GcL18KMtEeOp6bjTuv3lfw" name="" type="_CMm3IKMtEeOp6bjTuv3lfw" association="_GcLO4KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GcUY0KMtEeOp6bjTuv3lfw" name="" memberEnd="_GcUY0aMtEeOp6bjTuv3lfw _GR3cUKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GcUY0aMtEeOp6bjTuv3lfw" name="" type="_CPAq4KMtEeOp6bjTuv3lfw" association="_GcUY0KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GcdiwKMtEeOp6bjTuv3lfw" name="" memberEnd="_GcdiwaMtEeOp6bjTuv3lfw _GR7GsKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GcdiwaMtEeOp6bjTuv3lfw" name="" type="_CPAq4KMtEeOp6bjTuv3lfw" association="_GcdiwKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GclekKMtEeOp6bjTuv3lfw" name="" memberEnd="_GclekaMtEeOp6bjTuv3lfw _GSBNUKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GclekaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GclekKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GcuBcKMtEeOp6bjTuv3lfw" name="" memberEnd="_GcuBcaMtEeOp6bjTuv3lfw _GSE3sKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GcuBcaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GcuBcKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gc19QKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gc19QaMtEeOp6bjTuv3lfw _GSH7AKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gc19QaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gc19QKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GdA8YKMtEeOp6bjTuv3lfw" name="" memberEnd="_GdA8YaMtEeOp6bjTuv3lfw _GSK-UKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GdA8YaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GdA8YKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GdJfQKMtEeOp6bjTuv3lfw" name="" memberEnd="_GdJfQaMtEeOp6bjTuv3lfw _GSOBoKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GdJfQaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GdJfQKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GdRbEKMtEeOp6bjTuv3lfw" name="" memberEnd="_GdRbEaMtEeOp6bjTuv3lfw _GSP20KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GdRbEaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GdRbEKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GdalAKMtEeOp6bjTuv3lfw" name="" memberEnd="_GdalAaMtEeOp6bjTuv3lfw _GSS6IKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GdalAaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GdalAKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gdh5wKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gdh5waMtEeOp6bjTuv3lfw _GSVWYKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gdh5waMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gdh5wKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gdtf8KMtEeOp6bjTuv3lfw" name="" memberEnd="_Gdtf8aMtEeOp6bjTuv3lfw _GSXLkKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gdtf8aMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gdtf8KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gd67UKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gd67UaMtEeOp6bjTuv3lfw _GSZn0KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gd67UaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gd67UKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GeEsUKMtEeOp6bjTuv3lfw" name="" memberEnd="_GeEsUaMtEeOp6bjTuv3lfw _GScrIKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GeEsUaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GeEsUKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GePrcKMtEeOp6bjTuv3lfw" name="" memberEnd="_GePrcaMtEeOp6bjTuv3lfw _GSfHYKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GePrcaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GePrcKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GebRoKMtEeOp6bjTuv3lfw" name="" memberEnd="_GebRoaMtEeOp6bjTuv3lfw _GSg8kKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GebRoaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GebRoKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GelpsKMtEeOp6bjTuv3lfw" name="" memberEnd="_GelpsaMtEeOp6bjTuv3lfw _GSj_4KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GelpsaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GelpsKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GevasKMtEeOp6bjTuv3lfw" name="" memberEnd="_GevasaMtEeOp6bjTuv3lfw _GSnDMKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GevasaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GevasKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ge7A4KMtEeOp6bjTuv3lfw" name="" memberEnd="_Ge7A4aMtEeOp6bjTuv3lfw _GSrUoKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Ge7A4aMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Ge7A4KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GfDjwKMtEeOp6bjTuv3lfw" name="" memberEnd="_GfDjwaMtEeOp6bjTuv3lfw _GStw4KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GfDjwaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GfDjwKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GfMGoKMtEeOp6bjTuv3lfw" name="" memberEnd="_GfMGoaMtEeOp6bjTuv3lfw _GSw0MKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GfMGoaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GfMGoKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GfVQkKMtEeOp6bjTuv3lfw" name="" memberEnd="_GfVQkaMtEeOp6bjTuv3lfw _GSzQcKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GfVQkaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GfVQkKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GfdzcKMtEeOp6bjTuv3lfw" name="" memberEnd="_GfdzcaMtEeOp6bjTuv3lfw _GS0ekaMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GfdzcaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GfdzcKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GfmWUKMtEeOp6bjTuv3lfw" name="" memberEnd="_GfmWUaMtEeOp6bjTuv3lfw _GS2TwKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GfmWUaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GfmWUKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gfu5MKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gfu5MaMtEeOp6bjTuv3lfw _GS3h4KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gfu5MaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gfu5MKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gf0_0KMtEeOp6bjTuv3lfw" name="" memberEnd="_Gf0_0aMtEeOp6bjTuv3lfw _GS5-IKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gf0_0aMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gf0_0KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gf-w0KMtEeOp6bjTuv3lfw" name="" memberEnd="_Gf-w0aMtEeOp6bjTuv3lfw _GS7MQKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gf-w0aMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gf-w0KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GgH6wKMtEeOp6bjTuv3lfw" name="" memberEnd="_GgH6waMtEeOp6bjTuv3lfw _GS9BcKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GgH6waMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GgH6wKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GgSS0KMtEeOp6bjTuv3lfw" name="" memberEnd="_GgSS0aMtEeOp6bjTuv3lfw _GS-2oKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GgSS0aMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GgSS0KMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gga1sKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gga1saMtEeOp6bjTuv3lfw _GTAEwKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gga1saMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gga1sKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GgjYkKMtEeOp6bjTuv3lfw" name="" memberEnd="_GgjYkaMtEeOp6bjTuv3lfw _GTB58KMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GgjYkaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GgjYkKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Ggz3QKMtEeOp6bjTuv3lfw" name="" memberEnd="_Ggz3QaMtEeOp6bjTuv3lfw _GTChAKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Ggz3QaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Ggz3QKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Gg-PUKMtEeOp6bjTuv3lfw" name="" memberEnd="_Gg-PUaMtEeOp6bjTuv3lfw _GTEWMKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_Gg-PUaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_Gg-PUKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GhHZQKMtEeOp6bjTuv3lfw" name="" memberEnd="_GhHZQaMtEeOp6bjTuv3lfw _GTFkUKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GhHZQaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GhHZQKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_GhRKQKMtEeOp6bjTuv3lfw" name="" memberEnd="_GhRKQaMtEeOp6bjTuv3lfw _GTIAkKMtEeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_GhRKQaMtEeOp6bjTuv3lfw" name="" type="_CQbAIKMtEeOp6bjTuv3lfw" association="_GhRKQKMtEeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_y6WGoKMvEeOp6bjTuv3lfw" name="&lt;&lt;contains>>" memberEnd="_y6WtsKMvEeOp6bjTuv3lfw _y6X70qMvEeOp6bjTuv3lfw"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Q5YtQKMwEeOp6bjTuv3lfw" name="&lt;&lt;uses>>" memberEnd="_Q5ZUUKMwEeOp6bjTuv3lfw _Q5ZUU6MwEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_A4EGEKMtEeOp6bjTuv3lfw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_A4FUMKMtEeOp6bjTuv3lfw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_Beyu4KMtEeOp6bjTuv3lfw" name="rules">
          <packagedElement xmi:type="uml:Class" xmi:id="_GGsHEKMtEeOp6bjTuv3lfw" name="ExpectedException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_F_O0MKMtEeOp6bjTuv3lfw" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GGzb0KMtEeOp6bjTuv3lfw" name="Test"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_GG7XoKMtEeOp6bjTuv3lfw" name="Rule"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BLweIKMtEeOp6bjTuv3lfw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_BLxsQKMtEeOp6bjTuv3lfw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_BLzhcKMtEeOp6bjTuv3lfw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_GL0esKMtEeOp6bjTuv3lfw" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GL5XMKMtEeOp6bjTuv3lfw" name="LineBorder"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_GMXRQKMtEeOp6bjTuv3lfw" name="Border"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_BL1WoKMtEeOp6bjTuv3lfw" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_GLtxAKMtEeOp6bjTuv3lfw" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GMRxsKMtEeOp6bjTuv3lfw" name="JTableHeader"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GMplIKMtEeOp6bjTuv3lfw" name="DefaultTableCellRenderer"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_BUzscKMtEeOp6bjTuv3lfw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_GNLJkKMtEeOp6bjTuv3lfw" name="ListSelectionListener"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_GNQCEKMtEeOp6bjTuv3lfw" name="TableModelListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GObt0KMtEeOp6bjTuv3lfw" name="ListSelectionEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_GOfYMKMtEeOp6bjTuv3lfw" name="TableModelEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_BU2vwKMtEeOp6bjTuv3lfw" name="filechooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GEgVwKMtEeOp6bjTuv3lfw" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GLpfkKMtEeOp6bjTuv3lfw" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMEWUKMtEeOp6bjTuv3lfw" name="JTable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GMNgQKMtEeOp6bjTuv3lfw" name="JViewport"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNWIsKMtEeOp6bjTuv3lfw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNcPUKMtEeOp6bjTuv3lfw" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNfSoKMtEeOp6bjTuv3lfw" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNjkEKMtEeOp6bjTuv3lfw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNqRwKMtEeOp6bjTuv3lfw" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GNvKQKMtEeOp6bjTuv3lfw" name="JToolBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GN0CwKMtEeOp6bjTuv3lfw" name="JMenu"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GN6wcKMtEeOp6bjTuv3lfw" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_GOMdQKMtEeOp6bjTuv3lfw" name="JScrollPane"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CEA70KMtEeOp6bjTuv3lfw" name="GridTest">
      <eAnnotations xmi:id="_CECxAKMtEeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CECxAaMtEeOp6bjTuv3lfw" source="codegen">
          <details xmi:id="_CEDYEKMtEeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src-test"/>
        </contents>
      </eAnnotations>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUi84KMtEeOp6bjTuv3lfw" name="testEachSetup" specification="_CETPsqMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Prepping Test....&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUkLAKMtEeOp6bjTuv3lfw" name="testEachCleanup" specification="_CEUd0qMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Test Completed!&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUlZIKMtEeOp6bjTuv3lfw" name="testRemoveSelectedCell" specification="_CEXhIKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUmnQKMtEeOp6bjTuv3lfw" name="testRemoveCell" specification="_CEZ9YKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUpDgKMtEeOp6bjTuv3lfw" name="testClearEquals" specification="_CEbykKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	testGrid.getCell(&quot;A&quot;, 1).setValue(&quot;1&quot;);&#xD;
&#xD;
	testGrid.getCell(&quot;E&quot;, 5).setValue(&quot;9&quot;);&#xD;
	testGrid.clear();&#xD;
	assertEquals(&quot;0&quot;, testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
	assertEquals(&quot;0&quot;, testGrid.getCell(&quot;E&quot;, 5).getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUqRoKMtEeOp6bjTuv3lfw" name="testDisplay" specification="_CEcZoqMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	testGrid.getCell(&quot;B&quot;, 2).setValue(&quot;2&quot;);&#xD;
	testGrid.Display();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUst4KMtEeOp6bjTuv3lfw" name="testLoadSaveEquals1" specification="_CEfc8qMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;a&quot;, 1).setValue(&quot;1&quot;);&#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(&quot;1&quot;, testGrid.getCell(&quot;a&quot;, 1).getValue());&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUujEKMtEeOp6bjTuv3lfw" name="testLoadSaveEquals2" specification="_CEigQqMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    Cell c = testGrid.getCell(&quot;A&quot;, 1);&#xD;
	    c.setValue(&quot;=2&quot;);&#xD;
	    c.evaluate();&#xD;
	    &#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(2.0, testGrid.getCell(&quot;A&quot;, 1).getEvaluatedValue(),0.00001);&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUvxMKMtEeOp6bjTuv3lfw" name="testLoadSaveEquals3" specification="_CEkVcqMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 2).setValue(&quot;3&quot;);&#xD;
	    Cell c = testGrid.getCell(&quot;A&quot;, 1);&#xD;
	    c.setValue(&quot;=A2&quot;);&#xD;
	    c.evaluate();&#xD;
	    &#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(3.0, testGrid.getCell(&quot;A&quot;, 1).getEvaluatedValue(),0.00001);&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUw_UKMtEeOp6bjTuv3lfw" name="testLoadSaveEquals4" specification="_CEn_0aMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 1);//should create a cell&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    testGrid.getCell(&quot;A&quot;, 1).setValue(&quot;5&quot;);//set expected value&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;test&quot;);//load back previous value&#xD;
	    &#xD;
	    File file = new File(&quot;test.sav&quot;);&#xD;
	    assertEquals(&quot;5&quot;,testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUyNcKMtEeOp6bjTuv3lfw" name="testLoadEquals" specification="_CEpN8qMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	  &#xD;
		Hashtable&lt;String, Cell> cells = new Hashtable&lt;>();&#xD;
		Cell cell = new Cell(&quot;A&quot;,1,testGrid);&#xD;
		cell.setValue(&quot;1&quot;);&#xD;
		cells.put(&quot;A1&quot;, cell);&#xD;
		File file = new File(&quot;testLoad.sav&quot;);&#xD;
		try {&#xD;
			FileOutputStream fos = new FileOutputStream(file);&#xD;
			ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;
			oos.writeObject(cells);&#xD;
			oos.close();&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		testGrid.load(&quot;testLoad&quot;);&#xD;
		assertEquals(&quot;1&quot;,testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
		file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GUzbkKMtEeOp6bjTuv3lfw" name="testSaveTrue" specification="_CEqcEqMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 1);//should create a cell&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    File file = new File(&quot;test.sav&quot;);&#xD;
	    assertTrue(file.exists());&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU1QwKMtEeOp6bjTuv3lfw" name="testLoadFalse" specification="_CEvUkKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	assertFalse(testGrid.load(&quot;dosNotExist&quot;));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU3F8KMtEeOp6bjTuv3lfw" name="testGetCellNull" specification="_CEy-8qMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid01.getCell(&quot;m&quot;,1));&#xD;
 /// test beyond lower bound row&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid02.getCell(&quot;a&quot;,0));&#xD;
 /// test beyond upper bound row&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid03.getCell(&quot;a&quot;,testGrid03.getMaxHeight()+1));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU47IKMtEeOp6bjTuv3lfw" name="testSelectCellNull" specification="_CE1bMaMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid01.selectCell(&quot;m&quot;,1));&#xD;
 /// test beyond lower bound row&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid02.selectCell(&quot;a&quot;,0));&#xD;
 /// test beyond upper bound row&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid03.selectCell(&quot;a&quot;,testGrid03.getMaxHeight()+1));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU6JQKMtEeOp6bjTuv3lfw" name="testGetCellNotNull" specification="_CE5FkaMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid01.getCell(&quot;a&quot;,1));&#xD;
 /// test middle bound column&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid02.getCell(&quot;f&quot;,1));&#xD;
 /// test upper bound column&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid03.getCell(&quot;j&quot;,1));&#xD;
 /// test middle bound row&#xD;
 Grid testGrid04 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid04.getCell(&quot;a&quot;,testGrid04.getMaxHeight()/2));&#xD;
 /// test upper bound row&#xD;
 Grid testGrid05 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid05.getCell(&quot;a&quot;,testGrid05.getMaxHeight()));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU7XYKMtEeOp6bjTuv3lfw" name="testSelectCellNotNull" specification="_CE8v8KMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid01.selectCell(&quot;a&quot;,1));&#xD;
 /// test middle bound column&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid02.selectCell(&quot;f&quot;,1));&#xD;
 /// test upper bound column&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid03.selectCell(&quot;j&quot;,1));&#xD;
 /// test middle bound row&#xD;
 Grid testGrid04 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid04.selectCell(&quot;a&quot;,testGrid04.getMaxHeight()/2));&#xD;
 /// test upper bound row&#xD;
 Grid testGrid05 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid05.selectCell(&quot;a&quot;,testGrid05.getMaxHeight()));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GU8lgKMtEeOp6bjTuv3lfw" name="testGetSelectedCellNotNull" specification="_CFAaUKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
 assertNotNull(&quot;getSelectedCell() is not null&quot;, testGrid.getSelectedCell());&#xD;
  </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CEF0UKMtEeOp6bjTuv3lfw" name="testSetup" isStatic="true"/>
      <ownedOperation xmi:id="_CEQzcKMtEeOp6bjTuv3lfw" name="testCleanup" isStatic="true"/>
      <ownedOperation xmi:id="_CETPsqMtEeOp6bjTuv3lfw" name="testEachSetup" method="_GUi84KMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEUd0qMtEeOp6bjTuv3lfw" name="testEachCleanup" method="_GUkLAKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEXhIKMtEeOp6bjTuv3lfw" name="testRemoveSelectedCell" method="_GUlZIKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEZ9YKMtEeOp6bjTuv3lfw" name="testRemoveCell" method="_GUmnQKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEbykKMtEeOp6bjTuv3lfw" name="testClearEquals" method="_GUpDgKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEcZoqMtEeOp6bjTuv3lfw" name="testDisplay" method="_GUqRoKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEfc8qMtEeOp6bjTuv3lfw" name="testLoadSaveEquals1" method="_GUst4KMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEigQqMtEeOp6bjTuv3lfw" name="testLoadSaveEquals2" method="_GUujEKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEkVcqMtEeOp6bjTuv3lfw" name="testLoadSaveEquals3" method="_GUvxMKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEn_0aMtEeOp6bjTuv3lfw" name="testLoadSaveEquals4" method="_GUw_UKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEpN8qMtEeOp6bjTuv3lfw" name="testLoadEquals" method="_GUyNcKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEqcEqMtEeOp6bjTuv3lfw" name="testSaveTrue" method="_GUzbkKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEvUkKMtEeOp6bjTuv3lfw" name="testLoadFalse" method="_GU1QwKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CEy-8qMtEeOp6bjTuv3lfw" name="testGetCellNull" method="_GU3F8KMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CE1bMaMtEeOp6bjTuv3lfw" name="testSelectCellNull" method="_GU47IKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CE5FkaMtEeOp6bjTuv3lfw" name="testGetCellNotNull" method="_GU6JQKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CE8v8KMtEeOp6bjTuv3lfw" name="testSelectCellNotNull" method="_GU7XYKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CFAaUKMtEeOp6bjTuv3lfw" name="testGetSelectedCellNotNull" method="_GU8lgKMtEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFHvEKMtEeOp6bjTuv3lfw" name="Driver">
      <ownedAttribute xmi:id="_GPalQKMtEeOp6bjTuv3lfw" name="_run" visibility="private" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_GPdBgKMtEeOp6bjTuv3lfw" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_GPfdwKMtEeOp6bjTuv3lfw" name="_grid" visibility="private" isStatic="true" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_Ga5cgKMtEeOp6bjTuv3lfw">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_GPgr4KMtEeOp6bjTuv3lfw" value="new Grid()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVBeAKMtEeOp6bjTuv3lfw" name="main" specification="_CFLZcKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_GVBeAaMtEeOp6bjTuv3lfw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVBeAqMtEeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>System.out.println(&quot;Welcome to the COMP354 spreadsheet. You can type help to display a list of possible commands&quot;);&#xD;
		&#xD;
		Scanner sc = new Scanner(System.in);&#xD;
		while(_run){&#xD;
			Cell selectedCell = _grid.getSelectedCell();&#xD;
			System.out.print(selectedCell.getCol() + selectedCell.getRow() + &quot;> &quot;);&#xD;
			String line = sc.nextLine();&#xD;
			String[] command = line.split(&quot; &quot;);&#xD;
			if(command.length == 1){&#xD;
				Driver.evalCommand(command[0]);&#xD;
			}else if(command.length == 2){&#xD;
				Driver.evalCommand(command[0], command[1]);&#xD;
			}else{&#xD;
				System.out.println(&quot;Invalid command&quot;);			&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		sc.close();&#xD;
		System.out.println(&quot;Thanks for using the COMP354 spreadsheet!&quot;);&#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVDTMKMtEeOp6bjTuv3lfw" name="evalCommand" specification="_CFOcwKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_GVDTMaMtEeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>if(command.equalsIgnoreCase(&quot;help&quot;)){//HELP COMMAND&#xD;
			System.out.println(&quot;List of available commands&quot;);&#xD;
			System.out.println(&quot;--------------------------&quot;);&#xD;
			System.out.println(&quot;help\t\t | Display the list of commands&quot;);&#xD;
			System.out.println(&quot;clear\t\t | Clears the current grid&quot;);&#xD;
			System.out.println(&quot;put {value}\t | Put the value inside of the cell&quot;);&#xD;
			System.out.println(&quot;select {cell}\t | Changes the cursor to the chosen cell.Arg should be the name of a cell ex: A1&quot;);&#xD;
			System.out.println(&quot;display\t\t | Display the chosen grid&quot;);&#xD;
			System.out.println(&quot;display {cell}\t | Display the chosen Cell&quot;);&#xD;
			System.out.println(&quot;save {filename}\t | Save the grid to a file&quot;);&#xD;
			System.out.println(&quot;load {filename}\t | Load the grid from a file&quot;);&#xD;
			System.out.println(&quot;exit \t\t | Exit the program&quot;);&#xD;
			&#xD;
		}else if(command.equalsIgnoreCase(&quot;clear&quot;)){//CLEAR COMMAND&#xD;
			_grid.clear();&#xD;
		}else if(command.equalsIgnoreCase(&quot;display&quot;)){//DISPLAY COMMAND&#xD;
			_grid.Display();&#xD;
		}else if(command.equalsIgnoreCase(&quot;exit&quot;)){//EXIT COMMAND&#xD;
			_run = false;&#xD;
		}else{&#xD;
			System.out.println(&quot;Invalid command&quot;);&#xD;
		}&#xD;
	&#xD;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVFvcKMtEeOp6bjTuv3lfw" name="evalCommand" specification="_CFQR8KMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_GVFvcaMtEeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_GVFvcqMtEeOp6bjTuv3lfw" name="arg">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>if(command.equalsIgnoreCase(&quot;put&quot;)){//PUT {VALUE} COMMAND&#xD;
				_grid.getSelectedCell().setValue(arg);&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;select&quot;)){//SELECT {CELL} COMMAND&#xD;
				String[] coord = cellNameToColRow(arg);&#xD;
				if(coord != null){&#xD;
					_grid.selectCell(coord[0], Integer.parseInt(coord[1]));&#xD;
				}else{&#xD;
					System.out.println(&quot;Invalid Cell name&quot;);&#xD;
				}&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;display&quot;)){//DISPLAY {CELL} COMMAND&#xD;
				String[] coord = cellNameToColRow(arg);&#xD;
				if(coord != null){&#xD;
					Cell cellToDisplay = _grid.getCell(coord[0], Integer.parseInt(coord[1]));&#xD;
					if(cellToDisplay != null){&#xD;
						System.out.print(arg + &quot;: &quot;);&#xD;
						cellToDisplay.display();&#xD;
					}else{&#xD;
						System.out.println(&quot;The cell you want to display is out of bound&quot;);&#xD;
					}&#xD;
				}else{&#xD;
					System.out.println(&quot;Invalid Cell name&quot;);&#xD;
				}&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;save&quot;)){//SAVE {FILENAME} COMMAND&#xD;
				_grid.save(arg);&#xD;
			}else if(command.equalsIgnoreCase(&quot;load&quot;)){//LOAD {FILENAME} COMMAND&#xD;
				_grid.load(arg);&#xD;
			}else{//INVALID COMMAND&#xD;
				System.out.println(&quot;Invalid command&quot;);&#xD;
			}&#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GVILsKMtEeOp6bjTuv3lfw" name="cellNameToColRow" specification="_CFUjYKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_GVILsaMtEeOp6bjTuv3lfw" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_GVILsqMtEeOp6bjTuv3lfw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GVILs6MtEeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>if(!name.matches(&quot;^[A-Z]+[0-9]+$&quot;))&#xD;
			return null;&#xD;
		int firstNumPos = name.indexOf(&quot;0&quot;);&#xD;
		&#xD;
		for(int i = 1; i &lt;= 9; i++ ){&#xD;
			int secNumPos = name.indexOf(&quot;&quot;+ i);&#xD;
			if( (secNumPos &lt; firstNumPos &amp;&amp; secNumPos != -1) || firstNumPos == -1)&#xD;
				firstNumPos = secNumPos;&#xD;
			&#xD;
		}&#xD;
		return new String[]{name.substring(0, firstNumPos), name.substring(firstNumPos)};&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CFLZcKMtEeOp6bjTuv3lfw" name="main" isStatic="true" method="_GVBeAKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_CFMAgKMtEeOp6bjTuv3lfw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CFNOoKMtEeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_CFOcwKMtEeOp6bjTuv3lfw" name="evalCommand" isStatic="true" method="_GVDTMKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_CFOcwaMtEeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_CFQR8KMtEeOp6bjTuv3lfw" name="evalCommand" isStatic="true" method="_GVFvcKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_CFQ5AKMtEeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_CFRgEKMtEeOp6bjTuv3lfw" name="arg">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_CFUjYKMtEeOp6bjTuv3lfw" name="cellNameToColRow" isStatic="true" method="_GVILsKMtEeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_CFVKcKMtEeOp6bjTuv3lfw" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_CFVxgKMtEeOp6bjTuv3lfw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CFVxgaMtEeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CVa04KMtEeOp6bjTuv3lfw" name="CellTest">
      <eAnnotations xmi:id="_CVcqEKMtEeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CVcqEaMtEeOp6bjTuv3lfw" source="codegen">
          <details xmi:id="_CVdRIKMtEeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src-test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_GTRKgKMtEeOp6bjTuv3lfw" name="test_Grid" visibility="private" isStatic="true" type="_CHDBsKMtEeOp6bjTuv3lfw" association="_GhbiUKMtEeOp6bjTuv3lfw"/>
      <ownedAttribute xmi:id="_GTRxkaMtEeOp6bjTuv3lfw" name="ACCEPTED_ERROR" isLeaf="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTSYoKMtEeOp6bjTuv3lfw" value="1E-10"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_GTSYoqMtEeOp6bjTuv3lfw" name="exceptionThrown" type="_GGsHEKMtEeOp6bjTuv3lfw" association="_GhmhcKMtEeOp6bjTuv3lfw">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_GTS_sKMtEeOp6bjTuv3lfw" value="ExpectedException.none()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXaqsKMtEeOp6bjTuv3lfw" name="testEachSetup" specification="_CV25wKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Prepping Test....&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXbRwKMtEeOp6bjTuv3lfw" name="testEachCleanup" specification="_CV_coKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Test Completed!&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXcf4KMtEeOp6bjTuv3lfw" name="testDisplayCell" specification="_CWLp4KMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXduAKMtEeOp6bjTuv3lfw" name="testvalidateValue" specification="_CWPUQKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXe8IKMtEeOp6bjTuv3lfw" name="testGetEvaluatedValueEquals" specification="_CWS-oKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 assertEquals(&quot;Get Evaluated default cell value equals&quot;, 0.0, cell01.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
 //test value from setValue&#xD;
 Cell cell02 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Get Evaluated set cell value equals&quot;, 28.0, cell02.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
 //test value from formula&#xD;
 Cell cell03 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Get Evaluated cell formula equals&quot;, 2.0, cell03.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXfjMKMtEeOp6bjTuv3lfw" name="testEvaluateEquals" specification="_CWbhgKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 assertEquals(&quot;Evaluate default cell formula equals&quot;, 0.0, cell01.evaluate(), ACCEPTED_ERROR);&#xD;
 //test evaluate on setValue&#xD;
 Cell cell02 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Evaluate set cell double equals&quot;, 28.0, cell02.evaluate(), ACCEPTED_ERROR);&#xD;
 //test evaluate on formula&#xD;
 Cell cell03 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Evaluate set cell formula equals&quot;, 2.0, cell03.evaluate(), ACCEPTED_ERROR);    &#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXhYYKMtEeOp6bjTuv3lfw" name="testGetValueEquals" specification="_CWjdUKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Get default value equals&quot;, &quot;0&quot;, cell01.getValue());&#xD;
 //test value from setValue&#xD;
 Cell cell02  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Get double value equals&quot;, &quot;28.0&quot;, cell02.getValue());&#xD;
 //test value from formula&#xD;
 Cell cell03  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Get formula value equals&quot;, &quot;=1+1&quot;, cell03.getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXh_cKMtEeOp6bjTuv3lfw" name="testSetValueEquals" specification="_CWqyEKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell = new Cell(&quot;B&quot;,2,test_Grid);&#xD;
 cell.setValue(&quot;0.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;0.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;30.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;30.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;100.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;100.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;1.000000&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;1.000000&quot;, cell.getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXjNkKMtEeOp6bjTuv3lfw" name="testGetRowEquals" specification="_CWz8AKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 1, cell01.getRow());  //Should return an int &#xD;
 //upper row boundary&#xD;
 Cell cell02 = new Cell(&quot;A&quot;, 10, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 10, cell02.getRow());&#xD;
 //middle row boundary &#xD;
 Cell cell03 = new Cell(&quot;A&quot;, 5, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 5, cell03.getRow());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXkbsKMtEeOp6bjTuv3lfw" name="testGetColEquals" specification="_CW730KMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;A&quot;, cell01.getCol());&#xD;
 //testing upper boundary&#xD;
 Cell cell02 = new Cell(&quot;J&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;J&quot;, cell02.getCol());&#xD;
 //testing middle boundary&#xD;
 Cell cell03 = new Cell(&quot;E&quot;, 3, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;E&quot;, cell03.getCol());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_GXlp0KMtEeOp6bjTuv3lfw" name="testIsValidValueFalse" specification="_CXDMkKMtEeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell01.setValue(&quot;0a&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell01.isValidValue());&#xD;
 //just alpha&#xD;
 Cell cell02 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell02.setValue(&quot;aa&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell02.isValidValue());&#xD;
 //test circular reference&#xD;
 Cell cell03 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell03.setValue(&quot;=1+1+B4&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell03.isValidValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CViwsKMtEeOp6bjTuv3lfw" name="testSetup" isStatic="true"/>
      <ownedOperation xmi:id="_CVrTkKMtEeOp6bjTuv3lfw" name="testCleanup" isStatic="true"/>
      <ownedOperation xmi:id="_CV25wKMtEeOp6bjTuv3lfw" name="testEachSetup" method="_GXaqsKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CV_coKMtEeOp6bjTuv3lfw" name="testEachCleanup" method="_GXbRwKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CWLp4KMtEeOp6bjTuv3lfw" name="testDisplayCell" method="_GXcf4KMtEeOp6bjTuv3lfw">
        <ownedComment xmi:id="_GY87wKMtEeOp6bjTuv3lfw">
          <body>Testing display cell</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_CWPUQKMtEeOp6bjTuv3lfw" name="testvalidateValue" method="_GXduAKMtEeOp6bjTuv3lfw">
        <ownedComment xmi:id="_GY9i0KMtEeOp6bjTuv3lfw">
          <body>Testing if value is valid</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_CWS-oKMtEeOp6bjTuv3lfw" name="testGetEvaluatedValueEquals" method="_GXe8IKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CWbhgKMtEeOp6bjTuv3lfw" name="testEvaluateEquals" method="_GXfjMKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CWjdUKMtEeOp6bjTuv3lfw" name="testGetValueEquals" method="_GXhYYKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CWqyEKMtEeOp6bjTuv3lfw" name="testSetValueEquals" method="_GXh_cKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CWz8AKMtEeOp6bjTuv3lfw" name="testGetRowEquals" method="_GXjNkKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CW730KMtEeOp6bjTuv3lfw" name="testGetColEquals" method="_GXkbsKMtEeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_CXDMkKMtEeOp6bjTuv3lfw" name="testIsValidValueFalse" method="_GXlp0KMtEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Ga5cgKMtEeOp6bjTuv3lfw" name="" memberEnd="_Ga5cgaMtEeOp6bjTuv3lfw _GPfdwKMtEeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_Ga5cgaMtEeOp6bjTuv3lfw" name="" type="_CFHvEKMtEeOp6bjTuv3lfw" association="_Ga5cgKMtEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_GhbiUKMtEeOp6bjTuv3lfw" name="" memberEnd="_GhbiUaMtEeOp6bjTuv3lfw _GTRKgKMtEeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_GhbiUaMtEeOp6bjTuv3lfw" name="" type="_CVa04KMtEeOp6bjTuv3lfw" association="_GhbiUKMtEeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_GhmhcKMtEeOp6bjTuv3lfw" name="" memberEnd="_GhmhcaMtEeOp6bjTuv3lfw _GTSYoqMtEeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_GhmhcaMtEeOp6bjTuv3lfw" name="" type="_CVa04KMtEeOp6bjTuv3lfw" association="_GhmhcKMtEeOp6bjTuv3lfw"/>
    </packagedElement>
    <profileApplication xmi:id="_8QMjEKMsEeOp6bjTuv3lfw">
      <eAnnotations xmi:id="_8QQ0gKMsEeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_8QZXYKMsEeOp6bjTuv3lfw" base_Package="_7STXcKMsEeOp6bjTuv3lfw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CDsLsKMtEeOp6bjTuv3lfw" base_Element="_CDq9kKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEIQkKMtEeOp6bjTuv3lfw" base_Element="_CEF0UKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CELT4KMtEeOp6bjTuv3lfw" base_Element="_CEF0UKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEQMYKMtEeOp6bjTuv3lfw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CESooKMtEeOp6bjTuv3lfw" base_Element="_CEQzcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CETPsKMtEeOp6bjTuv3lfw" base_Element="_CEQzcKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CETPsaMtEeOp6bjTuv3lfw" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CET2wKMtEeOp6bjTuv3lfw" base_Element="_CETPsqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEUd0KMtEeOp6bjTuv3lfw" base_Element="_CETPsqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEUd0aMtEeOp6bjTuv3lfw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEVE4KMtEeOp6bjTuv3lfw" base_Element="_CEUd0qMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEW6EKMtEeOp6bjTuv3lfw" base_Element="_CEUd0qMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEW6EaMtEeOp6bjTuv3lfw" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEYvQKMtEeOp6bjTuv3lfw" base_Element="_CEXhIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEZWUKMtEeOp6bjTuv3lfw" base_Element="_CEXhIKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEZWUaMtEeOp6bjTuv3lfw" name="Ignore"/>
    <annotations xmi:id="_CEZWUqMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEakcKMtEeOp6bjTuv3lfw" base_Element="_CEZ9YKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEbLgKMtEeOp6bjTuv3lfw" base_Element="_CEZ9YKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEbLgaMtEeOp6bjTuv3lfw" name="Ignore"/>
    <annotations xmi:id="_CEbLgqMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEbykaMtEeOp6bjTuv3lfw" base_Element="_CEbykKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEcZoKMtEeOp6bjTuv3lfw" base_Element="_CEbykKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEcZoaMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEe14KMtEeOp6bjTuv3lfw" base_Element="_CEcZoqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEfc8KMtEeOp6bjTuv3lfw" base_Element="_CEcZoqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEfc8aMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEgrEKMtEeOp6bjTuv3lfw" base_Element="_CEfc8qMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEigQKMtEeOp6bjTuv3lfw" base_Element="_CEfc8qMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEigQaMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEjuYKMtEeOp6bjTuv3lfw" base_Element="_CEigQqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEkVcKMtEeOp6bjTuv3lfw" base_Element="_CEigQqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEkVcaMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEmKoKMtEeOp6bjTuv3lfw" base_Element="_CEkVcqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEnYwKMtEeOp6bjTuv3lfw" base_Element="_CEkVcqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEn_0KMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEom4KMtEeOp6bjTuv3lfw" base_Element="_CEn_0aMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEpN8KMtEeOp6bjTuv3lfw" base_Element="_CEn_0aMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEpN8aMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEp1AKMtEeOp6bjTuv3lfw" base_Element="_CEpN8qMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEqcEKMtEeOp6bjTuv3lfw" base_Element="_CEpN8qMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEqcEaMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEsRQKMtEeOp6bjTuv3lfw" base_Element="_CEqcEqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEuGcKMtEeOp6bjTuv3lfw" base_Element="_CEqcEqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEutgKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CExw0KMtEeOp6bjTuv3lfw" base_Element="_CEvUkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CEy-8KMtEeOp6bjTuv3lfw" base_Element="_CEvUkKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CEy-8aMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CEzmAKMtEeOp6bjTuv3lfw" base_Element="_CEy-8qMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CE00IKMtEeOp6bjTuv3lfw" base_Element="_CEy-8qMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CE1bMKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CE3QYKMtEeOp6bjTuv3lfw" base_Element="_CE1bMaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CE4egKMtEeOp6bjTuv3lfw" base_Element="_CE1bMaMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CE5FkKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CE66wKMtEeOp6bjTuv3lfw" base_Element="_CE5FkaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CE8I4KMtEeOp6bjTuv3lfw" base_Element="_CE5FkaMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CE8I4aMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CE9-EKMtEeOp6bjTuv3lfw" base_Element="_CE8v8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CE_MMKMtEeOp6bjTuv3lfw" base_Element="_CE8v8KMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CE_zQKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CFCPgKMtEeOp6bjTuv3lfw" base_Element="_CFAaUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CFC2kKMtEeOp6bjTuv3lfw" base_Element="_CFAaUKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CFC2kaMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_CFW_oKMtEeOp6bjTuv3lfw" base_Element="_CFUjYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_CFp6kKMtEeOp6bjTuv3lfw" base_Element="_CFlCEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_CGpZEKMtEeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_CGj5gKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVnCIKMtEeOp6bjTuv3lfw" base_Element="_CViwsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CVpeYKMtEeOp6bjTuv3lfw" base_Element="_CViwsKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CVqFcKMtEeOp6bjTuv3lfw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVwzIKMtEeOp6bjTuv3lfw" base_Element="_CVrTkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CV1EkKMtEeOp6bjTuv3lfw" base_Element="_CVrTkKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CV1roKMtEeOp6bjTuv3lfw" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV6kIKMtEeOp6bjTuv3lfw" base_Element="_CV25wKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CV9ncKMtEeOp6bjTuv3lfw" base_Element="_CV25wKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CV-OgKMtEeOp6bjTuv3lfw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWDHAKMtEeOp6bjTuv3lfw" base_Element="_CV_coKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CWGxYKMtEeOp6bjTuv3lfw" base_Element="_CV_coKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CWHYcKMtEeOp6bjTuv3lfw" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWXQEKMtEeOp6bjTuv3lfw" base_Element="_CWS-oKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CWZsUKMtEeOp6bjTuv3lfw" base_Element="_CWS-oKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CWaTYKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWfL4KMtEeOp6bjTuv3lfw" base_Element="_CWbhgKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CWhoIKMtEeOp6bjTuv3lfw" base_Element="_CWbhgKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CWiPMKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWmgoKMtEeOp6bjTuv3lfw" base_Element="_CWjdUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CWo84KMtEeOp6bjTuv3lfw" base_Element="_CWjdUKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CWpj8KMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWuccKMtEeOp6bjTuv3lfw" base_Element="_CWqyEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CWxfwKMtEeOp6bjTuv3lfw" base_Element="_CWqyEKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CWyG0KMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CW3mYKMtEeOp6bjTuv3lfw" base_Element="_CWz8AKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CW6CoKMtEeOp6bjTuv3lfw" base_Element="_CWz8AKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CW6psKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CW-7IKMtEeOp6bjTuv3lfw" base_Element="_CW730KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CXBXYKMtEeOp6bjTuv3lfw" base_Element="_CW730KMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CXB-cKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CXIFEKMtEeOp6bjTuv3lfw" base_Element="_CXDMkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_CXMWgKMtEeOp6bjTuv3lfw" base_Element="_CXDMkKMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_CXM9kKMtEeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CYORQKMtEeOp6bjTuv3lfw" base_Element="_CYJ_0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F9zQ0KMtEeOp6bjTuv3lfw" base_Element="_F9rVAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F-LrUKMtEeOp6bjTuv3lfw" base_Element="_F9-P8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_F-ZtwKMtEeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_F-PVsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F_WwAKMtEeOp6bjTuv3lfw" base_Element="_F_O0MKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F_er0KMtEeOp6bjTuv3lfw" base_Element="_F_X-IKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F_pD4KMtEeOp6bjTuv3lfw" base_Element="_F_f58KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F_xmwKMtEeOp6bjTuv3lfw" base_Element="_F_qSAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_F_6wsKMtEeOp6bjTuv3lfw" base_Element="_F_zb8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GArlsKMtEeOp6bjTuv3lfw" base_Element="_GAjp4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GA9SgKMtEeOp6bjTuv3lfw" base_Element="_GA1WsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GBHDgKMtEeOp6bjTuv3lfw" base_Element="_GA95kKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GCHwIKMtEeOp6bjTuv3lfw" base_Element="_GCBpgKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GCQ6EKMtEeOp6bjTuv3lfw" base_Element="_GCI-QKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GCZc8KMtEeOp6bjTuv3lfw" base_Element="_GCRhIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GEnqgKMtEeOp6bjTuv3lfw" base_Element="_GEgVwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GGy0wKMtEeOp6bjTuv3lfw" base_Element="_GGsHEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GG6wkKMtEeOp6bjTuv3lfw" base_Element="_GGzb0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GHVnUKMtEeOp6bjTuv3lfw" base_Element="_GG7XoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GJmRIKMtEeOp6bjTuv3lfw" base_Element="_GJaD4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_GKBu8KMtEeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_GJ2v0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_GKH1kKMtEeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_GJ398KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_GKXGIKMtEeOp6bjTuv3lfw" genericsValue="Token" base_Element="_GKMHAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GK7G0KMtEeOp6bjTuv3lfw" base_Element="_GKtEYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GK_YQKMtEeOp6bjTuv3lfw" base_Element="_GK7t4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_GLHUEKMtEeOp6bjTuv3lfw" base_Element="_GK7t4KMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_GLH7IKMtEeOp6bjTuv3lfw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_GLiK0KMtEeOp6bjTuv3lfw" genericsValue="String, Cell" base_Element="_GLbdIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GLsi4KMtEeOp6bjTuv3lfw" base_Element="_GLpfkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GLxbYKMtEeOp6bjTuv3lfw" base_Element="_GLtxAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GL4JEKMtEeOp6bjTuv3lfw" base_Element="_GL0esKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GL7zcKMtEeOp6bjTuv3lfw" base_Element="_GL5XMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GL9ooKMtEeOp6bjTuv3lfw" base_Element="_GL7zcaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMChIKMtEeOp6bjTuv3lfw" base_Element="_GL_d0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMGLgKMtEeOp6bjTuv3lfw" base_Element="_GMEWUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMP8gKMtEeOp6bjTuv3lfw" base_Element="_GMNgQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMUN8KMtEeOp6bjTuv3lfw" base_Element="_GMRxsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMaUkKMtEeOp6bjTuv3lfw" base_Element="_GMXRQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMt2kKMtEeOp6bjTuv3lfw" base_Element="_GMplIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GMzWIKMtEeOp6bjTuv3lfw" base_Element="_GMvEsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GNAKcKMtEeOp6bjTuv3lfw" base_Element="_GM6D0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_GNB_oKMtEeOp6bjTuv3lfw" base_Element="_GM6D0KMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_GNCmsKMtEeOp6bjTuv3lfw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_GNItUKMtEeOp6bjTuv3lfw" base_Element="_GNFqAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNOM4KMtEeOp6bjTuv3lfw" base_Element="_GNLJkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNRQMKMtEeOp6bjTuv3lfw" base_Element="_GNQCEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNU6kKMtEeOp6bjTuv3lfw" base_Element="_GNSeUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNboQKMtEeOp6bjTuv3lfw" base_Element="_GNWIsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNddcKMtEeOp6bjTuv3lfw" base_Element="_GNcPUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNhH0KMtEeOp6bjTuv3lfw" base_Element="_GNfSoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNnOcKMtEeOp6bjTuv3lfw" base_Element="_GNjkEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNtVEKMtEeOp6bjTuv3lfw" base_Element="_GNqRwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GNy0oKMtEeOp6bjTuv3lfw" base_Element="_GNvKQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GN4UMKMtEeOp6bjTuv3lfw" base_Element="_GN0CwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GN-a0KMtEeOp6bjTuv3lfw" base_Element="_GN6wcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GOR80KMtEeOp6bjTuv3lfw" base_Element="_GOMdQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GOYqgKMtEeOp6bjTuv3lfw" base_Element="_GOVnMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GOdjAKMtEeOp6bjTuv3lfw" base_Element="_GObt0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GOf_QKMtEeOp6bjTuv3lfw" base_Element="_GOfYMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPe2sKMtEeOp6bjTuv3lfw" base_Element="_GPalQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPh6AKMtEeOp6bjTuv3lfw" base_Element="_GPfdwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPnZkKMtEeOp6bjTuv3lfw" base_Element="_GPkWQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPqc4KMtEeOp6bjTuv3lfw" base_Element="_GPoAoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPvVYKMtEeOp6bjTuv3lfw" base_Element="_GPrrAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GPzm0KMtEeOp6bjTuv3lfw" base_Element="_GPwjgKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GP8wwKMtEeOp6bjTuv3lfw" base_Element="_GP5tcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_GQC3YKMtEeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_GP9-4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQEskKMtEeOp6bjTuv3lfw" base_Element="_GP9-4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQXngKMtEeOp6bjTuv3lfw" base_Element="_GQVLQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQbR4KMtEeOp6bjTuv3lfw" base_Element="_GQY1oKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQe8QKMtEeOp6bjTuv3lfw" base_Element="_GQcgAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQimoKMtEeOp6bjTuv3lfw" base_Element="_GQgKYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQlp8KMtEeOp6bjTuv3lfw" base_Element="_GQjNsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GQpUUKMtEeOp6bjTuv3lfw" base_Element="_GQm4EKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRQYUKMtEeOp6bjTuv3lfw" base_Element="_GROjIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRUpwKMtEeOp6bjTuv3lfw" base_Element="_GRQYUaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRdMoKMtEeOp6bjTuv3lfw" base_Element="_GRaJUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRfo4KMtEeOp6bjTuv3lfw" base_Element="_GRdzsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRisMKMtEeOp6bjTuv3lfw" base_Element="_GRgP8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRkhYKMtEeOp6bjTuv3lfw" base_Element="_GRjTQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRsdMKMtEeOp6bjTuv3lfw" base_Element="_GRqoAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRvggKMtEeOp6bjTuv3lfw" base_Element="_GRtrUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GRx8wKMtEeOp6bjTuv3lfw" base_Element="_GRwHkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GR0ZAKMtEeOp6bjTuv3lfw" base_Element="_GRzK4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GR54kKMtEeOp6bjTuv3lfw" base_Element="_GR3cUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GR874KMtEeOp6bjTuv3lfw" base_Element="_GR7GsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSDpkKMtEeOp6bjTuv3lfw" base_Element="_GSBNUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSHT8KMtEeOp6bjTuv3lfw" base_Element="_GSE3sKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSKXQKMtEeOp6bjTuv3lfw" base_Element="_GSH7AKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSMzgKMtEeOp6bjTuv3lfw" base_Element="_GSK-UKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSPPwKMtEeOp6bjTuv3lfw" base_Element="_GSOBoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSRsAKMtEeOp6bjTuv3lfw" base_Element="_GSP20KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSUvUKMtEeOp6bjTuv3lfw" base_Element="_GSS6IKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSWkgKMtEeOp6bjTuv3lfw" base_Element="_GSVWYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSZAwKMtEeOp6bjTuv3lfw" base_Element="_GSXLkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSbdAKMtEeOp6bjTuv3lfw" base_Element="_GSZn0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSd5QKMtEeOp6bjTuv3lfw" base_Element="_GScrIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSgVgKMtEeOp6bjTuv3lfw" base_Element="_GSfHYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSixwKMtEeOp6bjTuv3lfw" base_Element="_GSg8kKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSl1EKMtEeOp6bjTuv3lfw" base_Element="_GSj_4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSqGgKMtEeOp6bjTuv3lfw" base_Element="_GSnDMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSsiwKMtEeOp6bjTuv3lfw" base_Element="_GSrUoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSvmEKMtEeOp6bjTuv3lfw" base_Element="_GStw4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GSypYKMtEeOp6bjTuv3lfw" base_Element="_GSw0MKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS0ekKMtEeOp6bjTuv3lfw" base_Element="_GSzQcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS1ssKMtEeOp6bjTuv3lfw" base_Element="_GS0ekaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS260KMtEeOp6bjTuv3lfw" base_Element="_GS2TwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS5XEKMtEeOp6bjTuv3lfw" base_Element="_GS3h4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS6lMKMtEeOp6bjTuv3lfw" base_Element="_GS5-IKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS8aYKMtEeOp6bjTuv3lfw" base_Element="_GS7MQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS-PkKMtEeOp6bjTuv3lfw" base_Element="_GS9BcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GS-2oaMtEeOp6bjTuv3lfw" base_Element="_GS-2oKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTBS4KMtEeOp6bjTuv3lfw" base_Element="_GTAEwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTB58aMtEeOp6bjTuv3lfw" base_Element="_GTB58KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTDvIKMtEeOp6bjTuv3lfw" base_Element="_GTChAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTE9QKMtEeOp6bjTuv3lfw" base_Element="_GTEWMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTFkUaMtEeOp6bjTuv3lfw" base_Element="_GTFkUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTGycKMtEeOp6bjTuv3lfw" base_Element="_GTGLYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTHZgKMtEeOp6bjTuv3lfw" base_Element="_GTGycaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTInoKMtEeOp6bjTuv3lfw" base_Element="_GTIAkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTJOsqMtEeOp6bjTuv3lfw" base_Element="_GTJOsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTKc0KMtEeOp6bjTuv3lfw" base_Element="_GTJ1wKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTRxkKMtEeOp6bjTuv3lfw" base_Element="_GTRKgKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTSYoaMtEeOp6bjTuv3lfw" base_Element="_GTRxkaMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTS_saMtEeOp6bjTuv3lfw" base_Element="_GTSYoqMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_GTTmwKMtEeOp6bjTuv3lfw" base_Element="_GTSYoqMtEeOp6bjTuv3lfw">
    <annotations xmi:id="_GTTmwaMtEeOp6bjTuv3lfw" name="Rule"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTZtYKMtEeOp6bjTuv3lfw" base_Element="_GTXRIKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTdXwKMtEeOp6bjTuv3lfw" base_Element="_GTa7gKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTiQQKMtEeOp6bjTuv3lfw" base_Element="_GTfM8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTl6oKMtEeOp6bjTuv3lfw" base_Element="_GTjeYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GToW4KMtEeOp6bjTuv3lfw" base_Element="_GTmhsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_GTvEkKMtEeOp6bjTuv3lfw" genericsValue="Token" base_Element="_GTsoUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_GTwSsKMtEeOp6bjTuv3lfw" base_Element="_GTsoUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Ga9t8KMtEeOp6bjTuv3lfw" base_Element="_Ga5cgKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GbJUIKMtEeOp6bjTuv3lfw" base_Element="_GbFCsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GbUTQKMtEeOp6bjTuv3lfw" base_Element="_GbQB0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GbZy0KMtEeOp6bjTuv3lfw" base_Element="_GbVhYKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gb47AKMtEeOp6bjTuv3lfw" base_Element="_Gb1QoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gb9zgKMtEeOp6bjTuv3lfw" base_Element="_Gb5iEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GcD6IKMtEeOp6bjTuv3lfw" base_Element="_Gb_BoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GcKAwKMtEeOp6bjTuv3lfw" base_Element="_GcEhMKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GcTxwKMtEeOp6bjTuv3lfw" base_Element="_GcLO4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GcbtkKMtEeOp6bjTuv3lfw" base_Element="_GcUY0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gck3gKMtEeOp6bjTuv3lfw" base_Element="_GcdiwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GcszUKMtEeOp6bjTuv3lfw" base_Element="_GclekKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gc0vIKMtEeOp6bjTuv3lfw" base_Element="_GcuBcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gc_uQKMtEeOp6bjTuv3lfw" base_Element="_Gc19QKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GdIRIKMtEeOp6bjTuv3lfw" base_Element="_GdA8YKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GdQ0AKMtEeOp6bjTuv3lfw" base_Element="_GdJfQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GdYv0KMtEeOp6bjTuv3lfw" base_Element="_GdRbEKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GdhSsKMtEeOp6bjTuv3lfw" base_Element="_GdalAKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GdrqwKMtEeOp6bjTuv3lfw" base_Element="_Gdh5wKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gd34AKMtEeOp6bjTuv3lfw" base_Element="_Gdtf8KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GeDeMKMtEeOp6bjTuv3lfw" base_Element="_Gd67UKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GeOdUKMtEeOp6bjTuv3lfw" base_Element="_GeEsUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GeaDgKMtEeOp6bjTuv3lfw" base_Element="_GePrcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GelCoKMtEeOp6bjTuv3lfw" base_Element="_GebRoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GeuMkKMtEeOp6bjTuv3lfw" base_Element="_GelpsKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Ge5ywKMtEeOp6bjTuv3lfw" base_Element="_GevasKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GfC8sKMtEeOp6bjTuv3lfw" base_Element="_Ge7A4KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GfK4gKMtEeOp6bjTuv3lfw" base_Element="_GfDjwKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GfUCcKMtEeOp6bjTuv3lfw" base_Element="_GfMGoKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GfclUKMtEeOp6bjTuv3lfw" base_Element="_GfVQkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GflvQKMtEeOp6bjTuv3lfw" base_Element="_GfdzcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GftrEKMtEeOp6bjTuv3lfw" base_Element="_GfmWUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GfzxsKMtEeOp6bjTuv3lfw" base_Element="_Gfu5MKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gf-JwKMtEeOp6bjTuv3lfw" base_Element="_Gf0_0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GgGsoKMtEeOp6bjTuv3lfw" base_Element="_Gf-w0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GgREsKMtEeOp6bjTuv3lfw" base_Element="_GgH6wKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GgZnkKMtEeOp6bjTuv3lfw" base_Element="_GgSS0KMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GgiKcKMtEeOp6bjTuv3lfw" base_Element="_Gga1sKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GgypIKMtEeOp6bjTuv3lfw" base_Element="_GgjYkKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gg9oQKMtEeOp6bjTuv3lfw" base_Element="_Ggz3QKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GhGLIKMtEeOp6bjTuv3lfw" base_Element="_Gg-PUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GhQjMKMtEeOp6bjTuv3lfw" base_Element="_GhHZQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GhaUMKMtEeOp6bjTuv3lfw" base_Element="_GhRKQKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_GhlTUKMtEeOp6bjTuv3lfw" base_Element="_GhbiUKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Ght2MKMtEeOp6bjTuv3lfw" base_Element="_GhmhcKMtEeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_Gh1K8KMtEeOp6bjTuv3lfw" base_Element="_GhvEUKMtEeOp6bjTuv3lfw"/>
</xmi:XMI>
