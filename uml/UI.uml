<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_7xdfAKM0EeOp6bjTuv3lfw" name="UI">
    <eAnnotations xmi:id="_79P4QKM0EeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_79P4QaM0EeOp6bjTuv3lfw" source="codegen">
        <details xmi:id="_79P4QqM0EeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src"/>
        <details xmi:id="_9N0IQKM0EeOp6bjTuv3lfw" key="AssociatedSourceCode" value="/COMP354-Spreadsheet/src-test/CellTest.java;2150831555/1;/COMP354-Spreadsheet/src-test/GridTest.java;2192506501/1;/COMP354-Spreadsheet/src/Driver.java;1834035688/1;/COMP354-Spreadsheet/src/spreadsheet/Cell.java;445334591/1;/COMP354-Spreadsheet/src/spreadsheet/Grid.java;3471347071/1;/COMP354-Spreadsheet/src/spreadsheet/SSCellRenderer.java;1766045849/1;/COMP354-Spreadsheet/src/utils/TokenStack.java;1422304373/1;/COMP354-Spreadsheet/src/spreadsheet/SSTable.java;1889975320/1;/COMP354-Spreadsheet/src/spreadsheet/SSTableRenderer.java;2920649407/1;/COMP354-Spreadsheet/src/spreadsheet/Spreadsheet.java;132566989/1;/COMP354-Spreadsheet/src/utils/Formula.java;3014617587/1;/COMP354-Spreadsheet/src/utils/Token.java;1686087865/1;/COMP354-Spreadsheet/src/spreadsheet/SSGUI.java;3550343535/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_8o9HsKM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_8o9uwKM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_8o9uwaM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_8o9uwqM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_8o-V0KM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_8o-V0aM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_8o-V0qM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_8o-V06M0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_8o-84KM0EeOp6bjTuv3lfw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_8o_j8KM0EeOp6bjTuv3lfw" name="spreadsheet">
      <packagedElement xmi:type="uml:Class" xmi:id="_8x1W4KM0EeOp6bjTuv3lfw" clientDependency="_8x2lAaM0EeOp6bjTuv3lfw _84R9IKM0EeOp6bjTuv3lfw" name="Cell">
        <ownedComment xmi:id="_86aEEqM0EeOp6bjTuv3lfw">
          <body>The Cell class is the representation of&#xD;
a single cell inside of a grid.&#xD;
Each cell is an observer that can observe&#xD;
many other cells in order to keep it's formula&#xD;
updated.&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <generalization xmi:id="_84VAcKM0EeOp6bjTuv3lfw" general="_83AKwaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85RboKM0EeOp6bjTuv3lfw" name="_value" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85RboaM0EeOp6bjTuv3lfw" value="&quot;0&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85SCsaM0EeOp6bjTuv3lfw" name="_evaluatedValue" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85SCsqM0EeOp6bjTuv3lfw" value="0.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85SpwaM0EeOp6bjTuv3lfw" name="_col" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85TQ0KM0EeOp6bjTuv3lfw" name="_row" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85TQ0qM0EeOp6bjTuv3lfw" name="_grid" visibility="private" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86vbQKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85T34aM0EeOp6bjTuv3lfw" name="_validValue" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85T34qM0EeOp6bjTuv3lfw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85Ue8aM0EeOp6bjTuv3lfw" name="_observedCells" visibility="private" type="_82-VkKM0EeOp6bjTuv3lfw" association="_86vbQ6M0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_84R9IKM0EeOp6bjTuv3lfw" client="_8x1W4KM0EeOp6bjTuv3lfw" supplier="_82_jsKM0EeOp6bjTuv3lfw" contract="_82_jsKM0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_8x2lAaM0EeOp6bjTuv3lfw" client="_8x1W4KM0EeOp6bjTuv3lfw" supplier="_8x198KM0EeOp6bjTuv3lfw" contract="_8x198KM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86DewKM0EeOp6bjTuv3lfw" name="Cell" specification="_83B_8KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86DewaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86DewqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Dew6M0EeOp6bjTuv3lfw" name="grid" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86DexKM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_observedCells = new ArrayList&lt;Cell>();&#xD;
		_col = col;&#xD;
		_row = row;&#xD;
		_grid = grid;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86DexaM0EeOp6bjTuv3lfw" name="update" specification="_84TLQaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86DexqM0EeOp6bjTuv3lfw" name="o" type="_83AKwaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86Dex6M0EeOp6bjTuv3lfw" name="arg" type="_84SkMaM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>this.evaluate();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86EF0KM0EeOp6bjTuv3lfw" name="setValue" specification="_8x5oUKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86EF0aM0EeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>_value = value;&#xD;
		if(validateValue()){//Validate the value&#xD;
			_validValue = true;&#xD;
			if(!this.isNumeric(_value)){&#xD;
				try{&#xD;
					for(Cell cell : _observedCells){//Stops observing old cells&#xD;
						cell.deleteObserver(this);&#xD;
					}&#xD;
					_observedCells = Formula.listReferencedCells(this);//if exception: thrown here &lt;--&#xD;
					for(Cell cell : _observedCells){//starts observing the new cells&#xD;
						cell.addObserver(this);&#xD;
					}&#xD;
				}catch(Exception e){//Circular reference or invalid formula&#xD;
					System.out.println(e.getMessage());&#xD;
					_validValue = false;&#xD;
				}&#xD;
			}&#xD;
			this.evaluate();//Start the evaluation of the cell value&#xD;
		}else{&#xD;
			_validValue = false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86EF0qM0EeOp6bjTuv3lfw" name="validateValue" specification="_8x6PYaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86EF06M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>String str = _value.trim(); // take off all the spaces for easier calculation&#xD;
&#xD;
		if( isNumeric(str) ){&#xD;
			return true;&#xD;
		}else{&#xD;
			return isValidChar(str) ;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86EF1KM0EeOp6bjTuv3lfw" name="evaluate" specification="_8x7dgKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Es4KM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if(_validValue){&#xD;
			//if the string is an integer&#xD;
			if (this.isNumeric(_value)){&#xD;
				_evaluatedValue = Double.parseDouble(_value);&#xD;
				_validValue = true;&#xD;
				this.setChangeAndNotify();&#xD;
				return _evaluatedValue;&#xD;
			}else{//else call the formula function&#xD;
				// call the Formula.evaluateFormula function&#xD;
				try{&#xD;
					_evaluatedValue = Formula.evaluateFormula(this);&#xD;
					this.setChangeAndNotify();&#xD;
					_validValue = true;&#xD;
					return _evaluatedValue;&#xD;
				}catch(Exception e){&#xD;
					System.out.println(e.getMessage());&#xD;
					_validValue = false;&#xD;
					_evaluatedValue = 0;&#xD;
					this.setChangeAndNotify();&#xD;
					return _evaluatedValue;&#xD;
				}&#xD;
			}&#xD;
		}else{&#xD;
			this.setChangeAndNotify();&#xD;
			return 0;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Es4aM0EeOp6bjTuv3lfw" name="display" specification="_8x8EkKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(_validValue)&#xD;
			System.out.println(_evaluatedValue);&#xD;
		else&#xD;
			System.out.println(&quot;INVALID VALUE: &quot; + _value);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Es4qM0EeOp6bjTuv3lfw" name="getDisplay" specification="_8x8EkaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Es46M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(_validValue)&#xD;
			return String.valueOf(_evaluatedValue);&#xD;
		else&#xD;
			return&quot;INVALID VALUE: &quot; + _value;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Es5KM0EeOp6bjTuv3lfw" name="isNumeric" specification="_8x9SsKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Es5aM0EeOp6bjTuv3lfw" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Es5qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return s.matches(&quot;[-+]?\\d*\\.?\\d+&quot;);  &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86FT8KM0EeOp6bjTuv3lfw" name="isValidChar" specification="_8x95wKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86FT8aM0EeOp6bjTuv3lfw" name="temp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86FT8qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int counter = 0; // &quot;(&quot;, &quot; )&quot; counter&#xD;
		&#xD;
		int len = temp.length();&#xD;
		char c = temp.charAt(0);&#xD;
		if( c != '='){&#xD;
			//if the first character is not &quot;=&quot;&#xD;
			return false;&#xD;
	    }&#xD;
		&#xD;
		for(int i=1;i&lt;len;i++) {&#xD;
		    c = temp.charAt(i);&#xD;
		    // Test for all positive cases&#xD;
		&#xD;
			if( ('0'&lt;=c &amp;&amp; c&lt;='9') ||( 'A'&lt;=c &amp;&amp; c&lt;='Z' ) || &#xD;
					c=='-' || c=='+'|| c=='*'||  c=='/'|| &#xD;
					c=='(' || c==')' || c=='.' || c==' '){&#xD;
				&#xD;
				if(c=='(') {&#xD;
					counter ++;&#xD;
					continue;&#xD;
				}&#xD;
				if(c==')'){&#xD;
			        	counter --;&#xD;
			        	continue;&#xD;
			    }&#xD;
			}else{&#xD;
			    return false;&#xD;
			}&#xD;
		&#xD;
		}//the end of for&#xD;
		&#xD;
	    // if the &quot;(&quot; and &quot;)&quot; are not in pairs&#xD;
	 	if(counter != 0 ){&#xD;
	 		return false;&#xD;
	 	}else{&#xD;
	 		return true;&#xD;
	 	}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86FT86M0EeOp6bjTuv3lfw" name="setChangeAndNotify" specification="_8x-g0aM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>this.setChanged();&#xD;
		this.notifyObservers();&#xD;
		_grid.Display();&#xD;
		System.out.println(&quot;  &quot; + _evaluatedValue +&quot;   &quot; + _row + &quot;   &quot;  + Grid.colToNumber(_col));&#xD;
		if(_grid == null)&#xD;
			System.out.println(&quot;GRID IS NOT THERE&quot;);&#xD;
		if(_grid.getSSTable()== null)&#xD;
			System.out.println(&quot;SSTABLE IS NOT THERE&quot;);&#xD;
		&#xD;
		_grid.getSSTable().setValueAt(_evaluatedValue, _row-1, Grid.colToNumber(_col)-1);&#xD;
	&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86F7AKM0EeOp6bjTuv3lfw" name="getValue" specification="_8x_H4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86F7AaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _value;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86F7AqM0EeOp6bjTuv3lfw" name="getEvaluatedValue" specification="_8x_u8KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86F7A6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return _evaluatedValue;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86F7BKM0EeOp6bjTuv3lfw" name="getCol" specification="_8x_u8qM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86F7BaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _col;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86GiEKM0EeOp6bjTuv3lfw" name="getRow" specification="_8yAWAaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86GiEaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _row;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86GiEqM0EeOp6bjTuv3lfw" name="getGrid" specification="_8yAWA6M0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86GiE6M0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _grid;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86GiFKM0EeOp6bjTuv3lfw" name="getObservedCells" specification="_8yA9EKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86GiFaM0EeOp6bjTuv3lfw" type="_82-VkKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _observedCells;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86HJIKM0EeOp6bjTuv3lfw" name="isValidValue" specification="_8yCLMKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86HJIaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return _validValue;</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8x5oUKM0EeOp6bjTuv3lfw" name="setValue" method="_86EF0KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arIaM0EeOp6bjTuv3lfw">
            <body>Setter for the value. Stops observing any cell.&#xD;
	 * Sets it's new value.&#xD;
	 * If the new value is a formula, get a list of the&#xD;
	 * cell references inside of the formula. If the formula&#xD;
	 * isn't circular, starts observing them. Else set the&#xD;
	 * value as invalid&#xD;
	 * &#xD;
	 * @param value	The new value</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x6PYKM0EeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x6PYaM0EeOp6bjTuv3lfw" name="validateValue" visibility="private" method="_86EF0qM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arIqM0EeOp6bjTuv3lfw">
            <body>Make sure that the value only has valid characters.&#xD;
     * &#xD;
     * @return	true if valid, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x62cKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x7dgKM0EeOp6bjTuv3lfw" name="evaluate" method="_86EF1KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arI6M0EeOp6bjTuv3lfw">
            <body>If the value is numeric, simply convert it into a&#xD;
	 * double. If the value is a formula, call Formula.evaluateFormula.&#xD;
	 * If the formula cannot be evaluated, the value will be set to invalid&#xD;
	 * and evaluated value will be set to 0.&#xD;
	 * After the evaluation, notify all the cell that observers it&#xD;
	 * &#xD;
	 * @return	The evaluated value or 0 if the formula cannot be evaluated&#xD;
	 * @see		Formula</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x7dgaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x8EkKM0EeOp6bjTuv3lfw" name="display" method="_86Es4aM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arJKM0EeOp6bjTuv3lfw">
            <body>Display the evaluated value of a single cell</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8x8EkaM0EeOp6bjTuv3lfw" name="getDisplay" method="_86Es4qM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arJaM0EeOp6bjTuv3lfw">
            <body>Get the string of the display&#xD;
	 * &#xD;
	 * @return The evaluated value</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x8roKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x9SsKM0EeOp6bjTuv3lfw" name="isNumeric" method="_86Es5KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arJqM0EeOp6bjTuv3lfw">
            <body>Check if the string can be converted to a number&#xD;
	 * &#xD;
	 * @param s The string&#xD;
	 * @return	True if it is a number, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x9SsaM0EeOp6bjTuv3lfw" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8x9SsqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x95wKM0EeOp6bjTuv3lfw" name="isValidChar" method="_86FT8KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86arJ6M0EeOp6bjTuv3lfw">
            <body>check if the formula string stars with &quot;=&quot; and contains:&#xD;
	 * &quot;+&quot;	&quot;-&quot;		&quot;*&quot;		&quot;/&quot;		&quot;(&quot;		&quot;)&quot;&#xD;
	 * &quot;.&quot;	&quot;A-Z&quot;	&quot;0-9&quot;	&quot; &quot;&#xD;
	 * &#xD;
	 * @param temp	The string&#xD;
	 * @return		True if the value is valid, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_8x95waM0EeOp6bjTuv3lfw" name="temp">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8x-g0KM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x-g0aM0EeOp6bjTuv3lfw" name="setChangeAndNotify" visibility="private" method="_86FT86M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86bSMKM0EeOp6bjTuv3lfw">
            <body>notify all observers that a change happened&#xD;
	 * in the value of this cell</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8x_H4KM0EeOp6bjTuv3lfw" name="getValue" method="_86F7AKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8x_H4aM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x_u8KM0EeOp6bjTuv3lfw" name="getEvaluatedValue" method="_86F7AqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8x_u8aM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8x_u8qM0EeOp6bjTuv3lfw" name="getCol" method="_86F7BKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yAWAKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yAWAaM0EeOp6bjTuv3lfw" name="getRow" method="_86GiEKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yAWAqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yAWA6M0EeOp6bjTuv3lfw" name="getGrid" method="_86GiEqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83DOEKM0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yA9EKM0EeOp6bjTuv3lfw" name="getObservedCells" method="_86GiFKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_84UZYqM0EeOp6bjTuv3lfw" type="_82-VkKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yCLMKM0EeOp6bjTuv3lfw" name="isValidValue" method="_86HJIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yCyQKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_83B_8KM0EeOp6bjTuv3lfw" name="Cell" method="_86DewKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83CnAKM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83CnAaM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86arIKM0EeOp6bjTuv3lfw">
            <body>Parameterized constructor&#xD;
	 * &#xD;
	 * @param col	The column of the cell&#xD;
	 * @param row	The row of the cell&#xD;
	 * @param grid	The grid in which the cell is</body>
          </ownedComment>
          <ownedParameter xmi:id="_83B_8aM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83B_8qM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83B_86M0EeOp6bjTuv3lfw" name="grid" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83CnAqM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_84TLQaM0EeOp6bjTuv3lfw" name="update" method="_86DexaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_84TyUKM0EeOp6bjTuv3lfw" name="o" type="_83AKwaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84TyUaM0EeOp6bjTuv3lfw" name="arg" type="_84SkMaM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8yHDsKM0EeOp6bjTuv3lfw" clientDependency="_8yHqwKM0EeOp6bjTuv3lfw" name="Grid">
        <ownedComment xmi:id="_86bSMaM0EeOp6bjTuv3lfw">
          <body>The Grid class represent a single spreadsheet. It is stored in&#xD;
a hash table to keep an infinite scrolling spreadsheet to take&#xD;
too much memory&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_85WUIKM0EeOp6bjTuv3lfw" name="_cells" visibility="private" type="_826rMKM0EeOp6bjTuv3lfw" association="_86wCUaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85XiQKM0EeOp6bjTuv3lfw" name="_selectedCell" visibility="private" type="_8x1W4KM0EeOp6bjTuv3lfw" association="_86xQcKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85XiQqM0EeOp6bjTuv3lfw" name="_maxWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85YJUaM0EeOp6bjTuv3lfw" name="_maxHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85YwYaM0EeOp6bjTuv3lfw" name="_currentWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85ZXcKM0EeOp6bjTuv3lfw" name="_currentHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85ZXcqM0EeOp6bjTuv3lfw" name="tblInterface" visibility="private" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_86x3gaM0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_8yHqwKM0EeOp6bjTuv3lfw" client="_8yHDsKM0EeOp6bjTuv3lfw" supplier="_8x198KM0EeOp6bjTuv3lfw" contract="_8x198KM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86HJIqM0EeOp6bjTuv3lfw" name="Grid" specification="_8yI44KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86HJI6M0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_cells = new Hashtable&lt;String, Cell>(); // generates hashtable for cells&#xD;
		_selectedCell = new Cell(&quot;A&quot;, 1, this );&#xD;
		_cells.put(&quot;A&quot; + 1, _selectedCell);&#xD;
		_maxWidth = 10;&#xD;
		_maxHeight = 10;&#xD;
		_currentWidth = 1;&#xD;
		_currentHeight = 1;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86HwMKM0EeOp6bjTuv3lfw" name="Grid" specification="_8yKHAKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86HwMaM0EeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86HwMqM0EeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86HwM6M0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_cells = new Hashtable&lt;String, Cell>(); // generates hashtable for cells&#xD;
		_selectedCell = new Cell(&quot;A&quot;, 1, this );&#xD;
		_cells.put(&quot;A&quot; + 1, _selectedCell);&#xD;
		_maxWidth = maxWidth;&#xD;
		_maxHeight = maxHeight;&#xD;
		_currentWidth = 1;&#xD;
		_currentHeight = 1;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86HwNKM0EeOp6bjTuv3lfw" name="setSSTable" specification="_83LJ4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86HwNaM0EeOp6bjTuv3lfw" name="s" type="_8yuHsKM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>this.tblInterface = s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86HwNqM0EeOp6bjTuv3lfw" name="getSSTable" specification="_8yLVIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86HwN6M0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return this.tblInterface;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86IXQKM0EeOp6bjTuv3lfw" name="getCell" specification="_8yL8MKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86IXQaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86IXQqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86IXQ6M0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>int intCol = colToNumber(col);&#xD;
		if(intCol &lt;= _maxWidth &amp;&amp; intCol >= 1 &amp;&amp; row &lt;= _maxHeight &amp;&amp; row >= 1 ){&#xD;
			Cell foundCell = _cells.get( col + row );&#xD;
			if( foundCell == null ){&#xD;
				foundCell = new Cell( col, row, this );&#xD;
				_cells.put(col + row, foundCell);&#xD;
&#xD;
				if(intCol > _currentWidth)&#xD;
					_currentWidth = Math.min(intCol, _maxWidth);&#xD;
				if(row > _currentHeight)&#xD;
					_currentHeight = Math.min(row, _maxHeight);&#xD;
&#xD;
			}&#xD;
			return foundCell;&#xD;
		}else{&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86IXRKM0EeOp6bjTuv3lfw" name="checkCell" specification="_8yMjQKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86IXRaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86IXRqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86IXR6M0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>int intCol = colToNumber(col);&#xD;
		if(intCol &lt;= _maxWidth &amp;&amp; intCol >= 1 &amp;&amp; row &lt;= _maxHeight &amp;&amp; row >= 1 ){&#xD;
			Cell foundCell = _cells.get( col + row );&#xD;
			if( foundCell == null ){&#xD;
				return null;&#xD;
&#xD;
			}&#xD;
			return foundCell;&#xD;
		}else{&#xD;
			return null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86I-UKM0EeOp6bjTuv3lfw" name="setCells" specification="_84WOkKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86I-UaM0EeOp6bjTuv3lfw" name="cells" type="_826rMKM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>_cells = cells;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86I-UqM0EeOp6bjTuv3lfw" name="selectCell" specification="_8yOYcKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86I-U6M0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86I-VKM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86I-VaM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>Cell selectedCell = this.getCell(col, row);&#xD;
		if( selectedCell != null )&#xD;
			return _selectedCell = selectedCell;&#xD;
		return null;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86JlYKM0EeOp6bjTuv3lfw" name="removeSelectedCell" specification="_8yO_gKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>this.removeCell( _selectedCell.getCol(), _selectedCell.getRow() );&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86JlYaM0EeOp6bjTuv3lfw" name="removeCell" specification="_8yPmkKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86JlYqM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86JlY6M0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Cell cell = this.getCell(col, row);&#xD;
&#xD;
&#xD;
		for(Cell observed : cell.getObservedCells()){&#xD;
			observed.deleteObserver(cell);&#xD;
		}&#xD;
		cell.setValue(&quot;0&quot;);&#xD;
&#xD;
		if( cell.countObservers() == 0 ){&#xD;
			_cells.remove( col + row );&#xD;
			if(_selectedCell == this.getCell(col, row))&#xD;
				_selectedCell = null;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86KMcKM0EeOp6bjTuv3lfw" name="clear" specification="_8yQNoKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>_cells.clear();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86KMcaM0EeOp6bjTuv3lfw" name="getSelectedCell" specification="_8yQNoaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86KMcqM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _selectedCell;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86KzgKM0EeOp6bjTuv3lfw" name="getMaxWidth" specification="_8yQ0sKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86KzgaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _maxWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86KzgqM0EeOp6bjTuv3lfw" name="getMaxHeight" specification="_8yRbwKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Kzg6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _maxHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86LakKM0EeOp6bjTuv3lfw" name="getCurrentWidth" specification="_8yRbwqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86LakaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _currentWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86LakqM0EeOp6bjTuv3lfw" name="getCurrentHeight" specification="_8ySC0aM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Lak6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _currentHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86MBoKM0EeOp6bjTuv3lfw" name="setMaxWidth" specification="_8ySp4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86MBoaM0EeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_maxWidth = maxWidth;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86MBoqM0EeOp6bjTuv3lfw" name="setMaxHeight" specification="_8ySp4qM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86MBo6M0EeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_maxHeight = maxHeight;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86MosKM0EeOp6bjTuv3lfw" name="Display" specification="_8yTQ8aM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>System.out.println(&quot;GRID&quot;);&#xD;
		System.out.println(&quot;---------------------------&quot;);&#xD;
		for(int i = 0; i &lt;= _currentHeight; i++){&#xD;
			for(int c = 0; c &lt;= _currentWidth; c++){				&#xD;
				System.out.print(&quot;|&quot;);&#xD;
				if(i == 0){&#xD;
					if(c == 0){&#xD;
						System.out.print(centerPad(&quot;&quot;, 10));&#xD;
					}else{&#xD;
						System.out.print(centerPad(numToCol(c), 10));&#xD;
					}&#xD;
				}else{&#xD;
					if(c == 0){&#xD;
						System.out.print(centerPad(String.valueOf(i), 10));&#xD;
					}else{&#xD;
						Cell x = this.checkCell(numToCol(c), i);&#xD;
						if(x == null)&#xD;
							System.out.print(centerPad(&quot;null&quot;, 10));&#xD;
						else&#xD;
							System.out.print(centerPad(x.getDisplay(), 10));&#xD;
&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			System.out.print(&quot;|\n&quot; );&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86MosaM0EeOp6bjTuv3lfw" name="numToCol" specification="_8yT4AKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86MosqM0EeOp6bjTuv3lfw" name="columnIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Mos6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (columnIndex == 0)&#xD;
			return null;&#xD;
		columnIndex--;&#xD;
		int base = 26;&#xD;
		StringBuffer b = new StringBuffer();&#xD;
		do {&#xD;
			int digit = columnIndex % base + 65;&#xD;
			b.append(Character.valueOf((char) digit));&#xD;
			columnIndex = (columnIndex / base) - 1;&#xD;
		} while (columnIndex >= 0);&#xD;
&#xD;
		return b.reverse().toString();&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86NPwKM0EeOp6bjTuv3lfw" name="colToNumber" specification="_8yUfEKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86NPwaM0EeOp6bjTuv3lfw" name="str">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86NPwqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>char[] chars = str.toUpperCase().toCharArray();&#xD;
&#xD;
		int sum = 0;&#xD;
&#xD;
		for (int i = 0; i &lt; chars.length; i++)&#xD;
		{&#xD;
			sum *= 26;&#xD;
			sum += (chars[i] - 'A' + 1);&#xD;
		}&#xD;
&#xD;
		return sum;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86NPw6M0EeOp6bjTuv3lfw" name="centerPad" specification="_8yVGIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86NPxKM0EeOp6bjTuv3lfw" name="string">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86NPxaM0EeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86NPxqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int stringLength = string.length();&#xD;
		int padding = size - stringLength;&#xD;
		int leftPad = padding - padding/2;&#xD;
		int rightPad = padding - leftPad;&#xD;
&#xD;
&#xD;
		return createPad(rightPad) + string + createPad(leftPad);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86N20KM0EeOp6bjTuv3lfw" name="createPad" specification="_8yW7UKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86N20aM0EeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86N20qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		for(int i = 0; i &lt; size; i++)&#xD;
			s+=&quot; &quot;;&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86N206M0EeOp6bjTuv3lfw" name="save" specification="_8yXiYKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86N21KM0EeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86N21aM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			// .sav extension no longer needed, implicit in how the GUI handles load/save&#xD;
			FileOutputStream fileOut = new FileOutputStream(fileName);&#xD;
			ObjectOutputStream out = new ObjectOutputStream(fileOut);&#xD;
&#xD;
			/* New stuff to deal with Non-Serializable exceptions */&#xD;
			Hashtable&lt;String, String> hTemp = new Hashtable&lt;String,String>(); &#xD;
			Set&lt;String> keys = _cells.keySet();&#xD;
&#xD;
			for(String key: keys) {&#xD;
				hTemp.put(key,_cells.get(key).getValue());&#xD;
				System.out.println(&quot;\nKey: &quot; + key + &quot;\n&quot;);&#xD;
				System.out.println(&quot;Value: &quot; + hTemp.get(key) + &quot;\n&quot;);&#xD;
			}&#xD;
&#xD;
			out.writeObject(hTemp);&#xD;
			/* End of new stuff */&#xD;
&#xD;
			out.close();&#xD;
			fileOut.close();&#xD;
			return true;&#xD;
		}&#xD;
		catch(FileNotFoundException e){&#xD;
			System.out.println(e.getMessage());&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		} &#xD;
		catch (IOException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86N21qM0EeOp6bjTuv3lfw" name="load" specification="_8yYwgKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86N216M0EeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86N22KM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			FileInputStream fileIn = new FileInputStream(fileName);&#xD;
			ObjectInputStream in = new ObjectInputStream(fileIn);&#xD;
&#xD;
			/* New stuff to deal with Non-Serializable exceptions */&#xD;
			Hashtable&lt;String, String> hTemp = (Hashtable&lt;String, String>)in.readObject();&#xD;
			Set&lt;String> keys = hTemp.keySet();&#xD;
&#xD;
			for(String key: keys) {&#xD;
&#xD;
				String col = colFromColRow(key);&#xD;
				int row = rowFromColRow(key);&#xD;
				String value = hTemp.get(key);&#xD;
				Cell c = new Cell(col, row, this);&#xD;
				c.setValue(value);&#xD;
				System.out.println(&quot;\nCell value: &quot; + value + &quot;\n&quot;); // FOR DEBUGGING&#xD;
				_cells.put(key, c);&#xD;
&#xD;
			}&#xD;
			/* End of new stuff */&#xD;
&#xD;
			in.close();&#xD;
			fileIn.close();&#xD;
			return true;&#xD;
		}catch (ClassNotFoundException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			return false;&#xD;
		}catch (IOException e) {&#xD;
			System.out.println(e.getMessage());&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Od4KM0EeOp6bjTuv3lfw" name="colFromColRow" specification="_8yZ-oKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Od4aM0EeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Od4qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int position = 1;&#xD;
&#xD;
		if('A' &lt;= colrow.charAt(1) &amp;&amp; colrow.charAt(1) &lt;= 'Z')&#xD;
			position = 2;&#xD;
&#xD;
		return colrow.substring(0,position);&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Od46M0EeOp6bjTuv3lfw" name="rowFromColRow" specification="_8ybMwKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Od5KM0EeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Od5aM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int position = 1;&#xD;
&#xD;
		if('A' &lt;= colrow.charAt(1) &amp;&amp; colrow.charAt(1) &lt;= 'Z')&#xD;
			position = 2;&#xD;
&#xD;
		return Integer.parseInt(colrow.substring(position));&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8yI44KM0EeOp6bjTuv3lfw" name="Grid" method="_86HJIqM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8yJf8KM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8yJf8aM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86bSMqM0EeOp6bjTuv3lfw">
            <body>Default constructor. Set the max size to&#xD;
	 * 10 x 10, create the cell A1 and select it</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yJf8qM0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yKHAKM0EeOp6bjTuv3lfw" name="Grid" method="_86HwMKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8yKHA6M0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8yKHBKM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86bSM6M0EeOp6bjTuv3lfw">
            <body>Default constructor. Set the max size to&#xD;
	 * maxWidth X maxHeight, create the cell A1 and select it&#xD;
	 * &#xD;
	 * @param maxWidth	The maximum width of the spreadsheet. -1 = infinite&#xD;
	 * @param maxHeight	The maximum height of the spreadsheet. -1 = infinite</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yKHAaM0EeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yKHAqM0EeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yKHBaM0EeOp6bjTuv3lfw" type="_8yHDsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yLVIKM0EeOp6bjTuv3lfw" name="getSSTable" method="_86HwNqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83Lw8KM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yL8MKM0EeOp6bjTuv3lfw" name="getCell" method="_86IXQKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86bSNKM0EeOp6bjTuv3lfw">
            <body>Try to access a single cell inside of the spreadsheet.&#xD;
	 * If the cell doesn't exist, it will create it as long&#xD;
	 * as it is inside of the bound(maxWidth/maxHeight)&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.&#xD;
	 * @return		The cell if it's inside of the bounds, null otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yL8MaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yL8MqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83MYAKM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yMjQKM0EeOp6bjTuv3lfw" name="checkCell" method="_86IXRKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yMjQaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yNKUKM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83MYAaM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yOYcKM0EeOp6bjTuv3lfw" name="selectCell" method="_86I-UqM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86bSNqM0EeOp6bjTuv3lfw">
            <body>Select a cell if it is within bounds. If the cell&#xD;
	 * doesn't exist it will be created. If the cell is out&#xD;
	 * of bound, the selected cell won't change.&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.&#xD;
	 * @return		The cell at location (col, row). Null if out of bound.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yOYcaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yOYcqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83MYAqM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yO_gKM0EeOp6bjTuv3lfw" name="removeSelectedCell" method="_86JlYKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86bSN6M0EeOp6bjTuv3lfw">
            <body>Remove the selected cell from the grid as long as the&#xD;
	 * cell isn't observed by any other</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8yPmkKM0EeOp6bjTuv3lfw" name="removeCell" method="_86JlYaM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5QKM0EeOp6bjTuv3lfw">
            <body>Remove the cell at location (col, row) from the grid as long as the&#xD;
	 * cell isn't observed by any other. If it is the selected cell, selected&#xD;
	 * cell will be set to null&#xD;
	 * &#xD;
	 * @param col	Column of the cell. Format: &quot;AZ&quot;, &quot;A&quot;&#xD;
	 * @param row	Row of the cell.</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yPmkaM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yPmkqM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yQNoKM0EeOp6bjTuv3lfw" name="clear" method="_86KMcKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5QaM0EeOp6bjTuv3lfw">
            <body>Empties the Grid</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8yQNoaM0EeOp6bjTuv3lfw" name="getSelectedCell" method="_86KMcaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83M_EKM0EeOp6bjTuv3lfw" type="_8x1W4KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yQ0sKM0EeOp6bjTuv3lfw" name="getMaxWidth" method="_86KzgKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yQ0saM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yRbwKM0EeOp6bjTuv3lfw" name="getMaxHeight" method="_86KzgqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yRbwaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yRbwqM0EeOp6bjTuv3lfw" name="getCurrentWidth" method="_86LakKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ySC0KM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ySC0aM0EeOp6bjTuv3lfw" name="getCurrentHeight" method="_86LakqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ySC0qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ySp4KM0EeOp6bjTuv3lfw" name="setMaxWidth" method="_86MBoKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ySp4aM0EeOp6bjTuv3lfw" name="maxWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ySp4qM0EeOp6bjTuv3lfw" name="setMaxHeight" method="_86MBoqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yTQ8KM0EeOp6bjTuv3lfw" name="maxHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yTQ8aM0EeOp6bjTuv3lfw" name="Display" method="_86MosKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5QqM0EeOp6bjTuv3lfw">
            <body>Display the grid inside of the console</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8yT4AKM0EeOp6bjTuv3lfw" name="numToCol" isStatic="true" method="_86MosaM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5Q6M0EeOp6bjTuv3lfw">
            <body>Utility method to convert a number to&#xD;
	 * its equivalent column name&#xD;
	 * &#xD;
	 * @param columnIndex	the integer representation of the column&#xD;
	 * @return				the string representation of the column</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yT4AaM0EeOp6bjTuv3lfw" name="columnIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yT4AqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yUfEKM0EeOp6bjTuv3lfw" name="colToNumber" isStatic="true" method="_86NPwKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5RKM0EeOp6bjTuv3lfw">
            <body>Utility method to convert a column name to&#xD;
	 * its equivalent integer&#xD;
	 * &#xD;
	 * @param str	the string representation of the column&#xD;
	 * @return		the integer representation of the column</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yUfEaM0EeOp6bjTuv3lfw" name="str">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yUfEqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yVGIKM0EeOp6bjTuv3lfw" name="centerPad" visibility="private" method="_86NPw6M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5RaM0EeOp6bjTuv3lfw">
            <body>Utility method to add space padding&#xD;
	 * to the left and right of a string&#xD;
	 * &#xD;
	 * @param string	the string to pad&#xD;
	 * @param size		the total number of character you want the string to be&#xD;
	 * @return			the final string with the pading</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yVtMKM0EeOp6bjTuv3lfw" name="string">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yVtMaM0EeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yVtMqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yW7UKM0EeOp6bjTuv3lfw" name="createPad" visibility="private" method="_86N20KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5RqM0EeOp6bjTuv3lfw">
            <body>Utility method to create a string of&#xD;
	 * x spaces where x is the size&#xD;
	 * &#xD;
	 * @param size	number of space&#xD;
	 * @return		string of size spaces</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yW7UaM0EeOp6bjTuv3lfw" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yW7UqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yXiYKM0EeOp6bjTuv3lfw" name="save" method="_86N206M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5R6M0EeOp6bjTuv3lfw">
            <body>Save the grid to the file&#xD;
	 * &#xD;
	 * @param fileName	The filename without the extension</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yXiYaM0EeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yYJcKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yYwgKM0EeOp6bjTuv3lfw" name="load" method="_86N21qM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86b5SKM0EeOp6bjTuv3lfw">
            <body>Load a grid from the specified file&#xD;
	 * &#xD;
	 * @param fileName	The filename without the extension</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yYwgaM0EeOp6bjTuv3lfw" name="fileName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yZXkKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8yZ-oKM0EeOp6bjTuv3lfw" name="colFromColRow" isStatic="true" method="_86Od4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yZ-oaM0EeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yalsKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ybMwKM0EeOp6bjTuv3lfw" name="rowFromColRow" isStatic="true" method="_86Od46M0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ybz0KM0EeOp6bjTuv3lfw" name="colrow">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8ybz0aM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_83LJ4KM0EeOp6bjTuv3lfw" name="setSSTable" method="_86HwNKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83LJ4aM0EeOp6bjTuv3lfw" name="s" type="_8yuHsKM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_84WOkKM0EeOp6bjTuv3lfw" name="setCells" method="_86I-UKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86bSNaM0EeOp6bjTuv3lfw">
            <body>Changes the hash table to the one specified&#xD;
	 * &#xD;
	 * @param cells The new hash table for the grid</body>
          </ownedComment>
          <ownedParameter xmi:id="_84WOkaM0EeOp6bjTuv3lfw" name="cells" type="_826rMKM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8yihgKM0EeOp6bjTuv3lfw" clientDependency="_84Z48KM0EeOp6bjTuv3lfw" name="SSCellRenderer">
        <ownedComment xmi:id="_86cgUKM0EeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
&#xD;
Used for formatting the cells</body>
        </ownedComment>
        <generalization xmi:id="_84excKM0EeOp6bjTuv3lfw" general="_84YDwKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85alkKM0EeOp6bjTuv3lfw" name="bdrNotSelected" visibility="private" type="_84Z48aM0EeOp6bjTuv3lfw" association="_86zFoKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85bMoaM0EeOp6bjTuv3lfw" name="bdrSelected" visibility="private" type="_84bHEKM0EeOp6bjTuv3lfw" association="_86zssaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85bzsaM0EeOp6bjTuv3lfw" name="dimCellSize" visibility="private" type="_84buIKM0EeOp6bjTuv3lfw" association="_860TwaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85cawaM0EeOp6bjTuv3lfw" name="cellSelected_Row" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85cawqM0EeOp6bjTuv3lfw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85dB0aM0EeOp6bjTuv3lfw" name="cellSelected_Col" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85dB0qM0EeOp6bjTuv3lfw" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85do4aM0EeOp6bjTuv3lfw" name="cellContents" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85do4qM0EeOp6bjTuv3lfw" name="dummyGrid" visibility="private" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86060aM0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_84Z48KM0EeOp6bjTuv3lfw" client="_8yihgKM0EeOp6bjTuv3lfw" supplier="_84ZR4KM0EeOp6bjTuv3lfw" contract="_84ZR4KM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86PE8KM0EeOp6bjTuv3lfw" name="SSCellRenderer" specification="_8yk9wKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86PE8aM0EeOp6bjTuv3lfw" name="intHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE8qM0EeOp6bjTuv3lfw" name="intWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE86M0EeOp6bjTuv3lfw" type="_8yihgKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		bdrNotSelected  = new EmptyBorder(1, 2, 1, 2);&#xD;
		bdrSelected = new LineBorder(Color.blue);&#xD;
		&#xD;
		dimCellSize = new Dimension();&#xD;
		dimCellSize.height = intHeight;&#xD;
		dimCellSize.width  = intWidth;&#xD;
		&#xD;
		this.setSize(dimCellSize);&#xD;
		this.setOpaque(true);&#xD;
		this.setHorizontalAlignment(SwingConstants.CENTER);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86PE9KM0EeOp6bjTuv3lfw" name="getTableCellRendererComponent" specification="_84djUaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86PE9aM0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86PE9qM0EeOp6bjTuv3lfw" name="cell" type="_84SkMaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86PE96M0EeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE-KM0EeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE-aM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE-qM0EeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86PE-6M0EeOp6bjTuv3lfw" type="_84cVMKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>//Set formatting for all cells&#xD;
  	  	this.setToolTipText(&quot;Double-click to edit.&quot;);&#xD;
  	  	this.setFont(new Font(&quot;Times&quot;, Font.PLAIN, 11));&#xD;
		this.setForeground(new Color(0,0,0)); //text color&#xD;
		&#xD;
		//set the text to display&#xD;
		if(cell != null /*&amp;&amp; (double) cell != 0.0)   ignore empty value cells              */){&#xD;
	  		this.setText(&quot;&quot;+cell);&#xD;
	  		cellContents = &quot;&quot;+cell;&#xD;
		}else{&#xD;
			this.setText(&quot;&quot;);&#xD;
			cellContents = &quot;&quot;;&#xD;
		}&#xD;
 	&#xD;
  		//Highlights a cell when selected&#xD;
		if (isSelected) {&#xD;
		  setBorder(bdrSelected);&#xD;
		  this.setBackground(new Color(240,240,255));&#xD;
		  cellSelected_Col = column + 1;&#xD;
		  cellSelected_Row = row + 1;&#xD;
		  &#xD;
		} else {&#xD;
		  setBorder(bdrNotSelected);&#xD;
		  this.setBackground(new Color(255,255,255));&#xD;
		}&#xD;
	&#xD;
		&#xD;
		return this;&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86PsAKM0EeOp6bjTuv3lfw" name="getSelected_Col" specification="_8ymL4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86PsAaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return dummyGrid.numToCol(cellSelected_Col);&#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86PsAqM0EeOp6bjTuv3lfw" name="getSelected_Row" specification="_8ymy8aM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86PsA6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return cellSelected_Row;&#xD;
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8yk9wKM0EeOp6bjTuv3lfw" name="SSCellRenderer" method="_86PE8KM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8yk9w6M0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8ylk0KM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86cgUaM0EeOp6bjTuv3lfw">
            <body>Constructor that accepts the height and width of the cells for rendering&#xD;
     * &#xD;
     * @param intHeight Cell height&#xD;
     * @param intWidth Cell width</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yk9waM0EeOp6bjTuv3lfw" name="intHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yk9wqM0EeOp6bjTuv3lfw" name="intWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8ylk0aM0EeOp6bjTuv3lfw" type="_8yihgKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8ymL4KM0EeOp6bjTuv3lfw" name="getSelected_Col" method="_86PsAKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ymy8KM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ymy8aM0EeOp6bjTuv3lfw" name="getSelected_Row" method="_86PsAqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8ymy8qM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_84djUaM0EeOp6bjTuv3lfw" name="getTableCellRendererComponent" method="_86PE9KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86cgUqM0EeOp6bjTuv3lfw">
            <body>returns the table cell renderer</body>
          </ownedComment>
          <ownedParameter xmi:id="_84djUqM0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84djU6M0EeOp6bjTuv3lfw" name="cell" type="_84SkMaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84djVKM0EeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84eKYKM0EeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84eKYaM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84eKYqM0EeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84eKY6M0EeOp6bjTuv3lfw" type="_84cVMKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8yuHsKM0EeOp6bjTuv3lfw" name="SSTable">
        <ownedComment xmi:id="_86cgVKM0EeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
 *&#xD;
Represents the GUI table used to render the grid&#xD;
&#xD;
Included all inhereted constructors just in case...</body>
        </ownedComment>
        <generalization xmi:id="_84jp8KM0EeOp6bjTuv3lfw" general="_84c8QaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85feEaM0EeOp6bjTuv3lfw" name="intCellWidth" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85gFIKM0EeOp6bjTuv3lfw" value="60"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85gsMKM0EeOp6bjTuv3lfw" name="intCellHeight" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85gsMaM0EeOp6bjTuv3lfw" value="21"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85gsM6M0EeOp6bjTuv3lfw" name="cellSelected" visibility="package" type="_8yihgKM0EeOp6bjTuv3lfw" association="_862wAKM0EeOp6bjTuv3lfw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85hTQKM0EeOp6bjTuv3lfw" value="null"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85hTQqM0EeOp6bjTuv3lfw" name="vptRowHeaderViewPort" visibility="package" type="_84f_kKM0EeOp6bjTuv3lfw" association="_863XEKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85h6UaM0EeOp6bjTuv3lfw" name="vptColumnHeaderViewPort" visibility="package" type="_84f_kKM0EeOp6bjTuv3lfw" association="_863-IaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85ihYaM0EeOp6bjTuv3lfw" name="intCellPadding" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85ihYqM0EeOp6bjTuv3lfw" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85jIcKM0EeOp6bjTuv3lfw" name="header" visibility="package" type="_84hNsKM0EeOp6bjTuv3lfw" association="_864lMaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85jIcqM0EeOp6bjTuv3lfw" name="intDefaultRows" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85jvgKM0EeOp6bjTuv3lfw" value="5000"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85jvgaM0EeOp6bjTuv3lfw" name="intDefaultColumns" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85jvgqM0EeOp6bjTuv3lfw" value="26*27"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85jvg6M0EeOp6bjTuv3lfw" name="grid" visibility="private" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_865MQaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85kWkaM0EeOp6bjTuv3lfw" name="intNumRows" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85k9oKM0EeOp6bjTuv3lfw" name="intNumColumns" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85k9oqM0EeOp6bjTuv3lfw" name="bdrHeaderBorder" visibility="package" type="_84ib0KM0EeOp6bjTuv3lfw" association="_865zUaM0EeOp6bjTuv3lfw">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85lksKM0EeOp6bjTuv3lfw" value="BorderFactory.createLineBorder(Color.black)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Q6JKM0EeOp6bjTuv3lfw" name="SSTable" specification="_8yv84KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Q6JaM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>this(SSTable.intDefaultRows,SSTable.intDefaultColumns);&#xD;
		//TODO: Generate Grid object for default table&#xD;
		//grid = new Grid(intDefaultColumns, intDefaultRows);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86RhMKM0EeOp6bjTuv3lfw" name="SSTable" specification="_83UT0KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86RhMaM0EeOp6bjTuv3lfw" name="g" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86RhMqM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>//TODO: This generates the table using default values but then should be filled in with the specified grid&#xD;
		//---> This is because the grid is a hash and only stores what was entered. The defaults determine what COULD be entered&#xD;
		this(SSTable.intDefaultRows,SSTable.intDefaultColumns);&#xD;
		this.grid = g;&#xD;
		this.header.setBorder(this.bdrHeaderBorder);&#xD;
		g.setSSTable(this);&#xD;
		&#xD;
		setupSSTable();&#xD;
		createRowLabels();&#xD;
		this.setFont(new Font(&quot;Times&quot;, Font.PLAIN, 10));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86RhM6M0EeOp6bjTuv3lfw" name="SSTable" specification="_8yxLAKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86RhNKM0EeOp6bjTuv3lfw" name="intRows">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86RhNaM0EeOp6bjTuv3lfw" name="intColumns">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86RhNqM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>super(intRows,intColumns);&#xD;
		&#xD;
		this.intNumRows = intRows;&#xD;
		this.intNumColumns = intColumns;&#xD;
		&#xD;
		setupSSTable();&#xD;
		createRowLabels();&#xD;
		this.setFont(new Font(&quot;Times&quot;, Font.PLAIN, 10));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86RhN6M0EeOp6bjTuv3lfw" name="setupSSTable" specification="_8yxyE6M0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>//Set up header&#xD;
		this.header = this.getTableHeader();&#xD;
		header.setDefaultRenderer(new SSTableRenderer(this));&#xD;
		header.setReorderingAllowed(false);&#xD;
		&#xD;
		//Set up JTable properties&#xD;
		this.setCellSelectionEnabled(true);&#xD;
		this.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);&#xD;
		this.setRowHeight(this.intCellHeight);&#xD;
		this.setAutoResizeMode( JTable.AUTO_RESIZE_OFF );&#xD;
&#xD;
		//Set up cell renderer&#xD;
		try {&#xD;
			cellSelected = new SSCellRenderer(this.intCellHeight,this.intCellWidth);&#xD;
		    setDefaultRenderer(Class.forName(&quot;java.lang.Object&quot; ), cellSelected );&#xD;
		} catch (ClassNotFoundException e) {&#xD;
		    System.out.println(&quot;ERROR: Renderer could not be set&quot;);&#xD;
		}&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86RhOKM0EeOp6bjTuv3lfw" name="createRowLabels" specification="_8yxyFKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>// Create row header JPanel&#xD;
		JPanel pnlRowHeaders = new JPanel();&#xD;
		pnlRowHeaders.setBackground(new Color(200,200,255));&#xD;
		pnlRowHeaders.setBorder(this.bdrHeaderBorder);&#xD;
		&#xD;
		FontMetrics metrics = getFontMetrics(this.getFont());&#xD;
&#xD;
		//set the row label panel size based on the number of row labels required and their dimensions&#xD;
		Dimension dimPanelSize = new Dimension(&#xD;
							metrics.stringWidth(&quot;999&quot;)+intCellPadding*2,&#xD;
							this.intCellHeight*intNumRows&#xD;
				);&#xD;
		pnlRowHeaders.setPreferredSize(dimPanelSize);&#xD;
&#xD;
		// Add labels&#xD;
		dimPanelSize.height = this.intCellHeight;&#xD;
		&#xD;
		for (int i = 1; i &lt;= this.intNumRows; i++) {&#xD;
		  JLabel lblRow = new JLabel(Integer.toString(i), SwingConstants.CENTER);&#xD;
		  lblRow.setBorder(BorderFactory.createLineBorder(new Color(200,200,255)));&#xD;
		  lblRow.setFont(this.getFont());&#xD;
		  lblRow.setBounds(0, i*dimPanelSize.height, dimPanelSize.width, dimPanelSize.height);&#xD;
		  //lblRow.setBackground(new Color(255,255,255));&#xD;
		  &#xD;
		  pnlRowHeaders.add(lblRow);&#xD;
		}&#xD;
&#xD;
		dimPanelSize.height = this.intCellHeight*this.intNumRows;&#xD;
		&#xD;
		this.vptRowHeaderViewPort = new JViewport();&#xD;
		this.vptRowHeaderViewPort.setViewSize(dimPanelSize);&#xD;
		this.vptRowHeaderViewPort.setView(pnlRowHeaders);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86SIQKM0EeOp6bjTuv3lfw" name="getRowHeader" specification="_8yyZIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86SIQaM0EeOp6bjTuv3lfw" type="_84f_kKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return vptRowHeaderViewPort;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8yv84KM0EeOp6bjTuv3lfw" name="SSTable" method="_86Q6JKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8ywj8KM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8ywj8aM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86cgVaM0EeOp6bjTuv3lfw">
            <body>Create a blank spreadsheet with the default number of rows and columns</body>
          </ownedComment>
          <ownedParameter xmi:id="_8ywj8qM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yxLAKM0EeOp6bjTuv3lfw" name="SSTable" method="_86RhM6M0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8yxyEKM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8yxyEaM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86dHYKM0EeOp6bjTuv3lfw">
            <body>Create a spreadsheet by specifying the number of rows and columns&#xD;
	 * &#xD;
	 * @param intRows The number of rows to create&#xD;
	 * @param intColumns The number of columns to create</body>
          </ownedComment>
          <ownedParameter xmi:id="_8yxLAaM0EeOp6bjTuv3lfw" name="intRows">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yxLAqM0EeOp6bjTuv3lfw" name="intColumns">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_8yxyEqM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yxyE6M0EeOp6bjTuv3lfw" name="setupSSTable" visibility="private" method="_86RhN6M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86dHYaM0EeOp6bjTuv3lfw">
            <body>Sets up the SS table for use as a spreadsheet</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8yxyFKM0EeOp6bjTuv3lfw" name="createRowLabels" visibility="private" method="_86RhOKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86dHYqM0EeOp6bjTuv3lfw">
            <body>JTables have column headers, but not row headers, so this method&#xD;
	 * creates them based on cell properties</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8yyZIKM0EeOp6bjTuv3lfw" name="getRowHeader" method="_86SIQKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86dHY6M0EeOp6bjTuv3lfw">
            <body>Returns the associated viewport for display&#xD;
	 * &#xD;
	 * @return The viewport</body>
          </ownedComment>
          <ownedParameter xmi:id="_84jC4aM0EeOp6bjTuv3lfw" type="_84f_kKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83UT0KM0EeOp6bjTuv3lfw" name="SSTable" method="_86RhMKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83UT0qM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83U64KM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86cgVqM0EeOp6bjTuv3lfw">
            <body>Create a spreadsheet based on a grid object&#xD;
	 * &#xD;
	 * @param g The grid object to be used when generating the spreadsheet</body>
          </ownedComment>
          <ownedParameter xmi:id="_83UT0aM0EeOp6bjTuv3lfw" name="g" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83U64aM0EeOp6bjTuv3lfw" type="_8yuHsKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8y2qkKM0EeOp6bjTuv3lfw" clientDependency="_84k4EKM0EeOp6bjTuv3lfw" name="SSTableRenderer" visibility="package">
        <ownedComment xmi:id="_86dHZKM0EeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
 *&#xD;
Used for formatting the table</body>
        </ownedComment>
        <ownedAttribute xmi:id="_85mLwKM0EeOp6bjTuv3lfw" name="renderer" visibility="package" type="_84lfIKM0EeOp6bjTuv3lfw" association="_867BcKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85mLwqM0EeOp6bjTuv3lfw" name="fntHeader" visibility="package" type="_84mGMaM0EeOp6bjTuv3lfw" association="_867ogKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_Tk3p0qM1EeOp6bjTuv3lfw" name="sSGUI" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_Tk3CwKM1EeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Tk3p06M1EeOp6bjTuv3lfw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Tk4Q4KM1EeOp6bjTuv3lfw" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_84k4EKM0EeOp6bjTuv3lfw" client="_8y2qkKM0EeOp6bjTuv3lfw" supplier="_84ZR4KM0EeOp6bjTuv3lfw" contract="_84ZR4KM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86SIQqM0EeOp6bjTuv3lfw" name="SSTableRenderer" specification="_84mtQaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86SIQ6M0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86SIRKM0EeOp6bjTuv3lfw" type="_8y2qkKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>this.renderer = new DefaultTableCellRenderer();&#xD;
	    this.renderer.setHorizontalAlignment(JLabel.CENTER);&#xD;
	    this.renderer.setBackground(new Color(200,200,255));&#xD;
&#xD;
		fntHeader = table.getFont();&#xD;
		fntHeader = fntHeader.deriveFont(Font.BOLD);&#xD;
		&#xD;
		this.renderer.setFont(fntHeader);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86SvUKM0EeOp6bjTuv3lfw" name="getTableCellRendererComponent" specification="_84n7YKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86SvUaM0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86SvUqM0EeOp6bjTuv3lfw" name="value" type="_84SkMaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86SvU6M0EeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86SvVKM0EeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86SvVaM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86SvVqM0EeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86SvV6M0EeOp6bjTuv3lfw" type="_84cVMKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return renderer.getTableCellRendererComponent(&#xD;
	        table, value, isSelected, hasFocus, row, column);&#xD;
	    </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_84mtQaM0EeOp6bjTuv3lfw" name="SSTableRenderer" method="_86SIQqM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_84nUUKM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_84nUUaM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_84mtQqM0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84nUUqM0EeOp6bjTuv3lfw" type="_8y2qkKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_84n7YKM0EeOp6bjTuv3lfw" name="getTableCellRendererComponent" method="_86SvUKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_84n7YaM0EeOp6bjTuv3lfw" name="table" type="_84c8QaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84n7YqM0EeOp6bjTuv3lfw" name="value" type="_84SkMaM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84n7Y6M0EeOp6bjTuv3lfw" name="isSelected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84n7ZKM0EeOp6bjTuv3lfw" name="hasFocus">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84n7ZaM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84oicKM0EeOp6bjTuv3lfw" name="column">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84oicaM0EeOp6bjTuv3lfw" type="_84cVMKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8y68AKM0EeOp6bjTuv3lfw" name="Spreadsheet">
        <ownedComment xmi:id="_86dHZaM0EeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
&#xD;
The master class of the spreadsheet application.&#xD;
Launches the GUI&#xD;
 *</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86SvWKM0EeOp6bjTuv3lfw" name="main" specification="_8y7jEKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86SvWaM0EeOp6bjTuv3lfw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_86SvWqM0EeOp6bjTuv3lfw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>//TODO: On open, allow the user to choose between &quot;New&quot; and &quot;Open&quot;. Either a new grid should be created or one should be generated from the file.&#xD;
		&#xD;
		//Create a blank back-end grid&#xD;
		Grid grid = new Grid(SSTable.intDefaultColumns, SSTable.intDefaultRows);&#xD;
		&#xD;
		//Create the GUI and pass it the grid to display&#xD;
		SSGUI gui = new SSGUI(grid);&#xD;
&#xD;
		//Display welcome message&#xD;
		gui.displayMessage(&quot;Welcome to the Team 3 spreadsheet app!&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8y7jEKM0EeOp6bjTuv3lfw" name="main" isStatic="true" method="_86SvWKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8y7jEaM0EeOp6bjTuv3lfw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8y7jEqM0EeOp6bjTuv3lfw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8zKzoKM0EeOp6bjTuv3lfw" clientDependency="_84v3MaM0EeOp6bjTuv3lfw _84weQaM0EeOp6bjTuv3lfw _84xsYaM0EeOp6bjTuv3lfw" name="SSGUI">
        <ownedComment xmi:id="_86ducaM0EeOp6bjTuv3lfw">
          <body>@author Justin Dupuis&#xD;
@version 2014-02-09&#xD;
&#xD;
This class represents the GUI for the spreadsheet application.&#xD;
A grid must be passed to create the object, but it can be blank&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_85p2IKM0EeOp6bjTuv3lfw" name="toolKit" visibility="private" type="_84xsYqM0EeOp6bjTuv3lfw" association="_868PkaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85p2IqM0EeOp6bjTuv3lfw" name="frmWindow" visibility="private" type="_84y6gKM0EeOp6bjTuv3lfw" association="_8682oaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85qdMaM0EeOp6bjTuv3lfw" name="pnlCenter" visibility="private" type="_84zhkKM0EeOp6bjTuv3lfw" association="_869dsaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85rEQaM0EeOp6bjTuv3lfw" name="pnlSouth" visibility="private" type="_84zhkKM0EeOp6bjTuv3lfw" association="_86-EwaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85rrUKM0EeOp6bjTuv3lfw" name="panNorthPanel" visibility="package" type="_84zhkKM0EeOp6bjTuv3lfw" association="_86_S4KM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85sSYKM0EeOp6bjTuv3lfw" name="txtInputBox" visibility="package" type="_840vsKM0EeOp6bjTuv3lfw" association="_86_58aM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85sSYqM0EeOp6bjTuv3lfw" name="lblInput" visibility="package" type="_84YDwKM0EeOp6bjTuv3lfw" association="_87AhAKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85s5caM0EeOp6bjTuv3lfw" name="btnUpdate" visibility="package" type="_84190KM0EeOp6bjTuv3lfw" association="_87BIEKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85tggaM0EeOp6bjTuv3lfw" name="mnbMenu" visibility="private" type="_842k4aM0EeOp6bjTuv3lfw" association="_87BvIKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85uHkKM0EeOp6bjTuv3lfw" name="tbrToolBar" visibility="private" type="_843zAKM0EeOp6bjTuv3lfw" association="_87CWMaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85uuoKM0EeOp6bjTuv3lfw" name="mnuFile" visibility="private" type="_844aEaM0EeOp6bjTuv3lfw" association="_87C9QaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85uuoqM0EeOp6bjTuv3lfw" name="mniNew" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87ELYKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85vVsaM0EeOp6bjTuv3lfw" name="mniLoad" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87EycaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85v8waM0EeOp6bjTuv3lfw" name="mniSave" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87FZgaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85wj0KM0EeOp6bjTuv3lfw" name="mniSaveAs" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87GAkaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85xK4KM0EeOp6bjTuv3lfw" name="mnuEdit" visibility="package" type="_844aEaM0EeOp6bjTuv3lfw" association="_87GnoaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85xK4qM0EeOp6bjTuv3lfw" name="mniCut" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87H1wKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85xx8aM0EeOp6bjTuv3lfw" name="mniCopy" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87Ic0KM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85yZAaM0EeOp6bjTuv3lfw" name="mniPaste" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87JD4aM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85zAEKM0EeOp6bjTuv3lfw" name="mnuHelp" visibility="private" type="_844aEaM0EeOp6bjTuv3lfw" association="_87Jq8aM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85znIKM0EeOp6bjTuv3lfw" name="mniAbout" visibility="private" type="_845oMKM0EeOp6bjTuv3lfw" association="_87KSAaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85znIqM0EeOp6bjTuv3lfw" name="btnNew" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87K5EaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_850OMaM0EeOp6bjTuv3lfw" name="btnLoad" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87LgIaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_8501QaM0EeOp6bjTuv3lfw" name="btnSave" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87MHMaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_851cUKM0EeOp6bjTuv3lfw" name="btnSaveAs" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87MuQaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_852DYaM0EeOp6bjTuv3lfw" name="btnCopy" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87NVUaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_852qcaM0EeOp6bjTuv3lfw" name="btnCut" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87OjcKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_853RgKM0EeOp6bjTuv3lfw" name="btnPaste" visibility="private" type="_84190KM0EeOp6bjTuv3lfw" association="_87PKgKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_853RgqM0EeOp6bjTuv3lfw" name="scrTblScrollPane" visibility="package" type="_848rgKM0EeOp6bjTuv3lfw" association="_87PxkKM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_8534kaM0EeOp6bjTuv3lfw" name="tblGrid" visibility="private" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_87QYoaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_854foKM0EeOp6bjTuv3lfw" name="txtMessageBox" visibility="private" type="_840vsKM0EeOp6bjTuv3lfw" association="_87Q_saM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_854foqM0EeOp6bjTuv3lfw" name="intScreenWidth" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_855GsaM0EeOp6bjTuv3lfw" name="intScreenHeight" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_855twaM0EeOp6bjTuv3lfw" name="grid" visibility="private" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_87RmwaM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_856U0aM0EeOp6bjTuv3lfw" name="clipBoard" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_856U0qM0EeOp6bjTuv3lfw" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85674aM0EeOp6bjTuv3lfw" name="strFileLocation" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_85674qM0EeOp6bjTuv3lfw" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Tk3CwaM1EeOp6bjTuv3lfw" name="sSTableRenderer" type="_8y2qkKM0EeOp6bjTuv3lfw" association="_Tk3CwKM1EeOp6bjTuv3lfw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Tk3p0KM1EeOp6bjTuv3lfw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Tk3p0aM1EeOp6bjTuv3lfw" value="*"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_84v3MaM0EeOp6bjTuv3lfw" client="_8zKzoKM0EeOp6bjTuv3lfw" supplier="_84vQIKM0EeOp6bjTuv3lfw" contract="_84vQIKM0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_84weQaM0EeOp6bjTuv3lfw" client="_8zKzoKM0EeOp6bjTuv3lfw" supplier="_84v3MqM0EeOp6bjTuv3lfw" contract="_84v3MqM0EeOp6bjTuv3lfw"/>
        <interfaceRealization xmi:id="_84xsYaM0EeOp6bjTuv3lfw" client="_8zKzoKM0EeOp6bjTuv3lfw" supplier="_84xFUKM0EeOp6bjTuv3lfw" contract="_84xFUKM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86WZsKM0EeOp6bjTuv3lfw" name="SSGUI" specification="_83rgMKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86WZsaM0EeOp6bjTuv3lfw" name="gridObject" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86WZsqM0EeOp6bjTuv3lfw" type="_8zKzoKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>//prevCellCol = 1&#xD;
		//prevCellRow = 1&#xD;
		&#xD;
		grid = gridObject;&#xD;
		&#xD;
		//attempt to adopt the system look and feel&#xD;
		setLookAndFeel();&#xD;
&#xD;
		//instantiate tools&#xD;
		toolKit = Toolkit.getDefaultToolkit();  &#xD;
		&#xD;
		//create window&#xD;
		frmWindow = new JFrame(&quot;Spreadsheet App - Comp 354 - Team 3&quot;);&#xD;
		&#xD;
		//create primary window sections&#xD;
		tbrToolBar = new JToolBar();&#xD;
		pnlCenter = new JPanel();&#xD;
		pnlSouth = new JPanel();&#xD;
		&#xD;
		//Top Panel Components&#xD;
		lblInput = new JLabel(&quot; Input:  &quot;);&#xD;
		txtInputBox = new JTextField();&#xD;
		btnUpdate = new JButton(&quot;Update&quot;);&#xD;
		panNorthPanel = new JPanel();&#xD;
		&#xD;
		//Menu Bar&#xD;
		mnbMenu = new JMenuBar();	//Menu Items&#xD;
		&#xD;
		//File Menu&#xD;
		mnuFile = new JMenu(&quot;File&quot;);&#xD;
		mniNew = new JMenuItem(&quot;New&quot;);&#xD;
		mniLoad = new JMenuItem(&quot;Load&quot;);&#xD;
		mniSave = new JMenuItem(&quot;Save&quot;);&#xD;
		mniSaveAs = new JMenuItem(&quot;Save As&quot;);&#xD;
		&#xD;
		//Edit Menu&#xD;
		mnuEdit = new JMenu(&quot;Edit&quot;);&#xD;
		mniCut = new JMenuItem(&quot;Cut&quot;);&#xD;
		mniCopy = new JMenuItem(&quot;Copy&quot;);&#xD;
		mniPaste = new JMenuItem(&quot;Paste&quot;);&#xD;
		&#xD;
		//Help Menu&#xD;
		mnuHelp = new JMenu(&quot;Help&quot;);&#xD;
		mniAbout = new JMenuItem(&quot;About&quot;);&#xD;
&#xD;
		// Build toolbar buttons&#xD;
		btnNew = new JButton(&quot;New&quot;);&#xD;
		btnLoad = new JButton(&quot;Load&quot;);&#xD;
		btnSave = new JButton(&quot;Save&quot;);&#xD;
		btnSaveAs = new JButton(&quot;Save As&quot;);&#xD;
		btnCopy = new JButton(&quot;Copy&quot;);&#xD;
		btnCut = new JButton(&quot;Cut&quot;);&#xD;
		btnPaste = new JButton(&quot;Paste&quot;);&#xD;
		&#xD;
		//Build Center Panel&#xD;
		panNorthPanel.setLayout(new BorderLayout());&#xD;
		panNorthPanel.add(txtInputBox,BorderLayout.CENTER);&#xD;
		panNorthPanel.add(tbrToolBar,BorderLayout.NORTH);&#xD;
		panNorthPanel.add(lblInput,BorderLayout.WEST);&#xD;
		panNorthPanel.add(btnUpdate,BorderLayout.EAST);&#xD;
		&#xD;
		// Add all the action listeners&#xD;
		mniNew.addActionListener(this);&#xD;
		mniLoad.addActionListener(this);&#xD;
		mniSave.addActionListener(this);&#xD;
		mniSaveAs.addActionListener(this);&#xD;
				&#xD;
		btnNew.addActionListener(this);&#xD;
		btnLoad.addActionListener(this);&#xD;
		btnSave.addActionListener(this);&#xD;
		btnSaveAs.addActionListener(this);&#xD;
		btnCopy.addActionListener(this);&#xD;
		btnCut.addActionListener(this);&#xD;
		btnPaste.addActionListener(this);&#xD;
		&#xD;
		//Build center panel	&#xD;
		tblGrid = new SSTable(grid);//uses the default values on load&#xD;
		tblGrid.setFillsViewportHeight(true);&#xD;
		tblGrid.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);&#xD;
		tblGrid.getModel().addTableModelListener(this);&#xD;
		tblGrid.getSelectionModel().addListSelectionListener(this);&#xD;
		tblGrid.getColumnModel().getSelectionModel().addListSelectionListener(this);&#xD;
		scrTblScrollPane = new JScrollPane(tblGrid,JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,&#xD;
			    JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);&#xD;
		//scrTblScrollPane.setColumnHeaderView(tblGrid.getTableHeader());&#xD;
		scrTblScrollPane.setRowHeader(this.tblGrid.getRowHeader());&#xD;
		scrTblScrollPane.setBackground(new Color(255,255,255));&#xD;
		&#xD;
		//Build bottom panel components&#xD;
		txtMessageBox = new JTextField();&#xD;
		&#xD;
		//set window properties&#xD;
		frmWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		frmWindow.setLayout(new BorderLayout());&#xD;
		&#xD;
		//adopt fullscreen&#xD;
		intScreenWidth = ((int) toolKit.getScreenSize().getWidth());  &#xD;
		intScreenHeight = ((int) toolKit.getScreenSize().getHeight());  &#xD;
		frmWindow.setPreferredSize(new Dimension(intScreenWidth,intScreenHeight)); &#xD;
		&#xD;
		//setup menu&#xD;
		mnbMenu.setPreferredSize(new Dimension(this.intScreenWidth,30));&#xD;
		&#xD;
		//build file menu&#xD;
		mnuFile.add(mniNew);&#xD;
		mnuFile.add(mniLoad);&#xD;
		mnuFile.add(mniSave);&#xD;
		mnuFile.add(mniSaveAs);&#xD;
&#xD;
		//build edit menu&#xD;
		mnuEdit.add(mniCut);&#xD;
		mnuEdit.add(mniCopy);&#xD;
		mnuEdit.add(mniPaste);&#xD;
		&#xD;
		//build help menu&#xD;
		mnuHelp.add(mniAbout);&#xD;
		mniAbout.addActionListener(this);&#xD;
		&#xD;
		//add menus to menu bar&#xD;
		mnbMenu.add(mnuFile);&#xD;
		mnbMenu.add(mnuEdit);&#xD;
		mnbMenu.add(mnuHelp);&#xD;
		&#xD;
		//Setup center panel&#xD;
		pnlCenter.setBackground(new Color(255,255,255));&#xD;
		pnlCenter.add(scrTblScrollPane);&#xD;
		&#xD;
		//Setup bottom panel&#xD;
		pnlSouth.setPreferredSize(new Dimension(this.intScreenWidth,30));&#xD;
		txtMessageBox.setEditable(false);&#xD;
		pnlSouth.setBorder(new BevelBorder(BevelBorder.LOWERED));&#xD;
		&#xD;
		//add buttons to toolbar&#xD;
		tbrToolBar.add(btnNew);&#xD;
		tbrToolBar.add(btnLoad);&#xD;
		tbrToolBar.add(btnSave);&#xD;
		tbrToolBar.add(btnSaveAs);&#xD;
		tbrToolBar.addSeparator();&#xD;
		tbrToolBar.add(btnCopy);&#xD;
		tbrToolBar.add(btnCut);&#xD;
		tbrToolBar.add(btnPaste);&#xD;
		btnCopy.addActionListener(this);&#xD;
		&#xD;
		//Add primary window sections to window&#xD;
		frmWindow.setJMenuBar(this.mnbMenu);&#xD;
		frmWindow.add(panNorthPanel, BorderLayout.NORTH);&#xD;
		frmWindow.add(scrTblScrollPane,BorderLayout.CENTER);&#xD;
		frmWindow.add(txtMessageBox,BorderLayout.SOUTH);&#xD;
		&#xD;
		//display&#xD;
		frmWindow.pack();&#xD;
		frmWindow.setVisible(true);		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86WZs6M0EeOp6bjTuv3lfw" name="displayMessage" specification="_8zPsIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86WZtKM0EeOp6bjTuv3lfw" name="strMessage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>this.txtMessageBox.setText(strMessage);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86WZtaM0EeOp6bjTuv3lfw" name="updateTable" specification="_8zQTMKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>//this.grid = gridUpdate;&#xD;
		//TODO actually do something with the grid...&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86WZtqM0EeOp6bjTuv3lfw" name="newSpreadsheet" specification="_8zQTMaM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>//Should work in theory&#xD;
		&#xD;
		//JOptionPane.showMessageDialog(null,&quot;NEW SPREADSHEET&quot;);&#xD;
		grid.clear();&#xD;
		strFileLocation = &quot;&quot;; // clears the save file location&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86XAwKM0EeOp6bjTuv3lfw" name="loadSpreadsheet" specification="_8zQ6QKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>final JFileChooser fc = new JFileChooser();&#xD;
		FileNameExtensionFilter filter = new FileNameExtensionFilter(&quot;.sav file&quot;,&quot;sav&quot;);&#xD;
		fc.setFileFilter(filter);&#xD;
		int returnVal = fc.showOpenDialog(frmWindow);&#xD;
		if(returnVal == JFileChooser.APPROVE_OPTION)&#xD;
		{&#xD;
			strFileLocation = fc.getSelectedFile().getAbsolutePath();&#xD;
			grid.load(strFileLocation);&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86XAwaM0EeOp6bjTuv3lfw" name="saveSpreadsheet" specification="_8zQ6QaM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(strFileLocation.equals(&quot;&quot;)) // Compare to null?&#xD;
			saveAsSpreadsheet();&#xD;
		else&#xD;
			grid.save(strFileLocation + &quot;.sav&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86XAwqM0EeOp6bjTuv3lfw" name="saveAsSpreadsheet" specification="_8zQ6QqM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>final JFileChooser fc = new JFileChooser();&#xD;
		FileNameExtensionFilter filter = new FileNameExtensionFilter(&quot;.sav file&quot;,&quot;sav&quot;);&#xD;
		fc.setFileFilter(filter);&#xD;
		int returnVal = fc.showSaveDialog(frmWindow); // Different from loadSpreadsheet()&#xD;
		if(returnVal == JFileChooser.APPROVE_OPTION)&#xD;
		{&#xD;
			strFileLocation = fc.getSelectedFile().getAbsolutePath();&#xD;
			grid.save(strFileLocation + &quot;.sav&quot;); // Also different from loadSpreadsheet()&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86XAw6M0EeOp6bjTuv3lfw" name="cut" specification="_8zRhUKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>clipBoard = tblGrid.cellSelected.getCellContents();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Xn0KM0EeOp6bjTuv3lfw" name="copy" specification="_8zRhUaM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(tblGrid.getSelectedRow()+1 &lt; 0 || tblGrid.getSelectedColumn()+1 &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		if(tblGrid.getValueAt(row, col) == null){&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row, col).equals(&quot;&quot;)){&#xD;
			return;&#xD;
		}&#xD;
		clipBoard = (String)tblGrid.getValueAt(row, col);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Xn0aM0EeOp6bjTuv3lfw" name="paste" specification="_8zRhUqM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>if(tblGrid.getSelectedRow()+1 &lt; 0 || tblGrid.getSelectedColumn()+1 &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		if(tblGrid.getValueAt(row, col) == null){&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row, col).equals(&quot;&quot;)){&#xD;
			return;&#xD;
		}&#xD;
		grid.getCell(colConvert, row).setValue(clipBoard);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Xn0qM0EeOp6bjTuv3lfw" name="actionPerformed" specification="_84-gsaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Xn06M0EeOp6bjTuv3lfw" name="e" type="_8495oKM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>final Object objSourceClass = e.getSource(); //store the class of the source&#xD;
		&#xD;
		/*&#xD;
		 * Template for handling events from each component&#xD;
		 */&#xD;
		if(objSourceClass.equals(this.btnNew) || objSourceClass.equals(this.mniNew)){&#xD;
			newSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnLoad) || objSourceClass.equals(this.mniLoad)){&#xD;
			loadSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnSave) || objSourceClass.equals(this.mniSave)){&#xD;
			saveSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnSaveAs) || objSourceClass.equals(this.mniSaveAs)){&#xD;
			saveAsSpreadsheet();&#xD;
		}&#xD;
		if(objSourceClass.equals(this.mniAbout))&#xD;
		{&#xD;
			&#xD;
		}&#xD;
		if(objSourceClass.equals(this.btnCopy))&#xD;
		{&#xD;
			copy();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Xn1KM0EeOp6bjTuv3lfw" name="valueChanged" specification="_84_u0aM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Xn1aM0EeOp6bjTuv3lfw" name="e" type="_84_HwaM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>if(tblGrid.getSelectedRow() &lt; 0 || tblGrid.getSelectedColumn() &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = Grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		//System.out.println(row + &quot;&quot; + colConvert  /*(String)tblGrid.getValueAt(row, col)*/);&#xD;
		if(tblGrid.getValueAt(row-1, col-1) == null)&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row-1, col-1).equals(&quot;&quot;))&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		txtInputBox.setText(grid.getCell(colConvert, row).getValue());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86YO4KM0EeOp6bjTuv3lfw" name="tableChanged" specification="_85BkAaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86YO4aM0EeOp6bjTuv3lfw" name="e" type="_85AV4aM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>tblGrid.getModel().removeTableModelListener(this);&#xD;
		if(tblGrid.getSelectedRow() &lt; 0 || tblGrid.getSelectedColumn() &lt; 0){&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		int col = tblGrid.getSelectedColumn()+1;&#xD;
		String colConvert = Grid.numToCol(col);&#xD;
		int row = tblGrid.getSelectedRow()+1;&#xD;
		System.out.println(row + &quot;&quot; + colConvert  /*(String)tblGrid.getValueAt(row, col)*/);&#xD;
		if(tblGrid.getValueAt(row-1, col-1) == null)&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		if(tblGrid.getValueAt(row-1, col-1).equals(&quot;&quot;))&#xD;
		{&#xD;
			return;&#xD;
		}&#xD;
		//tblGrid.getSelectedColumn();&#xD;
		//tblGrid.getSelectedRow();&#xD;
		//tblGrid.getSel&#xD;
if(!((&quot;&quot;+tblGrid.getValueAt(row-1, col-1)).equals(&quot;&quot;+(grid.getCell(colConvert, row).getEvaluatedValue()))))&#xD;
		{&#xD;
		grid.getCell(colConvert, row).setValue(&quot;&quot;+tblGrid.getValueAt(row-1, col-1));&#xD;
}&#xD;
		//txtInputBox.setText(grid.getCell(colConvert, row).getValue());&#xD;
		tblGrid.getModel().addTableModelListener(this);&#xD;
		//System.out.println(&quot;&quot;+row + col + tblGrid.getValueAt(row-1, col-1));&#xD;
	 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86YO4qM0EeOp6bjTuv3lfw" name="setLookAndFeel" specification="_8zSvcKM0EeOp6bjTuv3lfw">
          <language>java</language>
          <body>try{&#xD;
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
		}catch(Exception e){&#xD;
			//Doesn't matter if it doesn't work&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8zPsIKM0EeOp6bjTuv3lfw" name="displayMessage" method="_86WZs6M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86duc6M0EeOp6bjTuv3lfw">
            <body>Display a message in the message bar&#xD;
	 *  &#xD;
	 * @param strMessage The message to display</body>
          </ownedComment>
          <ownedParameter xmi:id="_8zPsIaM0EeOp6bjTuv3lfw" name="strMessage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8zQTMKM0EeOp6bjTuv3lfw" name="updateTable" method="_86WZtaM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86dudKM0EeOp6bjTuv3lfw">
            <body>Updates to use a new Grid object&#xD;
	 * &#xD;
	 * @param gridUpdate The grid to display</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zQTMaM0EeOp6bjTuv3lfw" name="newSpreadsheet" method="_86WZtqM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVgKM0EeOp6bjTuv3lfw">
            <body>Create a new spreadsheet</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zQ6QKM0EeOp6bjTuv3lfw" name="loadSpreadsheet" method="_86XAwKM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVgaM0EeOp6bjTuv3lfw">
            <body>Load a spreadsheet from a file</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zQ6QaM0EeOp6bjTuv3lfw" name="saveSpreadsheet" method="_86XAwaM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVgqM0EeOp6bjTuv3lfw">
            <body>Save the spreadsheet to a file already selected, or prompt for location if file not yet saved</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zQ6QqM0EeOp6bjTuv3lfw" name="saveAsSpreadsheet" method="_86XAwqM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVg6M0EeOp6bjTuv3lfw">
            <body>Select a file and save the spreadsheet it</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zRhUKM0EeOp6bjTuv3lfw" name="cut" method="_86XAw6M0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVhKM0EeOp6bjTuv3lfw">
            <body>cut cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zRhUaM0EeOp6bjTuv3lfw" name="copy" method="_86Xn0KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVhaM0EeOp6bjTuv3lfw">
            <body>copy cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zRhUqM0EeOp6bjTuv3lfw" name="paste" method="_86Xn0aM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVhqM0EeOp6bjTuv3lfw">
            <body>paste cells</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_8zSvcKM0EeOp6bjTuv3lfw" name="setLookAndFeel" visibility="private" method="_86YO4qM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86e8kaM0EeOp6bjTuv3lfw">
            <body>Sets the look and feel to the current OS</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_83rgMKM0EeOp6bjTuv3lfw" name="SSGUI" method="_86WZsKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83sHQKM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83sHQaM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_86ducqM0EeOp6bjTuv3lfw">
            <body>Default constructor, which acccepts the grid to be displayed&#xD;
	 * &#xD;
	 * @param gridObject The back-end data stored in the grid</body>
          </ownedComment>
          <ownedParameter xmi:id="_83rgMaM0EeOp6bjTuv3lfw" name="gridObject" type="_8yHDsKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83sHQqM0EeOp6bjTuv3lfw" type="_8zKzoKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_84-gsaM0EeOp6bjTuv3lfw" name="actionPerformed" method="_86Xn0qM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86eVh6M0EeOp6bjTuv3lfw">
            <body>Capture GUI interactions. need to add the actionlistener to anything that triggers events&#xD;
	 * &#xD;
	 * @param e The actionevent</body>
          </ownedComment>
          <ownedParameter xmi:id="_84_HwKM0EeOp6bjTuv3lfw" name="e" type="_8495oKM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_84_u0aM0EeOp6bjTuv3lfw" name="valueChanged" method="_86Xn1KM0EeOp6bjTuv3lfw">
          <ownedComment xmi:id="_86e8kKM0EeOp6bjTuv3lfw">
            <body>Captures de-selection action from the JTable cells, &#xD;
	 * handles this by communicating the cell's current value to back-end for verification&#xD;
	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)</body>
          </ownedComment>
          <ownedParameter xmi:id="_85AV4KM0EeOp6bjTuv3lfw" name="e" type="_84_HwaM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_85BkAaM0EeOp6bjTuv3lfw" name="tableChanged" method="_86YO4KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_85BkAqM0EeOp6bjTuv3lfw" name="e" type="_85AV4aM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86vbQKM0EeOp6bjTuv3lfw" name="" memberEnd="_86vbQaM0EeOp6bjTuv3lfw _85TQ0qM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86vbQaM0EeOp6bjTuv3lfw" name="" type="_8x1W4KM0EeOp6bjTuv3lfw" association="_86vbQKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86vbQ6M0EeOp6bjTuv3lfw" name="" memberEnd="_86vbRKM0EeOp6bjTuv3lfw _85Ue8aM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86vbRKM0EeOp6bjTuv3lfw" name="" type="_8x1W4KM0EeOp6bjTuv3lfw" association="_86vbQ6M0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86wCUaM0EeOp6bjTuv3lfw" name="" memberEnd="_86wCUqM0EeOp6bjTuv3lfw _85WUIKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86wCUqM0EeOp6bjTuv3lfw" name="" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86wCUaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86xQcKM0EeOp6bjTuv3lfw" name="" memberEnd="_86xQcaM0EeOp6bjTuv3lfw _85XiQKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86xQcaM0EeOp6bjTuv3lfw" name="" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86xQcKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86x3gaM0EeOp6bjTuv3lfw" name="" memberEnd="_86x3gqM0EeOp6bjTuv3lfw _85ZXcqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86x3gqM0EeOp6bjTuv3lfw" name="" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86x3gaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86zFoKM0EeOp6bjTuv3lfw" name="" memberEnd="_86zFoaM0EeOp6bjTuv3lfw _85alkKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86zFoaM0EeOp6bjTuv3lfw" name="" type="_8yihgKM0EeOp6bjTuv3lfw" association="_86zFoKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86zssaM0EeOp6bjTuv3lfw" name="" memberEnd="_86zssqM0EeOp6bjTuv3lfw _85bMoaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86zssqM0EeOp6bjTuv3lfw" name="" type="_8yihgKM0EeOp6bjTuv3lfw" association="_86zssaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_860TwaM0EeOp6bjTuv3lfw" name="" memberEnd="_860TwqM0EeOp6bjTuv3lfw _85bzsaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_860TwqM0EeOp6bjTuv3lfw" name="" type="_8yihgKM0EeOp6bjTuv3lfw" association="_860TwaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86060aM0EeOp6bjTuv3lfw" name="" memberEnd="_86060qM0EeOp6bjTuv3lfw _85do4qM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86060qM0EeOp6bjTuv3lfw" name="" type="_8yihgKM0EeOp6bjTuv3lfw" association="_86060aM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_862wAKM0EeOp6bjTuv3lfw" name="" memberEnd="_862wAaM0EeOp6bjTuv3lfw _85gsM6M0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_862wAaM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_862wAKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_863XEKM0EeOp6bjTuv3lfw" name="" memberEnd="_863XEaM0EeOp6bjTuv3lfw _85hTQqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_863XEaM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_863XEKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_863-IaM0EeOp6bjTuv3lfw" name="" memberEnd="_863-IqM0EeOp6bjTuv3lfw _85h6UaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_863-IqM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_863-IaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_864lMaM0EeOp6bjTuv3lfw" name="" memberEnd="_864lMqM0EeOp6bjTuv3lfw _85jIcKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_864lMqM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_864lMaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_865MQaM0EeOp6bjTuv3lfw" name="" memberEnd="_865MQqM0EeOp6bjTuv3lfw _85jvg6M0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_865MQqM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_865MQaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_865zUaM0EeOp6bjTuv3lfw" name="" memberEnd="_866aYKM0EeOp6bjTuv3lfw _85k9oqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_866aYKM0EeOp6bjTuv3lfw" name="" type="_8yuHsKM0EeOp6bjTuv3lfw" association="_865zUaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_867BcKM0EeOp6bjTuv3lfw" name="" memberEnd="_867BcaM0EeOp6bjTuv3lfw _85mLwKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_867BcaM0EeOp6bjTuv3lfw" name="" type="_8y2qkKM0EeOp6bjTuv3lfw" association="_867BcKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_867ogKM0EeOp6bjTuv3lfw" name="" memberEnd="_867ogaM0EeOp6bjTuv3lfw _85mLwqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_867ogaM0EeOp6bjTuv3lfw" name="" type="_8y2qkKM0EeOp6bjTuv3lfw" association="_867ogKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_868PkaM0EeOp6bjTuv3lfw" name="" memberEnd="_868PkqM0EeOp6bjTuv3lfw _85p2IKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_868PkqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_868PkaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_8682oaM0EeOp6bjTuv3lfw" name="" memberEnd="_8682oqM0EeOp6bjTuv3lfw _85p2IqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_8682oqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_8682oaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_869dsaM0EeOp6bjTuv3lfw" name="" memberEnd="_869dsqM0EeOp6bjTuv3lfw _85qdMaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_869dsqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_869dsaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86-EwaM0EeOp6bjTuv3lfw" name="" memberEnd="_86-EwqM0EeOp6bjTuv3lfw _85rEQaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86-EwqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_86-EwaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86_S4KM0EeOp6bjTuv3lfw" name="" memberEnd="_86_S4aM0EeOp6bjTuv3lfw _85rrUKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86_S4aM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_86_S4KM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_86_58aM0EeOp6bjTuv3lfw" name="" memberEnd="_86_58qM0EeOp6bjTuv3lfw _85sSYKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_86_58qM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_86_58aM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87AhAKM0EeOp6bjTuv3lfw" name="" memberEnd="_87AhAaM0EeOp6bjTuv3lfw _85sSYqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87AhAaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87AhAKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87BIEKM0EeOp6bjTuv3lfw" name="" memberEnd="_87BIEaM0EeOp6bjTuv3lfw _85s5caM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87BIEaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87BIEKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87BvIKM0EeOp6bjTuv3lfw" name="" memberEnd="_87BvIaM0EeOp6bjTuv3lfw _85tggaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87BvIaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87BvIKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87CWMaM0EeOp6bjTuv3lfw" name="" memberEnd="_87CWMqM0EeOp6bjTuv3lfw _85uHkKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87CWMqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87CWMaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87C9QaM0EeOp6bjTuv3lfw" name="" memberEnd="_87C9QqM0EeOp6bjTuv3lfw _85uuoKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87C9QqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87C9QaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87ELYKM0EeOp6bjTuv3lfw" name="" memberEnd="_87ELYaM0EeOp6bjTuv3lfw _85uuoqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87ELYaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87ELYKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87EycaM0EeOp6bjTuv3lfw" name="" memberEnd="_87EycqM0EeOp6bjTuv3lfw _85vVsaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87EycqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87EycaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87FZgaM0EeOp6bjTuv3lfw" name="" memberEnd="_87FZgqM0EeOp6bjTuv3lfw _85v8waM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87FZgqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87FZgaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87GAkaM0EeOp6bjTuv3lfw" name="" memberEnd="_87GAkqM0EeOp6bjTuv3lfw _85wj0KM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87GAkqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87GAkaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87GnoaM0EeOp6bjTuv3lfw" name="" memberEnd="_87GnoqM0EeOp6bjTuv3lfw _85xK4KM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87GnoqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87GnoaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87H1wKM0EeOp6bjTuv3lfw" name="" memberEnd="_87H1waM0EeOp6bjTuv3lfw _85xK4qM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87H1waM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87H1wKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87Ic0KM0EeOp6bjTuv3lfw" name="" memberEnd="_87Ic0aM0EeOp6bjTuv3lfw _85xx8aM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87Ic0aM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87Ic0KM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87JD4aM0EeOp6bjTuv3lfw" name="" memberEnd="_87JD4qM0EeOp6bjTuv3lfw _85yZAaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87JD4qM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87JD4aM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87Jq8aM0EeOp6bjTuv3lfw" name="" memberEnd="_87Jq8qM0EeOp6bjTuv3lfw _85zAEKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87Jq8qM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87Jq8aM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87KSAaM0EeOp6bjTuv3lfw" name="" memberEnd="_87KSAqM0EeOp6bjTuv3lfw _85znIKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87KSAqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87KSAaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87K5EaM0EeOp6bjTuv3lfw" name="" memberEnd="_87K5EqM0EeOp6bjTuv3lfw _85znIqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87K5EqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87K5EaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87LgIaM0EeOp6bjTuv3lfw" name="" memberEnd="_87LgIqM0EeOp6bjTuv3lfw _850OMaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87LgIqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87LgIaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87MHMaM0EeOp6bjTuv3lfw" name="" memberEnd="_87MHMqM0EeOp6bjTuv3lfw _8501QaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87MHMqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87MHMaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87MuQaM0EeOp6bjTuv3lfw" name="" memberEnd="_87MuQqM0EeOp6bjTuv3lfw _851cUKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87MuQqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87MuQaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87NVUaM0EeOp6bjTuv3lfw" name="" memberEnd="_87NVUqM0EeOp6bjTuv3lfw _852DYaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87NVUqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87NVUaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87OjcKM0EeOp6bjTuv3lfw" name="" memberEnd="_87OjcaM0EeOp6bjTuv3lfw _852qcaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87OjcaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87OjcKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87PKgKM0EeOp6bjTuv3lfw" name="" memberEnd="_87PKgaM0EeOp6bjTuv3lfw _853RgKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87PKgaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87PKgKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87PxkKM0EeOp6bjTuv3lfw" name="" memberEnd="_87PxkaM0EeOp6bjTuv3lfw _853RgqM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87PxkaM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87PxkKM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87QYoaM0EeOp6bjTuv3lfw" name="" memberEnd="_87QYoqM0EeOp6bjTuv3lfw _8534kaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87QYoqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87QYoaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87Q_saM0EeOp6bjTuv3lfw" name="" memberEnd="_87Q_sqM0EeOp6bjTuv3lfw _854foKM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87Q_sqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87Q_saM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_87RmwaM0EeOp6bjTuv3lfw" name="" memberEnd="_87RmwqM0EeOp6bjTuv3lfw _855twaM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_87RmwqM0EeOp6bjTuv3lfw" name="" type="_8zKzoKM0EeOp6bjTuv3lfw" association="_87RmwaM0EeOp6bjTuv3lfw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Tk3CwKM1EeOp6bjTuv3lfw" name="&lt;&lt;applies>>" memberEnd="_Tk3CwaM1EeOp6bjTuv3lfw _Tk3p0qM1EeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8pALAKM0EeOp6bjTuv3lfw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_8pAyEKM0EeOp6bjTuv3lfw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_8pAyEaM0EeOp6bjTuv3lfw" name="rules">
          <packagedElement xmi:type="uml:Class" xmi:id="_82zWcaM0EeOp6bjTuv3lfw" name="ExpectedException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_82yIUKM0EeOp6bjTuv3lfw" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_820kkaM0EeOp6bjTuv3lfw" name="Test"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_821ysKM0EeOp6bjTuv3lfw" name="Rule"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8pQpsKM0EeOp6bjTuv3lfw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_8pQpsaM0EeOp6bjTuv3lfw" name="io">
        <packagedElement xmi:type="uml:Interface" xmi:id="_8x198KM0EeOp6bjTuv3lfw" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_823n4KM0EeOp6bjTuv3lfw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_824O8aM0EeOp6bjTuv3lfw" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_8242AaM0EeOp6bjTuv3lfw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_825dEaM0EeOp6bjTuv3lfw" name="ObjectOutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8pRQwKM0EeOp6bjTuv3lfw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_826rMKM0EeOp6bjTuv3lfw" name="Hashtable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_828gYKM0EeOp6bjTuv3lfw" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_82-VkKM0EeOp6bjTuv3lfw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_82_jsKM0EeOp6bjTuv3lfw" name="Observer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_83AKwaM0EeOp6bjTuv3lfw" name="Observable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_83HfgKM0EeOp6bjTuv3lfw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_83IGkaM0EeOp6bjTuv3lfw" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_83JUsaM0EeOp6bjTuv3lfw" name="Set"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8slqgKM0EeOp6bjTuv3lfw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_8vBTcKM0EeOp6bjTuv3lfw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_84vQIKM0EeOp6bjTuv3lfw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_8495oKM0EeOp6bjTuv3lfw" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_84buIKM0EeOp6bjTuv3lfw" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84cVMKM0EeOp6bjTuv3lfw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84mGMaM0EeOp6bjTuv3lfw" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84xsYqM0EeOp6bjTuv3lfw" name="Toolkit"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_84SkMKM0EeOp6bjTuv3lfw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_84SkMaM0EeOp6bjTuv3lfw" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84qXoKM0EeOp6bjTuv3lfw" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8qhN8KM0EeOp6bjTuv3lfw" name="utils">
      <packagedElement xmi:type="uml:Package" xmi:id="_8uUI0KM0EeOp6bjTuv3lfw" name="Token">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_83YlQKM0EeOp6bjTuv3lfw" name="TokenType"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8yqdUKM0EeOp6bjTuv3lfw" name="TokenStack">
        <ownedComment xmi:id="_86cgU6M0EeOp6bjTuv3lfw">
          <body>Simple class that converts an&#xD;
Arraylist&lt;Token> into a stack of Token&#xD;
&#xD;
@author http://www2.lawrence.edu/fast/GREGGJ/CMSC150/Infix/Expressions.html</body>
        </ownedComment>
        <ownedAttribute xmi:id="_85eP8aM0EeOp6bjTuv3lfw" name="tokens" visibility="private" type="_82-VkKM0EeOp6bjTuv3lfw" association="_861h4aM0EeOp6bjTuv3lfw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86QTEKM0EeOp6bjTuv3lfw" name="TokenStack" specification="_8yrEYKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86QTEaM0EeOp6bjTuv3lfw" type="_8yqdUKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>tokens = new ArrayList&lt;Token>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86QTEqM0EeOp6bjTuv3lfw" name="isEmpty" specification="_8yrrcqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86QTE6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return tokens.size() == 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86QTFKM0EeOp6bjTuv3lfw" name="top" specification="_8ysSgKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86QTFaM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return tokens.get(tokens.size()-1);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Q6IKM0EeOp6bjTuv3lfw" name="push" specification="_83RQgaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Q6IaM0EeOp6bjTuv3lfw" name="t" type="_8zCQwKM0EeOp6bjTuv3lfw"/>
          <language>java</language>
          <body>tokens.add(t);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Q6IqM0EeOp6bjTuv3lfw" name="pop" specification="_8ysSgaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Q6I6M0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return tokens.remove(tokens.size()-1);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8yrEYKM0EeOp6bjTuv3lfw" name="TokenStack" method="_86QTEKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_8yrEYaM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8yrrcKM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8yrrcaM0EeOp6bjTuv3lfw" type="_8yqdUKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8yrrcqM0EeOp6bjTuv3lfw" name="isEmpty" method="_86QTEqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8yrrc6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8ysSgKM0EeOp6bjTuv3lfw" name="top" method="_86QTFKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83RQgKM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8ysSgaM0EeOp6bjTuv3lfw" name="pop" method="_86Q6IqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83R3kaM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83RQgaM0EeOp6bjTuv3lfw" name="push" method="_86Q6IKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83R3kKM0EeOp6bjTuv3lfw" name="t" type="_8zCQwKM0EeOp6bjTuv3lfw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8y8KIKM0EeOp6bjTuv3lfw" name="Formula">
        <ownedComment xmi:id="_86dHZqM0EeOp6bjTuv3lfw">
          <body>Formula class is a static class&#xD;
that contains the method to evaluate&#xD;
arithmetics operation given in a string format&#xD;
with &quot;excel-like&quot; syntax&#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86TWYKM0EeOp6bjTuv3lfw" name="listReferencedCells" specification="_83ZzYKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86TWYaM0EeOp6bjTuv3lfw" name="originCell" type="_8x1W4KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86TWYqM0EeOp6bjTuv3lfw" type="_82-VkKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>String formula = originCell.getValue();&#xD;
		Grid grid = originCell.getGrid();&#xD;
		ArrayList&lt;Token> tokens = new ArrayList&lt;Token>();&#xD;
		ArrayList&lt;Cell> cells = new ArrayList&lt;Cell>();&#xD;
		ArrayList&lt;Cell> origin = new ArrayList&lt;Cell>(); //Used to check if those cells contains circular ref&#xD;
		origin.add(originCell);&#xD;
		&#xD;
		if(Formula.tokenize(tokens, formula)){//Convert the string in a list of token&#xD;
			for(Token tok : tokens){&#xD;
				if(tok.getType() == TokenType.CEL){//extract the cell from the list of token&#xD;
					Cell cell = grid.getCell(tok.getCol(), tok.getRow());&#xD;
					cells.add(cell);&#xD;
				}&#xD;
			}&#xD;
			if( !Formula.isCircular(origin, cells) ){//checks for circularity&#xD;
				return cells;&#xD;
				&#xD;
			}else{&#xD;
				throw new Exception(&quot;Circular formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
				&#xD;
			}&#xD;
			&#xD;
		}else{&#xD;
			throw new Exception(&quot;Invalid formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86TWY6M0EeOp6bjTuv3lfw" name="isCircular" specification="_84q-saM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86TWZKM0EeOp6bjTuv3lfw" name="visited" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86TWZaM0EeOp6bjTuv3lfw" name="toVisit" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86TWZqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for(Cell sub : toVisit){&#xD;
			if(visited.contains(sub))//If a the cell has already been visited in this sub path, there's a cycle&#xD;
				return true;&#xD;
			ArrayList&lt;Cell> visitedCopy = visited;&#xD;
			ArrayList&lt;Cell> subToVisit = sub.getObservedCells();&#xD;
			if(subToVisit.size() == 0 || subToVisit == null)//if the sub path is at a dead end&#xD;
				return false;								//there is no cycle in that sub path&#xD;
			visitedCopy.add(sub);&#xD;
			return isCircular(visitedCopy, subToVisit);//Keep on going down the graph&#xD;
			&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86TWZ6M0EeOp6bjTuv3lfw" name="evaluateFormula" specification="_83bokKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86TWaKM0EeOp6bjTuv3lfw" name="originCell" type="_8x1W4KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86TWaaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>String formula = originCell.getValue();&#xD;
		Grid grid = originCell.getGrid();&#xD;
		double res = 0;&#xD;
		ArrayList&lt;Token> tokens = new ArrayList&lt;Token>();&#xD;
		&#xD;
		//parsing the formula into tokens&#xD;
		if(Formula.tokenize(tokens, formula)){&#xD;
			&#xD;
			//creating the stacks tha will hold all of the operators&#xD;
			TokenStack operatorStack = new TokenStack();&#xD;
			TokenStack operandStack = new TokenStack();&#xD;
			&#xD;
			for(Token tok : tokens){&#xD;
				//if it is an operator&#xD;
				if(tok.getType() == TokenType.PLU || tok.getType() == TokenType.MIN || tok.getType() == TokenType.DIV || tok.getType() == TokenType.MUL || tok.getType() == TokenType.MOD ){&#xD;
					//While the new operator has a smaller precedence, evaluate the top of the operator stack&#xD;
					while(!operatorStack.isEmpty() &amp;&amp; operatorStack.top().getType() != TokenType.LPA  &amp;&amp; operatorStack.top().getPrecedence() >= tok.getPrecedence()){&#xD;
						double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
						operandStack.push(new Token(TokenType.NUM, val));&#xD;
					}&#xD;
					operatorStack.push(tok);//add the new operator to the stack&#xD;
				}else if(tok.getType() == TokenType.LPA ){&#xD;
					operatorStack.push(tok);&#xD;
				}else if(tok.getType() == TokenType.RPA ){&#xD;
					//evaluate the top operator until we hit the closing parenthesis&#xD;
					while(operatorStack.top().getType() != TokenType.LPA ){&#xD;
						double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
						operandStack.push(new Token(TokenType.NUM, val));&#xD;
					}&#xD;
					operatorStack.pop();//pop the closing parenthesis&#xD;
				}else{&#xD;
					//if tok is an operand&#xD;
					if(tok.getType() == TokenType.CEL){//if it's a cell and is value is valid&#xD;
						Cell cell = grid.getCell(tok.getCol(), tok.getRow());&#xD;
						if(cell != null &amp;&amp; cell.isValidValue()){&#xD;
							tok = new Token(TokenType.NUM, cell.getEvaluatedValue());//convert it to a num token&#xD;
						}else{&#xD;
							throw new Exception(&quot;Invalid formula. &quot; + tok.getCol() + tok.getRow() + &quot; is out of bound or has an invalid value&quot;);&#xD;
						}&#xD;
					}&#xD;
					operandStack.push(tok);//push the operand on the stack&#xD;
				}&#xD;
				&#xD;
			}&#xD;
			&#xD;
			while(!operatorStack.isEmpty()){//Empty the operator stack&#xD;
				double val = Formula.calculateFirst(operatorStack, operandStack);&#xD;
				operandStack.push(new Token(TokenType.NUM, val));&#xD;
			}&#xD;
			res = operandStack.pop().getValue();//get the final value on the operand stack&#xD;
			&#xD;
		}else{&#xD;
			throw new Exception(&quot;Invalid formula. The evaluator will not be able to evaluate this formula&quot;);&#xD;
		}&#xD;
		return res;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86T9cKM0EeOp6bjTuv3lfw" name="calculateFirst" specification="_83c2sKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86T9caM0EeOp6bjTuv3lfw" name="operatorStack" type="_8yqdUKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86T9cqM0EeOp6bjTuv3lfw" name="operandStack" type="_8yqdUKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86T9c6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double val = 0;&#xD;
		&#xD;
		Token operator = operatorStack.pop();&#xD;
		if(operator.getType() != TokenType.LPA){&#xD;
			double operand2 = operandStack.pop().getValue();&#xD;
			double operand1 = operandStack.pop().getValue();&#xD;
			&#xD;
			if(operator.getType() == TokenType.PLU){&#xD;
				val = operand1 + operand2;&#xD;
			}else if(operator.getType() == TokenType.MIN){&#xD;
				val = operand1 - operand2;&#xD;
			}else if(operator.getType() == TokenType.DIV){&#xD;
				val = operand1 / operand2;&#xD;
			}else if(operator.getType() == TokenType.MUL){&#xD;
				val = operand1 * operand2;&#xD;
			}else if(operator.getType() == TokenType.MOD){&#xD;
				val = operand1 % operand2;&#xD;
			}&#xD;
		}&#xD;
		return val;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86T9dKM0EeOp6bjTuv3lfw" name="tokenize" specification="_84ta8KM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86T9daM0EeOp6bjTuv3lfw" name="tokens" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86T9dqM0EeOp6bjTuv3lfw" name="formula">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86T9d6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean expectedOperator = false;&#xD;
		int openParenthesis = 0;&#xD;
		char[] formulaChars = formula.toCharArray();&#xD;
		int i =  1; char character;&#xD;
		if(formulaChars[0] != '='){//If the formula doesn't starts with an &quot;=&quot;&#xD;
			return false;			//Invalid&#xD;
		}else{&#xD;
			while(i &lt; formulaChars.length){//Go through every char&#xD;
				switch(character = formulaChars[i]){&#xD;
					case ' ':// ingnores spaces and tabs&#xD;
					case '	':&#xD;
						break;&#xD;
					case '+':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.PLU, 1) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '-':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MIN, 1) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '*':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MUL, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '/':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.DIV, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '%':&#xD;
						if(!expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.MOD, 2) );&#xD;
						expectedOperator = false;&#xD;
						break;&#xD;
					case '(':&#xD;
						if(expectedOperator)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.LPA, 1) );&#xD;
						openParenthesis++;&#xD;
						break;&#xD;
					case ')':&#xD;
						if(!expectedOperator || openParenthesis &lt;= 0)&#xD;
							return false;&#xD;
						tokens.add( new Token(TokenType.RPA, 1) );&#xD;
						openParenthesis--;&#xD;
						break;&#xD;
					default:// expect and operand(either a cell or a double)&#xD;
						if(expectedOperator)&#xD;
							return false;&#xD;
						String s = String.valueOf(character);&#xD;
						if( s.matches(&quot;[A-Z]&quot;) ){&#xD;
							String tokenColValue = &quot;&quot;;&#xD;
							tokenColValue += s;&#xD;
							String TokenRowValue = &quot;&quot;;&#xD;
							int c = i+1;&#xD;
							if(c &lt; formulaChars.length){&#xD;
								String s2= String.valueOf(formulaChars[c]);&#xD;
								while( s2.matches(&quot;[A-Z]&quot;)){//Get the column name&#xD;
									tokenColValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								while(  s2.matches(&quot;[0-9]&quot;) ){//get the row num&#xD;
									TokenRowValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								i = c-1;&#xD;
							}&#xD;
							tokens.add( new Token(TokenType.CEL, tokenColValue, Integer.parseInt(TokenRowValue)) );&#xD;
						&#xD;
						//Double operand&#xD;
						}else if( s.matches(&quot;[0-9.]&quot;) ){&#xD;
							String tokenValue = &quot;&quot;;&#xD;
							tokenValue += s;&#xD;
							int c = i+1;&#xD;
							if(c &lt; formulaChars.length){//get the value of a double typed operand&#xD;
								String s2= String.valueOf(formulaChars[c]);&#xD;
								while( s2.matches(&quot;[0-9.]&quot;)){&#xD;
									tokenValue += s2;&#xD;
									if(++c &lt; formulaChars.length)&#xD;
										s2 = String.valueOf(formulaChars[c]);&#xD;
									else&#xD;
										break;&#xD;
								}&#xD;
								i = c-1;&#xD;
							}&#xD;
							tokens.add( new Token(TokenType.NUM, Double.parseDouble(tokenValue)) );&#xD;
						&#xD;
						}else{//Not a cell nor a double typed operand&#xD;
							return false;&#xD;
								&#xD;
						}&#xD;
						expectedOperator = true;&#xD;
						&#xD;
						break;&#xD;
				&#xD;
				}&#xD;
				i++;&#xD;
			}&#xD;
		}&#xD;
		//if there is at least one unclosed parenthesis&#xD;
		//or if the formula ends with an operator&#xD;
		if(openParenthesis > 0 || !expectedOperator)&#xD;
			return false;&#xD;
		&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8y8xMKM0EeOp6bjTuv3lfw" name="Formula" visibility="private">
          <eAnnotations xmi:id="_8y8xMaM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_8y8xMqM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_8y9YQKM0EeOp6bjTuv3lfw" type="_8y8KIKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83ZzYKM0EeOp6bjTuv3lfw" name="listReferencedCells" isStatic="true" method="_86TWYKM0EeOp6bjTuv3lfw" raisedException="_84qXoKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83ZzYaM0EeOp6bjTuv3lfw" name="originCell" type="_8x1W4KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84pwkKM0EeOp6bjTuv3lfw" type="_82-VkKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83bokKM0EeOp6bjTuv3lfw" name="evaluateFormula" isStatic="true" method="_86TWZ6M0EeOp6bjTuv3lfw" raisedException="_84qXoKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83bokaM0EeOp6bjTuv3lfw" name="originCell" type="_8x1W4KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83cPoKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_83c2sKM0EeOp6bjTuv3lfw" name="calculateFirst" visibility="private" isStatic="true" method="_86T9cKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83c2saM0EeOp6bjTuv3lfw" name="operatorStack" type="_8yqdUKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83c2sqM0EeOp6bjTuv3lfw" name="operandStack" type="_8yqdUKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83ddwKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_84q-saM0EeOp6bjTuv3lfw" name="isCircular" visibility="private" isStatic="true" method="_86TWY6M0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_84rlwKM0EeOp6bjTuv3lfw" name="visited" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84rlwaM0EeOp6bjTuv3lfw" name="toVisit" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84rlwqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_84ta8KM0EeOp6bjTuv3lfw" name="tokenize" visibility="private" isStatic="true" method="_86T9dKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_84ta8aM0EeOp6bjTuv3lfw" name="tokens" type="_82-VkKM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_84uCAKM0EeOp6bjTuv3lfw" name="formula">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_84uCAaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_8zCQwKM0EeOp6bjTuv3lfw" name="Token">
        <ownedComment xmi:id="_86ducKM0EeOp6bjTuv3lfw">
          <body>Simple class that hold the information&#xD;
of the various operator and operands that can&#xD;
be contained inside of a Formula &#xD;
&#xD;
@author Comp354 Team 3</body>
        </ownedComment>
        <ownedAttribute xmi:id="_85my0aM0EeOp6bjTuv3lfw" name="_type" visibility="private" type="_8zC30KM0EeOp6bjTuv3lfw"/>
        <ownedAttribute xmi:id="_85nZ4aM0EeOp6bjTuv3lfw" name="_value" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85oA8aM0EeOp6bjTuv3lfw" name="_col" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85oA86M0EeOp6bjTuv3lfw" name="_row" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_85ooAaM0EeOp6bjTuv3lfw" name="_precedence" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86UkgKM0EeOp6bjTuv3lfw" name="Token" specification="_83f6AKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86UkgaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86UkgqM0EeOp6bjTuv3lfw" name="precedence">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Ukg6M0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_precedence = precedence;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86UkhKM0EeOp6bjTuv3lfw" name="Token" specification="_83hIIKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86UkhaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86UkhqM0EeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Ukh6M0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_value = value;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86UkiKM0EeOp6bjTuv3lfw" name="Token" specification="_83hvMKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86UkiaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_86UkiqM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86Uki6M0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_86UkjKM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>_type = type;&#xD;
		_col = col;&#xD;
		_row = row;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86VLkKM0EeOp6bjTuv3lfw" name="getType" specification="_8zGiMKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86VLkaM0EeOp6bjTuv3lfw" type="_8zC30KM0EeOp6bjTuv3lfw" direction="return"/>
          <language>java</language>
          <body>return _type;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86VLkqM0EeOp6bjTuv3lfw" name="getValue" specification="_8zHJQKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86VLk6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return _value;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86VLlKM0EeOp6bjTuv3lfw" name="getRow" specification="_8zHJQqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86VLlaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _row;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86VyoKM0EeOp6bjTuv3lfw" name="getCol" specification="_8zHwUaM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86VyoaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return _col;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86VyoqM0EeOp6bjTuv3lfw" name="getPrecedence" specification="_8zIXYKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_86Vyo6M0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _precedence;</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_8zGiMKM0EeOp6bjTuv3lfw" name="getType" method="_86VLkKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_83i9UKM0EeOp6bjTuv3lfw" type="_8zC30KM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_8zHJQKM0EeOp6bjTuv3lfw" name="getValue" method="_86VLkqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8zHJQaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8zHJQqM0EeOp6bjTuv3lfw" name="getRow" method="_86VLlKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8zHwUKM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8zHwUaM0EeOp6bjTuv3lfw" name="getCol" method="_86VyoKM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8zHwUqM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_8zIXYKM0EeOp6bjTuv3lfw" name="getPrecedence" method="_86VyoqM0EeOp6bjTuv3lfw">
          <ownedParameter xmi:id="_8zIXYaM0EeOp6bjTuv3lfw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_83f6AKM0EeOp6bjTuv3lfw" name="Token" method="_86UkgKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83ghEaM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83ghEqM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_83f6AaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83ghEKM0EeOp6bjTuv3lfw" name="precedence">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83ghE6M0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83hIIKM0EeOp6bjTuv3lfw" name="Token" method="_86UkhKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83hII6M0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83hIJKM0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_83hIIaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83hIIqM0EeOp6bjTuv3lfw" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83hIJaM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_83hvMKM0EeOp6bjTuv3lfw" name="Token" method="_86UkiKM0EeOp6bjTuv3lfw">
          <eAnnotations xmi:id="_83iWQqM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_83iWQ6M0EeOp6bjTuv3lfw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_83hvMaM0EeOp6bjTuv3lfw" name="type" type="_8zC30KM0EeOp6bjTuv3lfw"/>
          <ownedParameter xmi:id="_83iWQKM0EeOp6bjTuv3lfw" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83iWQaM0EeOp6bjTuv3lfw" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_83iWRKM0EeOp6bjTuv3lfw" type="_8zCQwKM0EeOp6bjTuv3lfw" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_8zC30KM0EeOp6bjTuv3lfw" name="TokenType">
          <ownedLiteral xmi:id="_8zDe4aM0EeOp6bjTuv3lfw" name="PLU"/>
          <ownedLiteral xmi:id="_8zDe4qM0EeOp6bjTuv3lfw" name="MIN"/>
          <ownedLiteral xmi:id="_8zEF8KM0EeOp6bjTuv3lfw" name="MUL"/>
          <ownedLiteral xmi:id="_8zEF8aM0EeOp6bjTuv3lfw" name="DIV"/>
          <ownedLiteral xmi:id="_8zEF8qM0EeOp6bjTuv3lfw" name="MOD"/>
          <ownedLiteral xmi:id="_8zEF86M0EeOp6bjTuv3lfw" name="LPA"/>
          <ownedLiteral xmi:id="_8zEF9KM0EeOp6bjTuv3lfw" name="RPA"/>
          <ownedLiteral xmi:id="_8zEtAKM0EeOp6bjTuv3lfw" name="NUM"/>
          <ownedLiteral xmi:id="_8zEtAaM0EeOp6bjTuv3lfw" name="CEL"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_861h4aM0EeOp6bjTuv3lfw" name="" memberEnd="_861h4qM0EeOp6bjTuv3lfw _85eP8aM0EeOp6bjTuv3lfw">
        <ownedEnd xmi:id="_861h4qM0EeOp6bjTuv3lfw" name="" type="_8yqdUKM0EeOp6bjTuv3lfw" association="_861h4aM0EeOp6bjTuv3lfw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_8smRkKM0EeOp6bjTuv3lfw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_8smRkaM0EeOp6bjTuv3lfw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_8sm4oKM0EeOp6bjTuv3lfw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_84Z48aM0EeOp6bjTuv3lfw" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_84bHEKM0EeOp6bjTuv3lfw" name="LineBorder"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_84ib0KM0EeOp6bjTuv3lfw" name="Border"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_8sm4oaM0EeOp6bjTuv3lfw" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_84ZR4KM0EeOp6bjTuv3lfw" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_84hNsKM0EeOp6bjTuv3lfw" name="JTableHeader"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_84lfIKM0EeOp6bjTuv3lfw" name="DefaultTableCellRenderer"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_8u_eQKM0EeOp6bjTuv3lfw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_84v3MqM0EeOp6bjTuv3lfw" name="ListSelectionListener"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_84xFUKM0EeOp6bjTuv3lfw" name="TableModelListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_84_HwaM0EeOp6bjTuv3lfw" name="ListSelectionEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_85AV4aM0EeOp6bjTuv3lfw" name="TableModelEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_8vAsYKM0EeOp6bjTuv3lfw" name="filechooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_83kLcKM0EeOp6bjTuv3lfw" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84YDwKM0EeOp6bjTuv3lfw" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84c8QaM0EeOp6bjTuv3lfw" name="JTable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84f_kKM0EeOp6bjTuv3lfw" name="JViewport"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84y6gKM0EeOp6bjTuv3lfw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84zhkKM0EeOp6bjTuv3lfw" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_840vsKM0EeOp6bjTuv3lfw" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_84190KM0EeOp6bjTuv3lfw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_842k4aM0EeOp6bjTuv3lfw" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_843zAKM0EeOp6bjTuv3lfw" name="JToolBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_844aEaM0EeOp6bjTuv3lfw" name="JMenu"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_845oMKM0EeOp6bjTuv3lfw" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_848rgKM0EeOp6bjTuv3lfw" name="JScrollPane"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8xVAkKM0EeOp6bjTuv3lfw" name="CellTest">
      <eAnnotations xmi:id="_8xWOsKM0EeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_8xW1wKM0EeOp6bjTuv3lfw" source="codegen">
          <details xmi:id="_8xW1waM0EeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src-test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_85L8EKM0EeOp6bjTuv3lfw" name="test_Grid" visibility="private" isStatic="true" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86s_AKM0EeOp6bjTuv3lfw"/>
      <ownedAttribute xmi:id="_85MjIaM0EeOp6bjTuv3lfw" name="ACCEPTED_ERROR" isLeaf="true" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_85NKMKM0EeOp6bjTuv3lfw" value="1E-10"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_85NxQKM0EeOp6bjTuv3lfw" name="exceptionThrown" type="_82zWcaM0EeOp6bjTuv3lfw" association="_86uNIKM0EeOp6bjTuv3lfw">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_85NxQaM0EeOp6bjTuv3lfw" value="ExpectedException.none()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_859YIKM0EeOp6bjTuv3lfw" name="testEachSetup" specification="_8xZSAqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Prepping Test....&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_859YIaM0EeOp6bjTuv3lfw" name="testEachCleanup" specification="_8xZ5E6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Test Completed!&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_859_MKM0EeOp6bjTuv3lfw" name="testDisplayCell" specification="_8xagI6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_859_MaM0EeOp6bjTuv3lfw" name="testvalidateValue" specification="_8xbHMKM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_859_MqM0EeOp6bjTuv3lfw" name="testGetEvaluatedValueEquals" specification="_8xbHMaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 assertEquals(&quot;Get Evaluated default cell value equals&quot;, 0.0, cell01.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
 //test value from setValue&#xD;
 Cell cell02 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Get Evaluated set cell value equals&quot;, 28.0, cell02.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
 //test value from formula&#xD;
 Cell cell03 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Get Evaluated cell formula equals&quot;, 2.0, cell03.getEvaluatedValue(), ACCEPTED_ERROR);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85-mQKM0EeOp6bjTuv3lfw" name="testEvaluateEquals" specification="_8xbuQqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 assertEquals(&quot;Evaluate default cell formula equals&quot;, 0.0, cell01.evaluate(), ACCEPTED_ERROR);&#xD;
 //test evaluate on setValue&#xD;
 Cell cell02 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Evaluate set cell double equals&quot;, 28.0, cell02.evaluate(), ACCEPTED_ERROR);&#xD;
 //test evaluate on formula&#xD;
 Cell cell03 = new Cell(&quot;A&quot;,1,test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Evaluate set cell formula equals&quot;, 2.0, cell03.evaluate(), ACCEPTED_ERROR);    &#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85-mQaM0EeOp6bjTuv3lfw" name="testGetValueEquals" specification="_8xcVUaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Get default value equals&quot;, &quot;0&quot;, cell01.getValue());&#xD;
 //test value from setValue&#xD;
 Cell cell02  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 cell02.setValue(&quot;28.0&quot;);&#xD;
 assertEquals(&quot;Get double value equals&quot;, &quot;28.0&quot;, cell02.getValue());&#xD;
 //test value from formula&#xD;
 Cell cell03  = new Cell(&quot;B&quot;, 1, test_Grid);&#xD;
 cell03.setValue(&quot;=1+1&quot;);&#xD;
 assertEquals(&quot;Get formula value equals&quot;, &quot;=1+1&quot;, cell03.getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85-mQqM0EeOp6bjTuv3lfw" name="testSetValueEquals" specification="_8xc8YaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell = new Cell(&quot;B&quot;,2,test_Grid);&#xD;
 cell.setValue(&quot;0.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;0.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;30.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;30.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;100.0&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;100.0&quot;, cell.getValue());&#xD;
 cell.setValue(&quot;1.000000&quot;);&#xD;
 assertEquals(&quot;Cell new set value&quot;, &quot;1.000000&quot;, cell.getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_NUKM0EeOp6bjTuv3lfw" name="testGetRowEquals" specification="_8xdjcaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 1, cell01.getRow());  //Should return an int &#xD;
 //upper row boundary&#xD;
 Cell cell02 = new Cell(&quot;A&quot;, 10, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 10, cell02.getRow());&#xD;
 //middle row boundary &#xD;
 Cell cell03 = new Cell(&quot;A&quot;, 5, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's row&quot;, 5, cell03.getRow());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_NUaM0EeOp6bjTuv3lfw" name="testGetColEquals" specification="_8xeKgaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;A&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;A&quot;, cell01.getCol());&#xD;
 //testing upper boundary&#xD;
 Cell cell02 = new Cell(&quot;J&quot;, 1, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;J&quot;, cell02.getCol());&#xD;
 //testing middle boundary&#xD;
 Cell cell03 = new Cell(&quot;E&quot;, 3, test_Grid);&#xD;
 assertEquals(&quot;Getting cell's column&quot;, &quot;E&quot;, cell03.getCol());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_NUqM0EeOp6bjTuv3lfw" name="testIsValidValueFalse" specification="_8xexkKM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Cell cell01 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell01.setValue(&quot;0a&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell01.isValidValue());&#xD;
 //just alpha&#xD;
 Cell cell02 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell02.setValue(&quot;aa&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell02.isValidValue());&#xD;
 //test circular reference&#xD;
 Cell cell03 = new Cell(&quot;B&quot;, 4, test_Grid);&#xD;
 cell03.setValue(&quot;=1+1+B4&quot;);&#xD;
 assertFalse(&quot;Cell invalid value&quot;, cell03.isValidValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_8xXc0KM0EeOp6bjTuv3lfw" name="testSetup" isStatic="true"/>
      <ownedOperation xmi:id="_8xYq8KM0EeOp6bjTuv3lfw" name="testCleanup" isStatic="true"/>
      <ownedOperation xmi:id="_8xZSAqM0EeOp6bjTuv3lfw" name="testEachSetup" method="_859YIKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xZ5E6M0EeOp6bjTuv3lfw" name="testEachCleanup" method="_859YIaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xagI6M0EeOp6bjTuv3lfw" name="testDisplayCell" method="_859_MKM0EeOp6bjTuv3lfw">
        <ownedComment xmi:id="_86aEEKM0EeOp6bjTuv3lfw">
          <body>Testing display cell</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_8xbHMKM0EeOp6bjTuv3lfw" name="testvalidateValue" method="_859_MaM0EeOp6bjTuv3lfw">
        <ownedComment xmi:id="_86aEEaM0EeOp6bjTuv3lfw">
          <body>Testing if value is valid</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="_8xbHMaM0EeOp6bjTuv3lfw" name="testGetEvaluatedValueEquals" method="_859_MqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xbuQqM0EeOp6bjTuv3lfw" name="testEvaluateEquals" method="_85-mQKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xcVUaM0EeOp6bjTuv3lfw" name="testGetValueEquals" method="_85-mQaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xc8YaM0EeOp6bjTuv3lfw" name="testSetValueEquals" method="_85-mQqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xdjcaM0EeOp6bjTuv3lfw" name="testGetRowEquals" method="_85_NUKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xeKgaM0EeOp6bjTuv3lfw" name="testGetColEquals" method="_85_NUaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xexkKM0EeOp6bjTuv3lfw" name="testIsValidValueFalse" method="_85_NUqM0EeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8xgmwKM0EeOp6bjTuv3lfw" name="GridTest">
      <eAnnotations xmi:id="_8xhN0KM0EeOp6bjTuv3lfw" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_8xhN0aM0EeOp6bjTuv3lfw" source="codegen">
          <details xmi:id="_8xhN0qM0EeOp6bjTuv3lfw" key="codegenDirectory" value="/COMP354-Spreadsheet/src-test"/>
        </contents>
      </eAnnotations>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_0YKM0EeOp6bjTuv3lfw" name="testEachSetup" specification="_8xjDAqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Prepping Test....&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_0YaM0EeOp6bjTuv3lfw" name="testEachCleanup" specification="_8xjqEqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>System.out.println(&quot;Test Completed!&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_0YqM0EeOp6bjTuv3lfw" name="testRemoveSelectedCell" specification="_8xkRI6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_85_0Y6M0EeOp6bjTuv3lfw" name="testRemoveCell" specification="_8xk4M6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>fail(&quot;Not yet implemented&quot;);&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86AbcKM0EeOp6bjTuv3lfw" name="testClearEquals" specification="_8xmtYKM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	testGrid.getCell(&quot;A&quot;, 1).setValue(&quot;1&quot;);&#xD;
&#xD;
	testGrid.getCell(&quot;E&quot;, 5).setValue(&quot;9&quot;);&#xD;
	testGrid.clear();&#xD;
	assertEquals(&quot;0&quot;, testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
	assertEquals(&quot;0&quot;, testGrid.getCell(&quot;E&quot;, 5).getValue());&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86AbcaM0EeOp6bjTuv3lfw" name="testDisplay" specification="_8xnUcKM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	testGrid.getCell(&quot;B&quot;, 2).setValue(&quot;2&quot;);&#xD;
	testGrid.Display();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86AbcqM0EeOp6bjTuv3lfw" name="testLoadSaveEquals1" specification="_8xn7gqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;a&quot;, 1).setValue(&quot;1&quot;);&#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(&quot;1&quot;, testGrid.getCell(&quot;a&quot;, 1).getValue());&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Abc6M0EeOp6bjTuv3lfw" name="testLoadSaveEquals2" specification="_8xoikqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    Cell c = testGrid.getCell(&quot;A&quot;, 1);&#xD;
	    c.setValue(&quot;=2&quot;);&#xD;
	    c.evaluate();&#xD;
	    &#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(2.0, testGrid.getCell(&quot;A&quot;, 1).getEvaluatedValue(),0.00001);&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86AbdKM0EeOp6bjTuv3lfw" name="testLoadSaveEquals3" specification="_8xpJoqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 2).setValue(&quot;3&quot;);&#xD;
	    Cell c = testGrid.getCell(&quot;A&quot;, 1);&#xD;
	    c.setValue(&quot;=A2&quot;);&#xD;
	    c.evaluate();&#xD;
	    &#xD;
	    testGrid.save(&quot;testSave&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;testSave&quot;);&#xD;
	    assertEquals(3.0, testGrid.getCell(&quot;A&quot;, 1).getEvaluatedValue(),0.00001);&#xD;
	    File file = new File(&quot;testSave.sav&quot;);&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BCgKM0EeOp6bjTuv3lfw" name="testLoadSaveEquals4" specification="_8xpws6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 1);//should create a cell&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    testGrid.getCell(&quot;A&quot;, 1).setValue(&quot;5&quot;);//set expected value&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    testGrid = new Grid();&#xD;
	    testGrid.load(&quot;test&quot;);//load back previous value&#xD;
	    &#xD;
	    File file = new File(&quot;test.sav&quot;);&#xD;
	    assertEquals(&quot;5&quot;,testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BCgaM0EeOp6bjTuv3lfw" name="testLoadEquals" specification="_8xqXw6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	  &#xD;
		Hashtable&lt;String, Cell> cells = new Hashtable&lt;>();&#xD;
		Cell cell = new Cell(&quot;A&quot;,1,testGrid);&#xD;
		cell.setValue(&quot;1&quot;);&#xD;
		cells.put(&quot;A1&quot;, cell);&#xD;
		File file = new File(&quot;testLoad.sav&quot;);&#xD;
		try {&#xD;
			FileOutputStream fos = new FileOutputStream(file);&#xD;
			ObjectOutputStream oos = new ObjectOutputStream(fos);&#xD;
			oos.writeObject(cells);&#xD;
			oos.close();&#xD;
		} catch (IOException e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		testGrid.load(&quot;testLoad&quot;);&#xD;
		assertEquals(&quot;1&quot;,testGrid.getCell(&quot;A&quot;, 1).getValue());&#xD;
		file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BCgqM0EeOp6bjTuv3lfw" name="testSaveTrue" specification="_8xq-06M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	    testGrid.getCell(&quot;A&quot;, 1);//should create a cell&#xD;
	    testGrid.save(&quot;test&quot;);&#xD;
	    File file = new File(&quot;test.sav&quot;);&#xD;
	    assertTrue(file.exists());&#xD;
	    file.delete();&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BCg6M0EeOp6bjTuv3lfw" name="testLoadFalse" specification="_8xsM8KM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
	assertFalse(testGrid.load(&quot;dosNotExist&quot;));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BpkKM0EeOp6bjTuv3lfw" name="testGetCellNull" specification="_8xs0AaM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid01.getCell(&quot;m&quot;,1));&#xD;
 /// test beyond lower bound row&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid02.getCell(&quot;a&quot;,0));&#xD;
 /// test beyond upper bound row&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNull(&quot;getCell() is null&quot;, testGrid03.getCell(&quot;a&quot;,testGrid03.getMaxHeight()+1));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BpkaM0EeOp6bjTuv3lfw" name="testSelectCellNull" specification="_8xtbEqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid01.selectCell(&quot;m&quot;,1));&#xD;
 /// test beyond lower bound row&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid02.selectCell(&quot;a&quot;,0));&#xD;
 /// test beyond upper bound row&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNull(&quot;SelectCell() is null&quot;, testGrid03.selectCell(&quot;a&quot;,testGrid03.getMaxHeight()+1));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BpkqM0EeOp6bjTuv3lfw" name="testGetCellNotNull" specification="_8xuCIqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid01.getCell(&quot;a&quot;,1));&#xD;
 /// test middle bound column&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid02.getCell(&quot;f&quot;,1));&#xD;
 /// test upper bound column&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid03.getCell(&quot;j&quot;,1));&#xD;
 /// test middle bound row&#xD;
 Grid testGrid04 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid04.getCell(&quot;a&quot;,testGrid04.getMaxHeight()/2));&#xD;
 /// test upper bound row&#xD;
 Grid testGrid05 = new Grid();&#xD;
 assertNotNull(&quot;getCell() is not null&quot;, testGrid05.getCell(&quot;a&quot;,testGrid05.getMaxHeight()));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86Bpk6M0EeOp6bjTuv3lfw" name="testSelectCellNotNull" specification="_8xupMqM0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid01 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid01.selectCell(&quot;a&quot;,1));&#xD;
 /// test middle bound column&#xD;
 Grid testGrid02 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid02.selectCell(&quot;f&quot;,1));&#xD;
 /// test upper bound column&#xD;
 Grid testGrid03 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid03.selectCell(&quot;j&quot;,1));&#xD;
 /// test middle bound row&#xD;
 Grid testGrid04 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid04.selectCell(&quot;a&quot;,testGrid04.getMaxHeight()/2));&#xD;
 /// test upper bound row&#xD;
 Grid testGrid05 = new Grid();&#xD;
 assertNotNull(&quot;SelectCell() is not null&quot;, testGrid05.selectCell(&quot;a&quot;,testGrid05.getMaxHeight()));&#xD;
  </body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86BplKM0EeOp6bjTuv3lfw" name="testGetSelectedCellNotNull" specification="_8xvQQ6M0EeOp6bjTuv3lfw">
        <language>java</language>
        <body>Grid testGrid = new Grid();&#xD;
 assertNotNull(&quot;getSelectedCell() is not null&quot;, testGrid.getSelectedCell());&#xD;
  </body>
      </ownedBehavior>
      <ownedOperation xmi:id="_8xhN06M0EeOp6bjTuv3lfw" name="testSetup" isStatic="true"/>
      <ownedOperation xmi:id="_8xib8aM0EeOp6bjTuv3lfw" name="testCleanup" isStatic="true"/>
      <ownedOperation xmi:id="_8xjDAqM0EeOp6bjTuv3lfw" name="testEachSetup" method="_85_0YKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xjqEqM0EeOp6bjTuv3lfw" name="testEachCleanup" method="_85_0YaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xkRI6M0EeOp6bjTuv3lfw" name="testRemoveSelectedCell" method="_85_0YqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xk4M6M0EeOp6bjTuv3lfw" name="testRemoveCell" method="_85_0Y6M0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xmtYKM0EeOp6bjTuv3lfw" name="testClearEquals" method="_86AbcKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xnUcKM0EeOp6bjTuv3lfw" name="testDisplay" method="_86AbcaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xn7gqM0EeOp6bjTuv3lfw" name="testLoadSaveEquals1" method="_86AbcqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xoikqM0EeOp6bjTuv3lfw" name="testLoadSaveEquals2" method="_86Abc6M0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xpJoqM0EeOp6bjTuv3lfw" name="testLoadSaveEquals3" method="_86AbdKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xpws6M0EeOp6bjTuv3lfw" name="testLoadSaveEquals4" method="_86BCgKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xqXw6M0EeOp6bjTuv3lfw" name="testLoadEquals" method="_86BCgaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xq-06M0EeOp6bjTuv3lfw" name="testSaveTrue" method="_86BCgqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xsM8KM0EeOp6bjTuv3lfw" name="testLoadFalse" method="_86BCg6M0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xs0AaM0EeOp6bjTuv3lfw" name="testGetCellNull" method="_86BpkKM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xtbEqM0EeOp6bjTuv3lfw" name="testSelectCellNull" method="_86BpkaM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xuCIqM0EeOp6bjTuv3lfw" name="testGetCellNotNull" method="_86BpkqM0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xupMqM0EeOp6bjTuv3lfw" name="testSelectCellNotNull" method="_86Bpk6M0EeOp6bjTuv3lfw"/>
      <ownedOperation xmi:id="_8xvQQ6M0EeOp6bjTuv3lfw" name="testGetSelectedCellNotNull" method="_86BplKM0EeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8xweYKM0EeOp6bjTuv3lfw" name="Driver">
      <ownedAttribute xmi:id="_85PmcKM0EeOp6bjTuv3lfw" name="_run" visibility="private" isStatic="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_85PmcaM0EeOp6bjTuv3lfw" value="true"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_85QNgaM0EeOp6bjTuv3lfw" name="_grid" visibility="private" isStatic="true" type="_8yHDsKM0EeOp6bjTuv3lfw" association="_86u0MKM0EeOp6bjTuv3lfw">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_85Q0kKM0EeOp6bjTuv3lfw" value="new Grid()"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86CQoKM0EeOp6bjTuv3lfw" name="main" specification="_8xxsgKM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_86CQoaM0EeOp6bjTuv3lfw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_86CQoqM0EeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>System.out.println(&quot;Welcome to the COMP354 spreadsheet. You can type help to display a list of possible commands&quot;);&#xD;
		&#xD;
		Scanner sc = new Scanner(System.in);&#xD;
		while(_run){&#xD;
			Cell selectedCell = _grid.getSelectedCell();&#xD;
			System.out.print(selectedCell.getCol() + selectedCell.getRow() + &quot;> &quot;);&#xD;
			String line = sc.nextLine();&#xD;
			String[] command = line.split(&quot; &quot;);&#xD;
			if(command.length == 1){&#xD;
				Driver.evalCommand(command[0]);&#xD;
			}else if(command.length == 2){&#xD;
				Driver.evalCommand(command[0], command[1]);&#xD;
			}else{&#xD;
				System.out.println(&quot;Invalid command&quot;);			&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		sc.close();&#xD;
		System.out.println(&quot;Thanks for using the COMP354 spreadsheet!&quot;);&#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86C3sKM0EeOp6bjTuv3lfw" name="evalCommand" specification="_8xyTkKM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_86C3saM0EeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>if(command.equalsIgnoreCase(&quot;help&quot;)){//HELP COMMAND&#xD;
			System.out.println(&quot;List of available commands&quot;);&#xD;
			System.out.println(&quot;--------------------------&quot;);&#xD;
			System.out.println(&quot;help\t\t | Display the list of commands&quot;);&#xD;
			System.out.println(&quot;clear\t\t | Clears the current grid&quot;);&#xD;
			System.out.println(&quot;put {value}\t | Put the value inside of the cell&quot;);&#xD;
			System.out.println(&quot;select {cell}\t | Changes the cursor to the chosen cell.Arg should be the name of a cell ex: A1&quot;);&#xD;
			System.out.println(&quot;display\t\t | Display the chosen grid&quot;);&#xD;
			System.out.println(&quot;display {cell}\t | Display the chosen Cell&quot;);&#xD;
			System.out.println(&quot;save {filename}\t | Save the grid to a file&quot;);&#xD;
			System.out.println(&quot;load {filename}\t | Load the grid from a file&quot;);&#xD;
			System.out.println(&quot;exit \t\t | Exit the program&quot;);&#xD;
			&#xD;
		}else if(command.equalsIgnoreCase(&quot;clear&quot;)){//CLEAR COMMAND&#xD;
			_grid.clear();&#xD;
		}else if(command.equalsIgnoreCase(&quot;display&quot;)){//DISPLAY COMMAND&#xD;
			_grid.Display();&#xD;
		}else if(command.equalsIgnoreCase(&quot;exit&quot;)){//EXIT COMMAND&#xD;
			_run = false;&#xD;
		}else{&#xD;
			System.out.println(&quot;Invalid command&quot;);&#xD;
		}&#xD;
	&#xD;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86C3sqM0EeOp6bjTuv3lfw" name="evalCommand" specification="_8xy6oaM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_86C3s6M0EeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_86C3tKM0EeOp6bjTuv3lfw" name="arg">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>if(command.equalsIgnoreCase(&quot;put&quot;)){//PUT {VALUE} COMMAND&#xD;
				_grid.getSelectedCell().setValue(arg);&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;select&quot;)){//SELECT {CELL} COMMAND&#xD;
				String[] coord = cellNameToColRow(arg);&#xD;
				if(coord != null){&#xD;
					_grid.selectCell(coord[0], Integer.parseInt(coord[1]));&#xD;
				}else{&#xD;
					System.out.println(&quot;Invalid Cell name&quot;);&#xD;
				}&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;display&quot;)){//DISPLAY {CELL} COMMAND&#xD;
				String[] coord = cellNameToColRow(arg);&#xD;
				if(coord != null){&#xD;
					Cell cellToDisplay = _grid.getCell(coord[0], Integer.parseInt(coord[1]));&#xD;
					if(cellToDisplay != null){&#xD;
						System.out.print(arg + &quot;: &quot;);&#xD;
						cellToDisplay.display();&#xD;
					}else{&#xD;
						System.out.println(&quot;The cell you want to display is out of bound&quot;);&#xD;
					}&#xD;
				}else{&#xD;
					System.out.println(&quot;Invalid Cell name&quot;);&#xD;
				}&#xD;
				&#xD;
			}else if(command.equalsIgnoreCase(&quot;save&quot;)){//SAVE {FILENAME} COMMAND&#xD;
				_grid.save(arg);&#xD;
			}else if(command.equalsIgnoreCase(&quot;load&quot;)){//LOAD {FILENAME} COMMAND&#xD;
				_grid.load(arg);&#xD;
			}else{//INVALID COMMAND&#xD;
				System.out.println(&quot;Invalid command&quot;);&#xD;
			}&#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_86C3taM0EeOp6bjTuv3lfw" name="cellNameToColRow" specification="_8xzhsqM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_86C3tqM0EeOp6bjTuv3lfw" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_86C3t6M0EeOp6bjTuv3lfw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_86C3uKM0EeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>if(!name.matches(&quot;^[A-Z]+[0-9]+$&quot;))&#xD;
			return null;&#xD;
		int firstNumPos = name.indexOf(&quot;0&quot;);&#xD;
		&#xD;
		for(int i = 1; i &lt;= 9; i++ ){&#xD;
			int secNumPos = name.indexOf(&quot;&quot;+ i);&#xD;
			if( (secNumPos &lt; firstNumPos &amp;&amp; secNumPos != -1) || firstNumPos == -1)&#xD;
				firstNumPos = secNumPos;&#xD;
			&#xD;
		}&#xD;
		return new String[]{name.substring(0, firstNumPos), name.substring(firstNumPos)};&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_8xxsgKM0EeOp6bjTuv3lfw" name="main" isStatic="true" method="_86CQoKM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_8xxsgaM0EeOp6bjTuv3lfw" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8xxsgqM0EeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_8xyTkKM0EeOp6bjTuv3lfw" name="evalCommand" isStatic="true" method="_86C3sKM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_8xy6oKM0EeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_8xy6oaM0EeOp6bjTuv3lfw" name="evalCommand" isStatic="true" method="_86C3sqM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_8xzhsKM0EeOp6bjTuv3lfw" name="command">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_8xzhsaM0EeOp6bjTuv3lfw" name="arg">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_8xzhsqM0EeOp6bjTuv3lfw" name="cellNameToColRow" isStatic="true" method="_86C3taM0EeOp6bjTuv3lfw">
        <ownedParameter xmi:id="_8x0IwKM0EeOp6bjTuv3lfw" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_8x0IwaM0EeOp6bjTuv3lfw" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8x0IwqM0EeOp6bjTuv3lfw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_86s_AKM0EeOp6bjTuv3lfw" name="" memberEnd="_86s_AaM0EeOp6bjTuv3lfw _85L8EKM0EeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_86s_AaM0EeOp6bjTuv3lfw" name="" type="_8xVAkKM0EeOp6bjTuv3lfw" association="_86s_AKM0EeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_86uNIKM0EeOp6bjTuv3lfw" name="" memberEnd="_86uNIaM0EeOp6bjTuv3lfw _85NxQKM0EeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_86uNIaM0EeOp6bjTuv3lfw" name="" type="_8xVAkKM0EeOp6bjTuv3lfw" association="_86uNIKM0EeOp6bjTuv3lfw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_86u0MKM0EeOp6bjTuv3lfw" name="" memberEnd="_86u0MaM0EeOp6bjTuv3lfw _85QNgaM0EeOp6bjTuv3lfw">
      <ownedEnd xmi:id="_86u0MaM0EeOp6bjTuv3lfw" name="" type="_8xweYKM0EeOp6bjTuv3lfw" association="_86u0MKM0EeOp6bjTuv3lfw"/>
    </packagedElement>
    <profileApplication xmi:id="_79QfUKM0EeOp6bjTuv3lfw">
      <eAnnotations xmi:id="_79RGYKM0EeOp6bjTuv3lfw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_79RtcKM0EeOp6bjTuv3lfw" base_Package="_7xdfAKM0EeOp6bjTuv3lfw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xYD4KM0EeOp6bjTuv3lfw" base_Element="_8xXc0KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xYD4aM0EeOp6bjTuv3lfw" base_Element="_8xXc0KM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xYD4qM0EeOp6bjTuv3lfw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xYq8aM0EeOp6bjTuv3lfw" base_Element="_8xYq8KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xZSAKM0EeOp6bjTuv3lfw" base_Element="_8xYq8KM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xZSAaM0EeOp6bjTuv3lfw" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xZ5EKM0EeOp6bjTuv3lfw" base_Element="_8xZSAqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xZ5EaM0EeOp6bjTuv3lfw" base_Element="_8xZSAqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xZ5EqM0EeOp6bjTuv3lfw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xagIKM0EeOp6bjTuv3lfw" base_Element="_8xZ5E6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xagIaM0EeOp6bjTuv3lfw" base_Element="_8xZ5E6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xagIqM0EeOp6bjTuv3lfw" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xbHMqM0EeOp6bjTuv3lfw" base_Element="_8xbHMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xbuQKM0EeOp6bjTuv3lfw" base_Element="_8xbHMaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xbuQaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xbuQ6M0EeOp6bjTuv3lfw" base_Element="_8xbuQqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xbuRKM0EeOp6bjTuv3lfw" base_Element="_8xbuQqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xcVUKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xcVUqM0EeOp6bjTuv3lfw" base_Element="_8xcVUaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xcVU6M0EeOp6bjTuv3lfw" base_Element="_8xcVUaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xc8YKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xc8YqM0EeOp6bjTuv3lfw" base_Element="_8xc8YaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xc8Y6M0EeOp6bjTuv3lfw" base_Element="_8xc8YaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xdjcKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xdjcqM0EeOp6bjTuv3lfw" base_Element="_8xdjcaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xdjc6M0EeOp6bjTuv3lfw" base_Element="_8xdjcaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xeKgKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xeKgqM0EeOp6bjTuv3lfw" base_Element="_8xeKgaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xeKg6M0EeOp6bjTuv3lfw" base_Element="_8xeKgaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xeKhKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xexkaM0EeOp6bjTuv3lfw" base_Element="_8xexkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xexkqM0EeOp6bjTuv3lfw" base_Element="_8xexkKM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xexk6M0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xh04KM0EeOp6bjTuv3lfw" base_Element="_8xhN06M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xh04aM0EeOp6bjTuv3lfw" base_Element="_8xhN06M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xib8KM0EeOp6bjTuv3lfw" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xib8qM0EeOp6bjTuv3lfw" base_Element="_8xib8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xjDAKM0EeOp6bjTuv3lfw" base_Element="_8xib8aM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xjDAaM0EeOp6bjTuv3lfw" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xjDA6M0EeOp6bjTuv3lfw" base_Element="_8xjDAqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xjqEKM0EeOp6bjTuv3lfw" base_Element="_8xjDAqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xjqEaM0EeOp6bjTuv3lfw" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xkRIKM0EeOp6bjTuv3lfw" base_Element="_8xjqEqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xkRIaM0EeOp6bjTuv3lfw" base_Element="_8xjqEqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xkRIqM0EeOp6bjTuv3lfw" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xkRJKM0EeOp6bjTuv3lfw" base_Element="_8xkRI6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xk4MKM0EeOp6bjTuv3lfw" base_Element="_8xkRI6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xk4MaM0EeOp6bjTuv3lfw" name="Ignore"/>
    <annotations xmi:id="_8xk4MqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xlfQKM0EeOp6bjTuv3lfw" base_Element="_8xk4M6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xmGUKM0EeOp6bjTuv3lfw" base_Element="_8xk4M6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xmGUaM0EeOp6bjTuv3lfw" name="Ignore"/>
    <annotations xmi:id="_8xmGUqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xmtYaM0EeOp6bjTuv3lfw" base_Element="_8xmtYKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xmtYqM0EeOp6bjTuv3lfw" base_Element="_8xmtYKM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xmtY6M0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xnUcaM0EeOp6bjTuv3lfw" base_Element="_8xnUcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xn7gKM0EeOp6bjTuv3lfw" base_Element="_8xnUcKM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xn7gaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xn7g6M0EeOp6bjTuv3lfw" base_Element="_8xn7gqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xoikKM0EeOp6bjTuv3lfw" base_Element="_8xn7gqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xoikaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xoik6M0EeOp6bjTuv3lfw" base_Element="_8xoikqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xpJoKM0EeOp6bjTuv3lfw" base_Element="_8xoikqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xpJoaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xpwsKM0EeOp6bjTuv3lfw" base_Element="_8xpJoqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xpwsaM0EeOp6bjTuv3lfw" base_Element="_8xpJoqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xpwsqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xqXwKM0EeOp6bjTuv3lfw" base_Element="_8xpws6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xqXwaM0EeOp6bjTuv3lfw" base_Element="_8xpws6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xqXwqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xq-0KM0EeOp6bjTuv3lfw" base_Element="_8xqXw6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xq-0aM0EeOp6bjTuv3lfw" base_Element="_8xqXw6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xq-0qM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xrl4KM0EeOp6bjTuv3lfw" base_Element="_8xq-06M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xrl4aM0EeOp6bjTuv3lfw" base_Element="_8xq-06M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xrl4qM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xsM8aM0EeOp6bjTuv3lfw" base_Element="_8xsM8KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xsM8qM0EeOp6bjTuv3lfw" base_Element="_8xsM8KM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xs0AKM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xs0AqM0EeOp6bjTuv3lfw" base_Element="_8xs0AaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xtbEKM0EeOp6bjTuv3lfw" base_Element="_8xs0AaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xtbEaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xtbE6M0EeOp6bjTuv3lfw" base_Element="_8xtbEqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xuCIKM0EeOp6bjTuv3lfw" base_Element="_8xtbEqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xuCIaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xuCI6M0EeOp6bjTuv3lfw" base_Element="_8xuCIqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xupMKM0EeOp6bjTuv3lfw" base_Element="_8xuCIqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xupMaM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xvQQKM0EeOp6bjTuv3lfw" base_Element="_8xupMqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xvQQaM0EeOp6bjTuv3lfw" base_Element="_8xupMqM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xvQQqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8xv3UKM0EeOp6bjTuv3lfw" base_Element="_8xvQQ6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_8xv3UaM0EeOp6bjTuv3lfw" base_Element="_8xvQQ6M0EeOp6bjTuv3lfw">
    <annotations xmi:id="_8xv3UqM0EeOp6bjTuv3lfw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_8x0Iw6M0EeOp6bjTuv3lfw" base_Element="_8xzhsqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_8x2lAKM0EeOp6bjTuv3lfw" base_Element="_8x198KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_8yBkIKM0EeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_8yA9EKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8y8xM6M0EeOp6bjTuv3lfw" base_Element="_8y8xMKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8zDe4KM0EeOp6bjTuv3lfw" base_Element="_8zC30KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_82zWcKM0EeOp6bjTuv3lfw" base_Element="_82yIUKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_820kkKM0EeOp6bjTuv3lfw" base_Element="_82zWcaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_821LoKM0EeOp6bjTuv3lfw" base_Element="_820kkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_822ZwKM0EeOp6bjTuv3lfw" base_Element="_821ysKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_824O8KM0EeOp6bjTuv3lfw" base_Element="_823n4KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_8242AKM0EeOp6bjTuv3lfw" base_Element="_824O8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_825dEKM0EeOp6bjTuv3lfw" base_Element="_8242AaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_826EIKM0EeOp6bjTuv3lfw" base_Element="_825dEaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_827SQKM0EeOp6bjTuv3lfw" base_Element="_826rMKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_829HcKM0EeOp6bjTuv3lfw" base_Element="_828gYKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_82-8oKM0EeOp6bjTuv3lfw" base_Element="_82-VkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83AKwKM0EeOp6bjTuv3lfw" base_Element="_82_jsKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83Ax0KM0EeOp6bjTuv3lfw" base_Element="_83AKwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83IGkKM0EeOp6bjTuv3lfw" base_Element="_83HfgKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83JUsKM0EeOp6bjTuv3lfw" base_Element="_83IGkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83J7wKM0EeOp6bjTuv3lfw" base_Element="_83JUsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83ZMUKM0EeOp6bjTuv3lfw" base_Element="_83YlQKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_83aacKM0EeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_83ZzYKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_83kygKM0EeOp6bjTuv3lfw" base_Element="_83kLcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84TLQKM0EeOp6bjTuv3lfw" base_Element="_84SkMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_84TyUqM0EeOp6bjTuv3lfw" base_Element="_84TLQaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_84UZYKM0EeOp6bjTuv3lfw" base_Element="_84TLQaM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_84UZYaM0EeOp6bjTuv3lfw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_84W1oKM0EeOp6bjTuv3lfw" genericsValue="String, Cell" base_Element="_84WOkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84Yq0KM0EeOp6bjTuv3lfw" base_Element="_84YDwKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84ZR4aM0EeOp6bjTuv3lfw" base_Element="_84ZR4KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84agAKM0EeOp6bjTuv3lfw" base_Element="_84Z48aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84bHEaM0EeOp6bjTuv3lfw" base_Element="_84bHEKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84buIaM0EeOp6bjTuv3lfw" base_Element="_84buIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84c8QKM0EeOp6bjTuv3lfw" base_Element="_84cVMKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84djUKM0EeOp6bjTuv3lfw" base_Element="_84c8QaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84gmoKM0EeOp6bjTuv3lfw" base_Element="_84f_kKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84h0wKM0EeOp6bjTuv3lfw" base_Element="_84hNsKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84jC4KM0EeOp6bjTuv3lfw" base_Element="_84ib0KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84mGMKM0EeOp6bjTuv3lfw" base_Element="_84lfIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84mtQKM0EeOp6bjTuv3lfw" base_Element="_84mGMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_84oicqM0EeOp6bjTuv3lfw" base_Element="_84n7YKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_84pJgKM0EeOp6bjTuv3lfw" base_Element="_84n7YKM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_84pJgaM0EeOp6bjTuv3lfw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_84q-sKM0EeOp6bjTuv3lfw" base_Element="_84qXoKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_84sM0KM0EeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_84rlwKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_84sz4KM0EeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_84rlwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_84upEKM0EeOp6bjTuv3lfw" genericsValue="Token" base_Element="_84ta8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84v3MKM0EeOp6bjTuv3lfw" base_Element="_84vQIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84weQKM0EeOp6bjTuv3lfw" base_Element="_84v3MqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84xsYKM0EeOp6bjTuv3lfw" base_Element="_84xFUKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84yTcKM0EeOp6bjTuv3lfw" base_Element="_84xsYqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84y6gaM0EeOp6bjTuv3lfw" base_Element="_84y6gKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_840IoKM0EeOp6bjTuv3lfw" base_Element="_84zhkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_841WwKM0EeOp6bjTuv3lfw" base_Element="_840vsKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_842k4KM0EeOp6bjTuv3lfw" base_Element="_84190KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_843L8KM0EeOp6bjTuv3lfw" base_Element="_842k4aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_844aEKM0EeOp6bjTuv3lfw" base_Element="_843zAKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_845BIKM0EeOp6bjTuv3lfw" base_Element="_844aEaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_846PQKM0EeOp6bjTuv3lfw" base_Element="_845oMKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_849SkKM0EeOp6bjTuv3lfw" base_Element="_848rgKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84-gsKM0EeOp6bjTuv3lfw" base_Element="_8495oKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_84_u0KM0EeOp6bjTuv3lfw" base_Element="_84_HwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_85BkAKM0EeOp6bjTuv3lfw" base_Element="_85AV4aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85MjIKM0EeOp6bjTuv3lfw" base_Element="_85L8EKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85NKMaM0EeOp6bjTuv3lfw" base_Element="_85MjIaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85OYUKM0EeOp6bjTuv3lfw" base_Element="_85NxQKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Annotations xmi:id="_85OYUaM0EeOp6bjTuv3lfw" base_Element="_85NxQKM0EeOp6bjTuv3lfw">
    <annotations xmi:id="_85OYUqM0EeOp6bjTuv3lfw" name="Rule"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85QNgKM0EeOp6bjTuv3lfw" base_Element="_85PmcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85Q0kaM0EeOp6bjTuv3lfw" base_Element="_85QNgaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85SCsKM0EeOp6bjTuv3lfw" base_Element="_85RboKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85SpwKM0EeOp6bjTuv3lfw" base_Element="_85SCsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85SpwqM0EeOp6bjTuv3lfw" base_Element="_85SpwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85TQ0aM0EeOp6bjTuv3lfw" base_Element="_85TQ0KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85T34KM0EeOp6bjTuv3lfw" base_Element="_85TQ0qM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85Ue8KM0EeOp6bjTuv3lfw" base_Element="_85T34aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_85VGAKM0EeOp6bjTuv3lfw" genericsValue="Cell" base_Element="_85Ue8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85VtEKM0EeOp6bjTuv3lfw" base_Element="_85Ue8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_85W7MKM0EeOp6bjTuv3lfw" genericsValue="String, Cell" base_Element="_85WUIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85W7MaM0EeOp6bjTuv3lfw" base_Element="_85WUIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85XiQaM0EeOp6bjTuv3lfw" base_Element="_85XiQKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85YJUKM0EeOp6bjTuv3lfw" base_Element="_85XiQqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85YwYKM0EeOp6bjTuv3lfw" base_Element="_85YJUaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85YwYqM0EeOp6bjTuv3lfw" base_Element="_85YwYaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85ZXcaM0EeOp6bjTuv3lfw" base_Element="_85ZXcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85Z-gKM0EeOp6bjTuv3lfw" base_Element="_85ZXcqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85bMoKM0EeOp6bjTuv3lfw" base_Element="_85alkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85bzsKM0EeOp6bjTuv3lfw" base_Element="_85bMoaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85cawKM0EeOp6bjTuv3lfw" base_Element="_85bzsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85dB0KM0EeOp6bjTuv3lfw" base_Element="_85cawaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85do4KM0EeOp6bjTuv3lfw" base_Element="_85dB0aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85eP8KM0EeOp6bjTuv3lfw" base_Element="_85do4qM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Generics xmi:id="_85e3AKM0EeOp6bjTuv3lfw" genericsValue="Token" base_Element="_85eP8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85feEKM0EeOp6bjTuv3lfw" base_Element="_85eP8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85gFIaM0EeOp6bjTuv3lfw" base_Element="_85feEaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85gsMqM0EeOp6bjTuv3lfw" base_Element="_85gsMKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85hTQaM0EeOp6bjTuv3lfw" base_Element="_85gsM6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85h6UKM0EeOp6bjTuv3lfw" base_Element="_85hTQqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85ihYKM0EeOp6bjTuv3lfw" base_Element="_85h6UaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85ihY6M0EeOp6bjTuv3lfw" base_Element="_85ihYaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85jIcaM0EeOp6bjTuv3lfw" base_Element="_85jIcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85kWkKM0EeOp6bjTuv3lfw" base_Element="_85jvg6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85kWkqM0EeOp6bjTuv3lfw" base_Element="_85kWkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85k9oaM0EeOp6bjTuv3lfw" base_Element="_85k9oKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85lksaM0EeOp6bjTuv3lfw" base_Element="_85k9oqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85mLwaM0EeOp6bjTuv3lfw" base_Element="_85mLwKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85my0KM0EeOp6bjTuv3lfw" base_Element="_85mLwqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85nZ4KM0EeOp6bjTuv3lfw" base_Element="_85my0aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85oA8KM0EeOp6bjTuv3lfw" base_Element="_85nZ4aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85oA8qM0EeOp6bjTuv3lfw" base_Element="_85oA8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85ooAKM0EeOp6bjTuv3lfw" base_Element="_85oA86M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85pPEKM0EeOp6bjTuv3lfw" base_Element="_85ooAaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85p2IaM0EeOp6bjTuv3lfw" base_Element="_85p2IKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85qdMKM0EeOp6bjTuv3lfw" base_Element="_85p2IqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85rEQKM0EeOp6bjTuv3lfw" base_Element="_85qdMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85rEQqM0EeOp6bjTuv3lfw" base_Element="_85rEQaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85rrUaM0EeOp6bjTuv3lfw" base_Element="_85rrUKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85sSYaM0EeOp6bjTuv3lfw" base_Element="_85sSYKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85s5cKM0EeOp6bjTuv3lfw" base_Element="_85sSYqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85tggKM0EeOp6bjTuv3lfw" base_Element="_85s5caM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85tggqM0EeOp6bjTuv3lfw" base_Element="_85tggaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85uHkaM0EeOp6bjTuv3lfw" base_Element="_85uHkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85uuoaM0EeOp6bjTuv3lfw" base_Element="_85uuoKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85vVsKM0EeOp6bjTuv3lfw" base_Element="_85uuoqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85v8wKM0EeOp6bjTuv3lfw" base_Element="_85vVsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85v8wqM0EeOp6bjTuv3lfw" base_Element="_85v8waM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85wj0aM0EeOp6bjTuv3lfw" base_Element="_85wj0KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85xK4aM0EeOp6bjTuv3lfw" base_Element="_85xK4KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85xx8KM0EeOp6bjTuv3lfw" base_Element="_85xK4qM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85yZAKM0EeOp6bjTuv3lfw" base_Element="_85xx8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85yZAqM0EeOp6bjTuv3lfw" base_Element="_85yZAaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85zAEaM0EeOp6bjTuv3lfw" base_Element="_85zAEKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85znIaM0EeOp6bjTuv3lfw" base_Element="_85znIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_850OMKM0EeOp6bjTuv3lfw" base_Element="_85znIqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8501QKM0EeOp6bjTuv3lfw" base_Element="_850OMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8501QqM0EeOp6bjTuv3lfw" base_Element="_8501QaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_852DYKM0EeOp6bjTuv3lfw" base_Element="_851cUKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_852qcKM0EeOp6bjTuv3lfw" base_Element="_852DYaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_852qcqM0EeOp6bjTuv3lfw" base_Element="_852qcaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_853RgaM0EeOp6bjTuv3lfw" base_Element="_853RgKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8534kKM0EeOp6bjTuv3lfw" base_Element="_853RgqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_8534kqM0EeOp6bjTuv3lfw" base_Element="_8534kaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_854foaM0EeOp6bjTuv3lfw" base_Element="_854foKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_855GsKM0EeOp6bjTuv3lfw" base_Element="_854foqM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_855twKM0EeOp6bjTuv3lfw" base_Element="_855GsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_856U0KM0EeOp6bjTuv3lfw" base_Element="_855twaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_85674KM0EeOp6bjTuv3lfw" base_Element="_856U0aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_856746M0EeOp6bjTuv3lfw" base_Element="_85674aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86tmEKM0EeOp6bjTuv3lfw" base_Element="_86s_AKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86uNIqM0EeOp6bjTuv3lfw" base_Element="_86uNIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86u0MqM0EeOp6bjTuv3lfw" base_Element="_86u0MKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86vbQqM0EeOp6bjTuv3lfw" base_Element="_86vbQKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86wCUKM0EeOp6bjTuv3lfw" base_Element="_86vbQ6M0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86wpYKM0EeOp6bjTuv3lfw" base_Element="_86wCUaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86x3gKM0EeOp6bjTuv3lfw" base_Element="_86xQcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86yekKM0EeOp6bjTuv3lfw" base_Element="_86x3gaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86zssKM0EeOp6bjTuv3lfw" base_Element="_86zFoKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_860TwKM0EeOp6bjTuv3lfw" base_Element="_86zssaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86060KM0EeOp6bjTuv3lfw" base_Element="_860TwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_861h4KM0EeOp6bjTuv3lfw" base_Element="_86060aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_862I8KM0EeOp6bjTuv3lfw" base_Element="_861h4aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_862wAqM0EeOp6bjTuv3lfw" base_Element="_862wAKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_863-IKM0EeOp6bjTuv3lfw" base_Element="_863XEKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_864lMKM0EeOp6bjTuv3lfw" base_Element="_863-IaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_865MQKM0EeOp6bjTuv3lfw" base_Element="_864lMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_865zUKM0EeOp6bjTuv3lfw" base_Element="_865MQaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_866aYaM0EeOp6bjTuv3lfw" base_Element="_865zUaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_867BcqM0EeOp6bjTuv3lfw" base_Element="_867BcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_868PkKM0EeOp6bjTuv3lfw" base_Element="_867ogKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_8682oKM0EeOp6bjTuv3lfw" base_Element="_868PkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_869dsKM0EeOp6bjTuv3lfw" base_Element="_8682oaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86-EwKM0EeOp6bjTuv3lfw" base_Element="_869dsaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86-r0KM0EeOp6bjTuv3lfw" base_Element="_86-EwaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86_58KM0EeOp6bjTuv3lfw" base_Element="_86_S4KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_86_586M0EeOp6bjTuv3lfw" base_Element="_86_58aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87AhAqM0EeOp6bjTuv3lfw" base_Element="_87AhAKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87BIEqM0EeOp6bjTuv3lfw" base_Element="_87BIEKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87CWMKM0EeOp6bjTuv3lfw" base_Element="_87BvIKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87C9QKM0EeOp6bjTuv3lfw" base_Element="_87CWMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87DkUKM0EeOp6bjTuv3lfw" base_Element="_87C9QaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87EycKM0EeOp6bjTuv3lfw" base_Element="_87ELYKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87FZgKM0EeOp6bjTuv3lfw" base_Element="_87EycaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87GAkKM0EeOp6bjTuv3lfw" base_Element="_87FZgaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87GnoKM0EeOp6bjTuv3lfw" base_Element="_87GAkaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87HOsKM0EeOp6bjTuv3lfw" base_Element="_87GnoaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87H1wqM0EeOp6bjTuv3lfw" base_Element="_87H1wKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87JD4KM0EeOp6bjTuv3lfw" base_Element="_87Ic0KM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87Jq8KM0EeOp6bjTuv3lfw" base_Element="_87JD4aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87KSAKM0EeOp6bjTuv3lfw" base_Element="_87Jq8aM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87K5EKM0EeOp6bjTuv3lfw" base_Element="_87KSAaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87LgIKM0EeOp6bjTuv3lfw" base_Element="_87K5EaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87MHMKM0EeOp6bjTuv3lfw" base_Element="_87LgIaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87MuQKM0EeOp6bjTuv3lfw" base_Element="_87MHMaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87NVUKM0EeOp6bjTuv3lfw" base_Element="_87MuQaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87N8YKM0EeOp6bjTuv3lfw" base_Element="_87NVUaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87OjcqM0EeOp6bjTuv3lfw" base_Element="_87OjcKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87PKgqM0EeOp6bjTuv3lfw" base_Element="_87PKgKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87QYoKM0EeOp6bjTuv3lfw" base_Element="_87PxkKM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87Q_sKM0EeOp6bjTuv3lfw" base_Element="_87QYoaM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87RmwKM0EeOp6bjTuv3lfw" base_Element="_87Q_saM0EeOp6bjTuv3lfw"/>
  <UMLLabProfile:Reference xmi:id="_87SN0KM0EeOp6bjTuv3lfw" base_Element="_87RmwaM0EeOp6bjTuv3lfw"/>
</xmi:XMI>
